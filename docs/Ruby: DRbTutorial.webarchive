bplist00Ò_WebMainResource_WebSubresourcesÕ	
_WebResourceData_WebResourceMIMEType_WebResourceTextEncodingName^WebResourceURL_WebResourceFrameNameOyì<html><head>


<script type="text/javascript" src="/static/js/analytics.js"></script><style type="text/css"></style>
<script type="text/javascript">archive_analytics.values.server_name="wwwb-app4.us.archive.org";archive_analytics.values.server_ms=198;</script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css">


  <title>Ruby: DRbTutorial</title>
  <link type="application/rss+xml" rel="alternate" title="RubyGarden site changes" href="/rss">
<link type="application/rss+xml" rel="alternate" title="Ruby wiki changes" href="/Ruby/feeds">
<link type="application/rss+xml" rel="alternate" title="Ruby:DRbTutorial page changes" href="/Ruby/feeds/rss/DRbTutorial">
  <link href="/web/20070711135306cs_/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773" media="screen" rel="Stylesheet" type="text/css">
<link href="/web/20070711135306cs_/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773" media="screen" rel="Stylesheet" type="text/css">
  <script src="/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498" type="text/javascript"></script>
<script src="/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/effects.js?1147216498" type="text/javascript"></script>
<script src="/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498" type="text/javascript"></script>
<script src="/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/controls.js?1147216498" type="text/javascript"></script>
<script src="/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/application.js?1147216498" type="text/javascript"></script>
<style id="style-1-cropbar-clipper">/* Copyright 2014 Evernote Corporation. All rights reserved. */
.en-markup-crop-options {
    top: 18px !important;
    left: 50% !important;
    margin-left: -100px !important;
    width: 200px !important;
    border: 2px rgba(255,255,255,.38) solid !important;
    border-radius: 4px !important;
}

.en-markup-crop-options div div:first-of-type {
    margin-left: 0px !important;
}
</style><style>.pkt_added {text-decoration:none !important;}</style></head>

<body><div id="wm-ipp" lang="en" style="display: block;" class="">

<div style="position:fixed;left:0;top:0;width:100%!important">
<div id="wm-ipp-inside">
   <table style="width:100%;"><tbody><tr>
   <td id="wm-logo">
       <a href="/web/" title="Wayback Machine home page"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"></a>
   </td>
   <td class="c">
       <table style="margin:0 auto;"><tbody><tr>
       <td class="u" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb"><input type="text" name="url" id="wmtbURL" value="http://wiki.rubygarden.org/Ruby/page/show/DrbTutorial" style="width:400px;" onfocus="this.focus();this.select();"><input type="hidden" name="type" value="replay"><input type="hidden" name="date" value="20070711135306"><input type="submit" value="Go"><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td class="n" rowspan="2">
           <table><tbody>
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr class="m">
           	<td class="b" nowrap="nowrap">
		
		    <a href="/web/20070217144414/http://wiki.rubygarden.org/Ruby/page/show/DrbTutorial" title="17 Feb 2007">FEB</a>
		
		</td>
		<td class="c" id="displayMonthEl" title="You are here: 13:53:06 Jul 11, 2007">Jul</td>
		<td class="f" nowrap="nowrap">
		
		    <a href="/web/20070821003245/http://wiki.rubygarden.org/Ruby/page/show/DRbTutorial" title="21 Aug 2007"><strong>AUG</strong></a>
		
                </td>
	    </tr>
           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr class="d">
               <td class="b" nowrap="nowrap">
               
                   <a href="/web/20070217144414/http://wiki.rubygarden.org/Ruby/page/show/DrbTutorial" title="14:44:14 Feb 17, 2007"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0"></a>
               
               </td>
               <td class="c" id="displayDayEl" style="width:34px;font-size:24px;" title="You are here: 13:53:06 Jul 11, 2007">11</td>
	       <td class="f" nowrap="nowrap">
               
		   <a href="/web/20070821003245/http://wiki.rubygarden.org/Ruby/page/show/DRbTutorial" title="0:32:45 Aug 21, 2007"><img src="/static/images/toolbar/wm_tb_nxt_on.png" alt="Next capture" width="14" height="16" border="0"></a>
	       
	       </td>
           </tr>
           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr class="y">
	       <td class="b" nowrap="nowrap">
               
                   2006
               
               </td>
               <td class="c" id="displayYearEl" title="You are here: 13:53:06 Jul 11, 2007">2007</td>
	       <td class="f" nowrap="nowrap">
               
                   2008
               
	       </td>
           </tr>
           </tbody></table>
       </td>
       </tr>
       <tr>
       <td class="s">
           <a class="t" href="/web/20070711135306*/http://wiki.rubygarden.org/Ruby/page/show/DrbTutorial" title="See a list of every capture for this URL">22 captures</a>
           <div class="r" title="Timespan for captures of this URL">24 Oct 06 - 6 Nov 07</div>
       </td>
       <td class="k">
       <a href="/web/20030801000000/http://wiki.rubygarden.org/Ruby/page/show/DrbTutorial" id="wm-graph-anchor">
       <div id="wm-ipp-sparkline" title="Explore captures for this URL">
	 <img id="sparklineImgId" alt="sparklines" onmouseover="__wm.st(1)" onmouseout="__wm.st(0)" onmousemove="__wm.mv(event,this)" width="550" height="27" border="0" src="/web/jsp/graph.jsp?graphdata=550_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000841_2007:6:040000130010_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000_2014:-1:000000000000_2015:-1:000000000000_2016:-1:000000000000_2017:-1:000000000000">
       <div class="yt" style="display: none; width: 25px; height: 27px; left: 175px;"></div><div class="mt" style="display: none; width: 2px; height: 27px; left: 190px;"></div></div>
       </a>
       </td>
       </tr></tbody></table>
   </td>
   <td class="r">
       <a href="#close" onclick="__wm.h();return false;" style="background-image:url(/static/images/toolbar/wm_tb_close.png);top:5px;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="background-image:url(/static/images/toolbar/wm_tb_help.png);bottom:5px;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>
</div>
</div>
</div>


<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script type="text/javascript" src="/static/js/disclaim-element.js"></script>
<script type="text/javascript" src="/static/js/graph-calc.js"></script>
<script type="text/javascript">//<![CDATA[
var __wm = (function(imgWidth,imgHeight,yearImgWidth,monthImgWidth){
var wbPrefix = "/web/";
var wbCurrentUrl = "http://wiki.rubygarden.org/Ruby/page/show/DrbTutorial";

var firstYear = 1996;
var displayDay = "11";
var displayMonth = "Jul";
var displayYear = "2007";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
var $D=document,$=function(n){return document.getElementById(n)};
var trackerVal,curYear = -1,curMonth = -1;
var yearTracker,monthTracker;
function showTrackers(val) {
  if (val===trackerVal) return;
  var $ipp=$("wm-ipp");
  var $y=$("displayYearEl"),$m=$("displayMonthEl"),$d=$("displayDayEl");
  if (val) {
    $ipp.className="hi";
  } else {
    $ipp.className="";
    $y.innerHTML=displayYear;$m.innerHTML=displayMonth;$d.innerHTML=displayDay;
  }
  yearTracker.style.display=val?"inline":"none";
  monthTracker.style.display=val?"inline":"none";
  trackerVal = val;
}
function trackMouseMove(event,element) {
  var eventX = getEventX(event);
  var elementX = getElementX(element);
  var xOff = Math.min(Math.max(0, eventX - elementX),imgWidth);
  var monthOff = xOff % yearImgWidth;

  var year = Math.floor(xOff / yearImgWidth);
  var monthOfYear = Math.min(11,Math.floor(monthOff / monthImgWidth));
  // 1 extra border pixel at the left edge of the year:
  var month = (year * 12) + monthOfYear;
  var day = monthOff % 2==1?15:1;
  var dateString = zeroPad(year + firstYear) + zeroPad(monthOfYear+1,2) +
    zeroPad(day,2) + "000000";

  $("displayYearEl").innerHTML=year+firstYear;
  $("displayMonthEl").innerHTML=prettyMonths[monthOfYear];
  // looks too jarring when it changes..
  //$("displayDayEl").innerHTML=zeroPad(day,2);
  var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
  $("wm-graph-anchor").href=url;

  if(curYear != year) {
    var yrOff = year * yearImgWidth;
    yearTracker.style.left = yrOff + "px";
    curYear = year;
  }
  if(curMonth != month) {
    var mtOff = year + (month * monthImgWidth) + 1;
    monthTracker.style.left = mtOff + "px";
    curMonth = month;
  }
}
function hideToolbar() {
  $("wm-ipp").style.display="none";
}
function bootstrap() {
  var $spk=$("wm-ipp-sparkline");
  yearTracker=$D.createElement('div');
  yearTracker.className='yt';
  with(yearTracker.style){
    display='none';width=yearImgWidth+"px";height=imgHeight+"px";
  }
  monthTracker=$D.createElement('div');
  monthTracker.className='mt';
  with(monthTracker.style){
    display='none';width=monthImgWidth+"px";height=imgHeight+"px";
  }
  $spk.appendChild(yearTracker);
  $spk.appendChild(monthTracker);

  var $ipp=$("wm-ipp");
  $ipp&&disclaimElement($ipp);
}
return{st:showTrackers,mv:trackMouseMove,h:hideToolbar,bt:bootstrap};
})(550, 27, 25, 2);//]]>
</script>
<style type="text/css">
body {
  margin-top:0 !important;
  padding-top:0 !important;
  min-width:800px !important;
}
</style>

<script type="text/javascript">__wm.bt();</script>
<!-- END WAYBACK TOOLBAR INSERT -->

<div class="wikiheader">
  <div class="wikilogin"><a href="/web/20070711135306/http://wiki.rubygarden.org/login">login</a></div>        
  
  <h1>
    <a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/back_links/DRbTutorial" class="wikipagelink">DRbTutorial</a>
    <span class="wikiname">
      (<a href="/web/20070711135306/http://wiki.rubygarden.org/">Ruby</a>)
    </span>
  </h1>

  
  <div class="wikitoobar"><a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/HomePage" class="wikipagelink">HomePage</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/recent_changes">RecentChanges</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/users/show/90748">Preferences</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/wiki/list">Wikis</a>
| <a href="/web/20070711135306/http://rubygarden.org/">RubyGarden</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/feeds"><img alt="Feed-icon-16x16" border="0" height="16" src="/web/20070711135306im_/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497" width="16"></a></div>
  <div class="hidden" id="additional_toolbar"><hr class="wikiheaderline"></div>
  <hr class="wikilineheader" clear="both">
  
  
  
</div>

<div class="wikitext">


<h1>DRb - Distributed Ruby</h1>
<p>
This page provides an introduction to DRb, and a place where hints and tips can be added.
</p><p>
</p><h2>What is DRb?</h2>
<p>
DRb (Distributed Ruby) is remote method calling for Ruby. It's written in Ruby and supplied as part of the standard library set. Because it serializes objects using Marshal, which is written in C, it's surprisingly fast. 50 method calls per second is easily achievable.
</p><p>
Let's start with a simple example. Here's server.rb, where we create a single instance of an object (in this case a hash) and share it on TCP port 9000.
</p><p>
</p><pre>  require 'drb'

  myhash = { :counter =&gt; 0 }
  def myhash.inc(elem)
    self[elem] = self[elem].succ
  end

  DRb.start_service('druby://localhost:9000', myhash)  # replace localhost with 0.0.0.0 to allow conns from outside
  DRb.thread.join
</pre>
<p>
And here's client.rb:
</p><p>
</p><pre>  require 'drb'
  DRb.start_service
  obj = DRbObject.new(nil, 'druby://localhost:9000')

  puts obj[:counter]
  obj.inc(:counter)
  puts obj[:counter]

  puts "Last access time = #{obj[:lastaccess]}"
  obj[:lastaccess] = Time.now
</pre>
<p>
Start the server in one window (or in the background), and in another window run the client a few times:
</p><p>
</p><pre>  $ ruby client.rb
  0
  1
  Last access time = 
  $ ruby client.rb
  1
  2
  Last access time = Fri Oct 22 22:23:59 BST 2004
</pre><p>
The client can happily be run on a remote machine - just change 'localhost' to the hostname or IP address where the server is running.
</p><p>
Even just this simple example is immensely powerful. The above object could be used as a shared data store for session data on a webserver. Each web page request can look up and store information in this shared object. It works whether the web pages are served via standalone CGI scripts, Webrick threads, Apache mod_ruby, or fcgi/mod_fastcgi. It even works if you have a cluster of webservers. Furthermore, the session data is not lost if you restart Apache.
</p><p>
</p><h2>So how does it work?</h2>
<p>
DRb is actually rather sophisticated and elegant in its design, but the fundamental principle is very straightforward.
</p><p>
DRb packages up a method call as an array containing the method name and the arguments, Marshals it into a stream of bytes, and squirts it at the server. The success or failure (exception), plus the return value from the method call, are Marshalled back as the response.
</p><p>
Since DRb is written in Ruby, you can look at the code, which contains lots of comments and examples. It will be on your system in a location like <tt>/usr/local/lib/ruby/1.8/drb/drb.rb</tt>
</p><p>
</p><h2>Security concerns</h2>
<p>
If you are using a DRb object to store session data, make sure that only the webserver can contact your DRb object, and that it is not directly reachable from the outside world, otherwise unwelcome guests could directly manipulate its contents. You can bind it to localhost (127.0.0.1) if all clients are on the same machine; otherwise you can put it on a separate private network, or use firewall rules or DRb ACLs to block access from unwanted clients. It is important to do this before calling start_service.
</p><p>
</p><pre>  require 'drb'
  require 'drb/acl'

  acl = ACL.new(%{deny all
                  allow localhost
                  allow 192.168.1.*})
  DRb.install_acl(acl)

  DRb.start_service('druby://localhost:9000', obj)
</pre>
<p>
Beware that every Object contains methods which could be very dangerous if called by a hostile party. Some of these are private (e.g. exec, system), and DRb prevents these being called, but there are other public methods which are equally dangerous (e.g. send, instance_eval, instance_variable_set). Consider for example <tt>obj.instance_eval("`rm -rf /*`")</tt>
</p><p>
So sharing an object with the whole Internet is a risky business. If you're going to do this then you should run with at least <tt>$SAFE=1</tt>, and you should start your object from a blank slate without these dangerous methods included. You can achieve that like this:
</p><p>
</p><pre>  class BlankSlate
    safe_methods = %w{__send__ __id__ inspect respond_to? to_s}
    (instance_methods - safe_methods).each do |method|
      undef_method method
    end
  end

  class MyService &lt; BlankSlate
    def increase_count
      @count ||= 0
      @count += 1
    end
  end

  DRb.start_service('druby://localhost:9000', MyService.new)
</pre>
<p>
Note that this example doesn't use initialize() for setting @count to 0. If it did this clients would also be able to reset @count.
</p><p>
Here's an alternative implementation from Evil-Ruby - <a href="/web/20070711135306/http://rubyforge.org/projects/evil/">HTTP://rubyforge.org/projects/evil/</a>
</p><pre>  # You can derivate your own Classes from this Class
  # if you want them to have no preset methods.
  #
  #   klass = Class.new(KernellessObject) { def inspect; end }
  #   klass.new.methods # raises NoMethodError
  #
  # Classes that are derived from KernellessObject
  # won't call #initialize from .new by default.
  #
  # It is a good idea to define #inspect for subclasses,
  # because Ruby will go into an endless loop when trying
  # to create an exception message if it is not there.
  class KernellessObject
    class &lt;&lt; self
      def to_internal_type; ::Object.to_internal_type; end
  
      def allocate
        obj = ::Object.allocate
        obj.class = self
        return obj
      end
  
      alias :new :allocate
    end
  
    self.superclass = nil
  end
</pre>
<p>
Additionally, rather than sharing your original object, you may wish to build a wrapper object and share that instead. The wrapper object can have a limited set of methods (just the ones you really want to share), validate the parameters of incoming data, and delegate to another object when the data has been sanitised.
</p><p>
</p><h2>Thread-safety issues</h2>
<p>
Each incoming method call which hits the object you've shared by DRb is started in a new thread. This is pretty essential if you think about it; there may be many clients, and the server can't control when the clients decide to send method calls to it. DRb does not serialise the requests, so that one client can't block out the other clients.
</p><p>
However, this does mean you have to take the same care with your DRb object as you would in any other threaded application. Consider what happens, for example, if two clients both decided to run
</p><p>
</p><pre>  obj[:counter] = obj[:counter] + 1
</pre><p>
at the same time. It might happen that both clients would retrieve obj[:counter] and see the same value (say 100), then independently add 1, and then both write back 101. That's probably not what you want, if :counter is supposed to generate unique sequence numbers.
</p><p>
Even the method myhash.inc shown at the top of this page suffers the same problem, because two clients could decide to call inc(:counter) at the same time, causing two threads on the server to suffer the same race condition. The fix is to protect the increment operation with a Mutex:
</p><p>
</p><pre>  require 'drb'
  require 'thread'

  class MyStore
    def initialize
      @hash = { :counter=&gt;0 }
      @mutex = Mutex.new
    end
    def inc(elem)
      @mutex.synchronize do
        self[elem] = self[elem].succ
      end
    end
    def [](elem)
      @hash[elem]
    end
    def []=(elem,value)
      @hash[elem] = value
    end
  end

  mystore = MyStore.new
  DRb.start_service('druby://localhost:9000', mystore)
  DRb.thread.join
</pre>
<p>
</p><h2>Why does the client run 'DRb.start_service'?</h2>
<p>
A very good question, which leads us on to another interesting aspect of DRb.
</p><p>
In normal operation, DRb will use Marshal to send the arguments to a method call; when they are unmarshalled at the server side, it will have a <i>copy</i> of those objects. The same applies to the result returned from the method; it will be marshalled, sent back, and the client will have a <i>copy</i> of that object.
</p><p>
In many simple cases this copying of objects is not a problem, but there are several cases where it might be:
</p><p>
</p><ul>
<li> If the server makes a change to the local copy it received, then the client won't see that change
</li><li> The argument or response objects could be extremely large, and you might not want to send them back and forth (such as an object which holds references to other objects, forming a tree)
</li><li> Some types of objects cannot be marshalled at all: they include files, sockets, procs/blocks, objects with a singleton class, and any object which contains those objects indirectly, e.g. in an instance variable.
</li></ul><p>
In these cases, DRb can instead send over a 'proxy object' containing contact details to allow the original object to be called via DRb: that is, the hostname and port where the original object can be found. This is done automatically for any object which cannot be marshalled, or you can force it by including DRbUndumped in your object.
</p><p>
How can we demonstrate this? Well, consider the class defined in the following file, foo.rb
</p><p>
</p><pre>  class Foo
    def initialize(x)
      @x = x
    end
    def inc
      @x = @x.succ
    end
  end
</pre><p>
Now, let's have a server which accepts an object and calls 'inc' on it:
</p><p>
</p><pre>  require 'drb'
  require 'foo'
  
  class Server
    def update(obj)
      obj.inc
    end
  end
  
  server = Server.new
  DRb.start_service('druby://localhost:9001', server)
  DRb.thread.join
</pre>    
<p>
Here's the corresponding client:
</p><p>
</p><pre>  require 'drb'
  require 'foo'

  DRb.start_service
  obj = DRbObject.new(nil, 'druby://localhost:9001')
  a = Foo.new(10)
  b = Foo.new(20)
  p a
  p b
  obj.update(a)
  obj.update(b)
  p a
  p b
</pre>
<p>
Now, here's what happens if we run it:
</p><p>
</p><pre>  $ ruby client2.rb
  #&lt;Foo:0x817e760 @x=10&gt;
  #&lt;Foo:0x817e74c @x=20&gt;
  #&lt;Foo:0x817e760 @x=10&gt;
  #&lt;Foo:0x817e74c @x=20&gt;
</pre><p>
Oops. We passed across our objects 'a' and 'b', but because they were copied onto the server, only the local copies got updated by 'inc'. The objects on the client are unaffected.
</p><p>
Now try modifying the definition of Foo like this:
</p><p>
</p><pre>  class Foo
    include DRbUndumped
    ... same as before
</pre>
<p>
Or alternatively you can modify the client program like this:
</p><p>
</p><pre>  a = Foo.new(10)
  b = Foo.new(20)
  a.extend DRbUndumped
  b.extend DRbUndumped
  ... same as before
</pre>
<p>
And now the result is what we'd hope for:
</p><p>
</p><pre>  $ ruby client2.rb
  #&lt;Foo:0x817e648 @x=10&gt;
  #&lt;Foo:0x817e634 @x=20&gt;
  #&lt;Foo:0x817e648 @x=11&gt;
  #&lt;Foo:0x817e634 @x=21&gt;
</pre><p>
So what's happened is, instead of marshalling across an instance of Foo, we have marshalled across the information needed to build a proxy object: it contains the client's hostname, port, and object id which can be used to talk to the original object. When we pass across the proxy object for 'a' to the server, and it calls obj.inc, the 'inc' method call is made back over DRb to the client machine where object 'a' actually lives. You have effectively built a remote 'reference' to the object which can be passed around much like a normal object reference, except it can be handed from machine to machine. Method calls via this reference hit the same object.
</p><p>
Now, this is why the client program needs to run DRb.start_service - even though it's a "client" from our point of view, there might be method call arguments which generate these DRb proxy 'references', at which point the client also becomes a server for those objects.
</p><p>
We didn't specify a host or port here, so DRb chooses any spare TCP port on the system, and the host is whatever the system hostname is according to the 'gethostname' call - e.g. if the machine is called <tt>server.example.com</tt> then DRb might choose <tt>druby://server.example.com:45123</tt>
</p><p>
These two-way method calls can be a problem though when there is a firewall between the two machines. You can choose a fixed port on the client side in DRb.start_service instead of having one chosen dynamically; that lets you open up a hole in the firewall for DRb. However, if you are behind a NAT firewall, it almost certainly won't work at all.
</p><p>
</p><h2>Running DRb over ssh</h2>
<p>
One way to solve the problem with two-way method calls through a firewall is to run DRb over SSH. Not only do you get two-way operation with just a single outbound TCP connection through the firewall; you also have your method calls securely encrypted!
</p><p>
Here's how to set it up.
</p><p>
1. Choose one port for the client end (say 9000) and one for the server end (say 9001)
</p><p>
2. Establish an ssh connection with a pair of tunnels: port 9001 at the client side is redirected to port 9001 at the server side, and port 9000 at the server side is redirected to port 9000 at the client side.
</p><p>
</p><pre>  $ ssh -L9001:127.0.0.1:9001 -R9000:127.0.0.1:9000 server.example.com
</pre><p>
The -L flag requests that connections to port 9001 at the local (client) side are redirected through the ssh tunnel, and reconnected to 127.0.0.1:9001 at the server side. The -R flag request that connections to port 9000 at the remote (server) side are redirected back down the ssh tunnel, and connected to 127.0.0.1:9000 at the client side.
</p><p>
3. At the server side, do DRb.start_service('druby://127.0.0.1:9001', a) as you would normally
</p><p>
4. At the client side, do DRb.start_service('druby://127.0.0.1:9000') instead of just DRb.start_service. This gives us a fixed port number to work from.
</p><p>
5. At the client side, connect to the remote object as:
</p><pre>  obj = DRbObject.new(nil, 'druby://127.0.0.1:9001')
</pre>
<p>
Voila, you are up and running. You can try the DRbUndumped example from above, with the client behind a NAT firewall. Also notice that the ssh -L and -R options bind to 127.0.0.1 by default, so people on other machines cannot connect to the tunnel endpoints (although of course, other people on the same machine can do so).
</p><p>
You could try using the Net::SSH module to establish the ssh connection and the tunnels, instead of using the command-line ssh client. [If you've done this, insert example here]
</p><p>
</p><h2>Running DRb over SSL</h2>
<p>
SSL is another way to secure and encrypt your connections (note: SSL and SSH are *not* the same thing!)
</p><p>
Online tutorial: <a href="/web/20070711135306/http://www.google.com/url?sa=D&amp;q=http%3A%2F%2Fsegment7.net%2Fprojects%2Fruby%2Fdrb%2FDRbSSL%2F">HTTP://segment7.net/projects/ruby/drb/DRbSSL/</a>
</p><p>
</p><h2>Running DRuby through firewalls - ruby-only solution</h2>
( <a href="/web/20070711135306/http://www.google.com/url?sa=D&amp;q=http%3A%2F%2Fwww.ruby-talk.org%2Fcgi-bin%2Fscat.rb%2Fruby%2Fruby-talk%2F89976">HTTP://www.ruby-talk.org/cgi-bin/scat.rb/ruby/ruby-talk/89976</a> )
Often a client has firewall installed, so standard DRb will not be able to make callbacks, making block/io/DRbUndumped<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/edit/DRbTutorial/DRbUndumped" class="wikipageedit">?</a> arguments useless. To make sure DRb operates as normal, one can use 
<a href="/web/20070711135306/http://rubyforge.org/projects/drbfire">HTTP://rubyforge.org/projects/drbfire</a> and <a href="/web/20070711135306/http://drbfire.rubyforge.org/classes/DRbFire.html">HTTP://drbfire.rubyforge.org/classes/DRbFire.html</a>
<p>
from documentation:
</p><li> Start with <tt>require 'drb/drbfire'</tt>.
</li><li>
Use <tt>drbfire://</tt> instead of <tt>druby://</tt> when
specifying the server url.
</li><li>
When calling <tt>DRb.start_service</tt> on the client, specify
the server's uri as the uri (as opposed to the normal usage, which
is to specify *no* uri).
</li><li>
Specify the right configuration when calling
<tt>DRb.start_service</tt>, specifically the role to use.
Server: <tt>D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::ROLE =&gt; D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::SERVER</tt>
and client: <tt>D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::ROLE =&gt; D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::CLIENT</tt>
</li>
<p>
Simple server:
</p><p>
</p><pre>   require 'drb/drbfire'
   front = ['a', 'b', 'c']
   DRb.start_service('drbfire://some.server.com:5555', front, D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::ROLE =&gt; D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::SERVER)
   DRb.thread.join
</pre><p>
And a simple client:
</p><p>
</p><pre>   require 'drb/drbfire'
   DRb.start_service('drbfire://some.server.com:5555', nil, D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::ROLE =&gt; D<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/RbFire" class="wikipagelink">RbFire</a>::CLIENT)
   DRbObject<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/edit/RbObject" class="wikipageedit">?</a>.new(nil, 'drbfire://some.server.com:5555').each do |e|
     p e
   end
</pre><p>
</p><hr noshade="" class="wikiline" size="2">
<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/CategoryDocumentation" class="wikipagelink">CategoryDocumentation</a> <a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/CategoryTutorial" class="wikipagelink">CategoryTutorial</a>



</div>

<hr class="wikilinefooter">

<div class="wikifooter">
  
  <div class="wikitoobar"><a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/HomePage" class="wikipagelink">HomePage</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/recent_changes">RecentChanges</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/users/show/90748">Preferences</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/wiki/list">Wikis</a>
| <a href="/web/20070711135306/http://rubygarden.org/">RubyGarden</a></div>
  <div wikieditbar=""><a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/edit/DRbTutorial" accesskey="E"><span class="wikiunder">E</span>dit text of this page</a>
| <a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/history/DRbTutorial">View other revisions</a></div>
  <div wikipostinfo="">Rev 15, Last edited at July 20, 2005 05:57 am by rgNoNameGiven / bloodhound.noc.clara.net (<a href="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/diff/DRbTutorial?old=14&amp;new=15">diff</a>)</div>
  
  <div class="wikisearch"><table><tbody><tr><td valign="top"><span class="wikiunder">F</span>ind:</td>
<td valign="top"><form action="/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/search" method="post">
<input accesskey="F" id="search_data_title_data" name="search_data[title_data]" size="32" type="text">
<input name="commit" type="submit" value="in Title">
<input name="commit" type="submit" value="in Body">
</form></td></tr></tbody></table></div>
</div>








<!--
     FILE ARCHIVED ON 13:53:06 Jul 11, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:35 Apr 4, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
</body></html>Ytext/htmlUUTF-8__http://web.archive.org/web/20070711135306/http://wiki.rubygarden.org/Ruby/page/show/DrbTutorialP¯$(-159=BFJNRV[`Ô_WebResourceResponseO!var archive_analytics = {
    startTime: new Date(),
    img_src: "//analytics.archive.org/0.gif",
    values: { service: 'wb' },
    
    onload_func: function() {
	var now = new Date();
	var loadtime = now - archive_analytics.startTime;

	var v = archive_analytics.values;
	v.loadtime = loadtime;
	v.timediff = -(now.getTimezoneOffset()/60);
	v.locale = archive_analytics.get_locale();
	// if no referrer set '-' as referrer
	v.referrer = document.referrer || '-';

        var string = archive_analytics.format_bug(v);
        var loadtime_img = new Image(100,25);
        loadtime_img.src = archive_analytics.img_src + "?" + string;
    },
    format_bug: function(values) {
        var ret = ['version=2'], count = 2;
        
        for (var data in values) {
            ret.push(encodeURIComponent(data) + "=" + encodeURIComponent(values[data]));
            count = count + 1;
        }
        ret.push('count=' + count);
        return ret.join("&");
    },
    get_locale: function() {
        if (navigator) {
	    return navigator.language || navigator.browserLanguage ||
		navigator.systemLanguage || navigator.userLanguage || '';
        }
        return '';
    },
    get_cookie: function(name) {
      var parts = document.cookie.split(name + "=");
      if (parts.length == 2) return parts.pop().split(";").shift();
      return 0;
    }
};

if (window.addEventListener) {
    window.addEventListener('load', archive_analytics.onload_func, false);
} else if (window.attachEvent) {
    window.attachEvent('onload', archive_analytics.onload_func);
}
_application/javascript_-http://web.archive.org/static/js/analytics.jsOêbplist00ÔstX$versionX$objectsY$archiverT$top  ¯$#)*0123QRSTUVWXYZ[\]^_`abcdefghimnU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 #"Ó$%'(WNS.base[NS.relative _-http://web.archive.org/static/js/analytics.jsÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ýe= ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬DEFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-Modified_application/javascript]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:35 GMT[{"Total":6}T1569Q0Zkeep-alive_W/"1569-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionary_application/javascriptÒ+,op_NSHTTPURLResponse£qr/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑuv_WebResourceResponse    # - 2 7 ^ d            £ ¦ © ¬ ® ° ² ´ ¶ · ¹ » ½ ¿ Á Ã Å Ì Ô à â ä æ&/58AJLNU]huwy{} ¢¤¦¨ª¬®°²´ÁÈÍÚßø',:Haoª®ÎÚßáì+0FJWpu¡¯ÁÄÚ             w              ÜÔO*N  .__wb_overlay {
    filter:alpha(opacity=60); /* IE */
    opacity: 0.6; /* Safari, Opera */
    -moz-opacity:0.6; /* FireFox */  
    opacity: 0.6;
    
    background-color: #000;
    position: fixed;
    width:100%;
    height:100%;
    top: 0px;
    left: 0px;
    padding: 0px !important;
    border: 0px !important;
    margin: 0px !important;
    border-radius: 0px !important;
    z-index: 2147483643 !important;
  }
  
  #__wb_record_overlay_div {
    cursor: wait !important;
  }
  


  .__wb_record_content {
    opacity: 1.0;
    position: fixed;
    top: 50%;
    left: 50%;
    margin: 0px !important;
    padding: 0px !important;

    background-color: #ffffff !important;
    border-radius: 8px;
    z-index: 2147483644 !important;
    box-shadow: 0 0 30px 5px #000;
    -moz-box-shadow: 0 0 30px 5px #000;    
    -webkit-box-shadow: 0 0 30px 5px #000;  
  }
    
  #__wb_record_content_loader {
    cursor: wait !important;
    padding-top: 30px !important;    
    left: 0 !important;
    right: 0 !important;
    margin: 5% !important;
    margin-top: -177px !important;
    width: 90% !important;
    max-width: 574px !important;
    height: 355px !important;  
  }
  
  #__wb_record_content_done {
    left: 0 !important;
    right: 0 !important;
    margin: 5% !important;
    margin-top: -177px !important;
    width: 90% !important;
    max-width: 855px !important;
    height: 355px !important;
  }
  
  .__wb_record_content > * {
    margin: auto !important;
    display: block !important;

    text-align: center !important;
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif !important;
  }
  
  .__wb_record_content > wb_h1 {
    font-size: 36px !important;
    color: #222 !important;
    margin: 0px 0px 0px 0px !important;
    padding: 0px !important;
    line-height: 2em;
    font-weight: normal !important;
    width: auto !important;
    height: auto !important;    
  }   
  
  .__wb_record_content > wb_p {
    font-size: 17px !important;
    color: #222 !important;    
    margin: 8px 0px 8px 0px !important;
    padding: 0px !important;
    line-height: 2em;
  }  
  
  .__wb_record_content > #_wb_logo  {
    margin-bottom: 10px !important;
  }
  
  .__wb_record_content > #_wb_spinner {
    margin-top: 30px !important;
    margin-bottom: 30px !important;    
  }
  
  .__wb_record_content > #_wb_curr_url {
    text-decoration: underline !important;
    font-weight: bold !important;
  }
  
  #__wb_record_content_done > #__wb_link {
    font-size: 20px !important;
    border: 1px !important;
    border-color: #aaa !important;
    border-style: solid !important;
    padding: 3px !important;
    text-align: center !important;
    width: 80% !important;
    height: auto !important;
  }
 
  #__wb_record_content_done > #__wb_link:focus {
    outline: 0px !important;
    border-color: #428bca !important;
  }
  
  /* DONATE */
  
  #__wb_record_content_done > #__wb_donate_close {
    font-size: 18px !important;
    width: auto !important;
    float: right;
    display: inline-block;
    margin: 0px !important;
    padding: 8px 8px 0px 0px !important;   
  }
  
  #__wb_donate_close > #__wb_record_done_close {
    cursor: pointer !important;
    display: inline-block;
    vertical-align: bottom !important;
  }
  
  #__wb_record_content_done > #__wb_donate_close a {
    color: #428bca !important;
  } 
  
  #__wb_record_content_done > #__wb_donate_close a:link {
    color: #428bca !important;
    text-decoration: none !important;
    margin-right: 16px !important;
  }
  
  #__wb_record_content_done > #__wb_donate_close a:visited {
    color: #428bca !important;
  } 
  
  #__wb_record_content_done > #__wb_donate_close a:hover {
    color: #00B1F7 !important;
  }

  #__wb_record_content_done a.social_button:hover {
    text-decoration: none !important;
    opacity: 0.7;
  }

#wm-ipp {
  width:100%;
  min-height:65px;
  min-width:800px;
  left:0;
  top:0;
  padding:0;
  margin:0;
  border-radius:0;
  background-color:transparent;
  font-size:11px;
}
#wm-ipp * {
  font-family:Lucida Grande, Helvetica, Arial, sans-serif;
  font-size:inherit;
  line-height:1.2;
  width:auto;
  outline:none;
  float:none;
}
#wm-ipp div, #wm-ipp tr, #wm-ipp td, #wm-ipp a, #wm-ipp form {
  padding:0;
  margin:0;
  border:none;
  border-radius:inherit;
  background-color:transparent;
  background-image:none;
  z-index:2147483640;
}
#wm-ipp table {
  border:none;
  border-collapse:collapse;
  margin:0;
  padding:0;
  width:auto;
  font-size:inherit;
}
#wm-ipp form input {
  padding:1px;
  height:auto;
  display:inline;
  margin:0;
}
#wm-ipp form input[type=submit] {
  padding:0 8px;
  margin:1px 0 1px 5px;
  width:auto !important;
}
#wm-ipp a:hover{
  text-decoration:underline !important;
}
#wm-ipp #wm-ipp-inside {
  width:98% !important;
  min-width:780px;
  margin: 0 auto;
  border:5px solid #000;
  border-top:none;
  background-color:rgba(255,255,255,0.9);
  -moz-box-shadow:1px 1px 4px #333;
  -webkit-box-shadow:1px 1px 4px #333;
  box-shadow:1px 1px 4px #333;
  border-radius:0 0 8px 8px;
}
/* selectors are intentionally verbose to ensure priority */
#wm-ipp #wm-logo {
  padding:0 10px;
  vertical-align:middle;
  min-width:110px;
}
#wm-ipp td.c {
  vertical-align:top;
  width:100%;
}
#wm-ipp td.c td.u {
  padding: 3px 0;
  text-align:center;
}
#wm-ipp td.c td.n {
  padding-left:5px;
}
#wm-ipp td.c td.n a {
  text-decoration:none;
  color:#33f;
  font-weight:bold;
}
#wm-ipp td.c td.n td.b {
  padding-right:6px !important;
  text-align:right !important;
  overflow:visible;
  white-space:nowrap;
  color:#99a;
  vertical-align:middle;
}
#wm-ipp td.c td.n td.c {
  background:#000;
  color:#ff0;
  font-weight:bold;
  text-align:center;
}
#wm-ipp.hi td.c td.n td.c {
  color:#ec008c;
}
#wm-ipp td.c td.n td.f {
  padding-left:6px !important;
  text-align:left !important;
  overflow:visible;
  white-space:nowrap;
  color:#99a;
  vertical-align:middle;
}
#wm-ipp td.c td.n tr.m td {
  text-transform:uppercase;
  white-space:nowrap;
  padding:2px 0;
}
#wm-ipp td.c td.s {
  padding-right:5px;
  text-align:center;
  vertical-align:bottom;
}
#wm-ipp td.c td.s a.t {
  color:#33f;
  font-weight:bold;
  line-height: 1.8;
}
#wm-ipp td.c td.s div.r {
  color: #666;
  font-size:9px;
  white-space:nowrap;
}
#wm-ipp td.c td.k {
  vertical-align:bottom;
  padding-bottom:2px;
}
#wm-ipp td.c td.n tr.y td, #wm-ipp td.c td.s {
  padding-bottom:2px;
}

div#wm-ipp-sparkline {
  position:relative;/* for positioning markers */
  white-space:nowrap;
  background-color:#fff;
  cursor:pointer;
  border-right:1px solid #ccc;
  line-height:0.9;
}
#sparklineImgId {
  position:relative;
  z-index:9012;
}
#wm-ipp-sparkline div.yt {
  position:absolute;
  z-index:9010 !important;
  background-color:#ff0 !important;
}
#wm-ipp-sparkline div.mt {
  position:absolute;
  z-index:9011 !important;
  background-color:#ec008c !important;
}  
#wm-ipp td.r {
  position:relative;
  padding-left:65px;/* to push td.c to the left */
}
#wm-ipp td.r a {
  display:block;
  padding:0 15px 0 0;
  color:#33f;
  border:none;
  position:absolute;
  right:5px;
  background-color:transparent;
  background-repeat:no-repeat !important;
  background-position:100% 100% !important;
}
/* Spinner */
#__wb_spinningSquaresG{        
  position: relative;
  width: 240px;
  height: 20px;
  
 
  padding: 0px !important;
  margin: 30px 0px 30px 160px !important;
  border: 0px !important;
  border-radius: 0px !important;
}

.__wb_spinningSquaresG {
   
      
  margin: 0px !important;
  padding: 0px !important;
  border: 0px !important;
  border-radius: 0px !important;
    
position:absolute;
top:0;
background-color:#000000;
width:22px;
height:22px;
-moz-animation-name:bounce_spinningSquaresG;
-moz-animation-duration:1.9s;
-moz-animation-iteration-count:infinite;
-moz-animation-direction:linear;
-moz-transform:scale(.3);
-webkit-animation-name:bounce_spinningSquaresG;
-webkit-animation-duration:1.9s;
-webkit-animation-iteration-count:infinite;
-webkit-animation-direction:linear;
-webkit-transform:scale(.3);
-ms-animation-name:bounce_spinningSquaresG;
-ms-animation-duration:1.9s;
-ms-animation-iteration-count:infinite;
-ms-animation-direction:linear;
-ms-transform:scale(.3);
-o-animation-name:bounce_spinningSquaresG;
-o-animation-duration:1.9s;
-o-animation-iteration-count:infinite;
-o-animation-direction:linear;
-o-transform:scale(.3);
animation-name:bounce_spinningSquaresG;
animation-duration:1.9s;
animation-iteration-count:infinite;
animation-direction:linear;
transform:scale(.3);
}

#__wb_spinningSquaresG_1{
left:0;
-moz-animation-delay:0.76s;
-webkit-animation-delay:0.76s;
-ms-animation-delay:0.76s;
-o-animation-delay:0.76s;
animation-delay:0.76s;
}

#__wb_spinningSquaresG_2{
left:30px;
-moz-animation-delay:0.95s;
-webkit-animation-delay:0.95s;
-ms-animation-delay:0.95s;
-o-animation-delay:0.95s;
animation-delay:0.95s;
}

#__wb_spinningSquaresG_3{
left:60px;
-moz-animation-delay:1.14s;
-webkit-animation-delay:1.14s;
-ms-animation-delay:1.14s;
-o-animation-delay:1.14s;
animation-delay:1.14s;
}

#__wb_spinningSquaresG_4{
left:90px;
-moz-animation-delay:1.33s;
-webkit-animation-delay:1.33s;
-ms-animation-delay:1.33s;
-o-animation-delay:1.33s;
animation-delay:1.33s;
}

#__wb_spinningSquaresG_5{
left:120px;
-moz-animation-delay:1.52s;
-webkit-animation-delay:1.52s;
-ms-animation-delay:1.52s;
-o-animation-delay:1.52s;
animation-delay:1.52s;
}

#__wb_spinningSquaresG_6{
left:150px;
-moz-animation-delay:1.71s;
-webkit-animation-delay:1.71s;
-ms-animation-delay:1.71s;
-o-animation-delay:1.71s;
animation-delay:1.71s;
}

#__wb_spinningSquaresG_7{
left:180px;
-moz-animation-delay:1.9s;
-webkit-animation-delay:1.9s;
-ms-animation-delay:1.9s;
-o-animation-delay:1.9s;
animation-delay:1.9s;
}

#__wb_spinningSquaresG_8{
left:210px;
-moz-animation-delay:2.09s;
-webkit-animation-delay:2.09s;
-ms-animation-delay:2.09s;
-o-animation-delay:2.09s;
animation-delay:2.09s;
}

@-moz-keyframes bounce_spinningSquaresG{
0%{
-moz-transform:scale(1);
background-color:#000000;
}

100%{
-moz-transform:scale(.3) rotate(90deg);
background-color:#FFFFFF;
}

}

@-webkit-keyframes bounce_spinningSquaresG{
0%{
-webkit-transform:scale(1);
background-color:#000000;
}

100%{
-webkit-transform:scale(.3) rotate(90deg);
background-color:#FFFFFF;
}

}

@-ms-keyframes bounce_spinningSquaresG{
0%{
-ms-transform:scale(1);
background-color:#000000;
}

100%{
-ms-transform:scale(.3) rotate(90deg);
background-color:#FFFFFF;
}

}

@-o-keyframes bounce_spinningSquaresG{
0%{
-o-transform:scale(1);
background-color:#000000;
}

100%{
-o-transform:scale(.3) rotate(90deg);
background-color:#FFFFFF;
}

}

@keyframes bounce_spinningSquaresG{
0%{
transform:scale(1);
background-color:#000000;
}

100%{
transform:scale(.3) rotate(90deg);
background-color:#FFFFFF;
}

}

Xtext/css_3http://web.archive.org/static/css/banner-styles.cssOÆbplist00ÔrsX$versionX$objectsY$archiverT$top  ¯##)*0123QRSTUVWXYZ[\]^_`abcdefghimU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 "Ó$%'(WNS.base[NS.relative _3http://web.archive.org/static/css/banner-styles.cssÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ýv ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬EFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-ModifiedXtext/css]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:35 GMT[{"Total":1}U10830Q0Zkeep-alive_W/"10830-1489169892000"Ubytes_Fri, 10 Mar 2017 18:18:12 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionaryÒ+,no_NSHTTPURLResponse£pq/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑtu_WebResourceResponse    # - 2 7 ] c ~          ¢ ¥ ¨ « ­ ¯ ± ³ µ ¶ ¸ º ¼ ¾ À Â Ä Ë Ó ß á ã å +4:=FOQSZbmz|~¡£¥§©«­¯±³µ·¹ÆÍÒßäý!,1?MVd£ÃÏÕ×âü"'=ANSgk¢¸             v              ºÕOõ




/*
     FILE ARCHIVED ON 3:23:00 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:36 Apr 4, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
 * Hacked in by David Black
 * in response to Gavin's complaint:
 */
tt 	{
	font-size: 125%;
}

a:hover { 
	color: #000000; 
	background-color: #f0d0d0; 
}

a:visited {
 	color: #800000;
}

a:link {
    	color: #404040;
}

table {
    font-family: verdana, arial, helvetica, Sans-Serif;
}

td {
    padding: 3px;
    font-size: 80%;
    font-family: verdana, arial, helvetica, Sans-Serif;
}

th {
  text-align: left;
}

body {
    background: #F8FFF8;
    background-image: url(/web/20071020032300/http://wiki.rubygarden.org/images/rgside.gif);
    background-repeat: no-repeat;
    color: black;
    margin-left: 10%;
    margin-right: 20%;
    font-size: 80%;
    line-height: 150%;
    font-family: verdana, arial, helvetica, Sans-Serif;
}

h1 {
    font-family: verdana, arial, helvetica, Sans-Serif;
    text-align: left;
    margin-top: 5%;
    margin-right: 10%;
}

h1 a:link {
    font-family: verdana, arial, helvetica, Sans-Serif;
    text-decoration: none;
    color: #802000;
}
h1 a:visited {
    font-family: verdana, arial, helvetica, Sans-Serif;
    text-decoration: none;
    color: #802000;
}

h3, h4, h5, h6 {
    font-family: verdana, arial, helvetica, Sans-Serif;
}

h2 {
    font-family: Times, Times Roman, Serif;
    font-variant: small-caps;
    color: #Fff8f8;
    background: #dF6060;
    padding-top: 0.2em;
    padding-bottom: 0.2em;
    padding-left: 2%;
}

div.header p.status { text-align: right; }
div.header p.last-modified { text-align: left; }

/*
li p {
    margin-top: -1ex;
}
*/

dt {
    font-weight: bold;
    margin-top: 2ex;
    margin-left: 1em;
}

address {
    color: gray;
    background: #EEEEEE;
    text-align: right;
    font-family: Times, serif;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
}

pre {
    border-right: #646464 1px solid;
    padding-right: 0.5em;
    border-top: #646464 1px solid;
    padding-top: 0.5em;
    border-left: #646464 1px solid;
    padding-left: 0.5em;
    border-bottom: #646464 1px solid;
    padding-bottom: 0.5em;
    white-space: pre;
    background-color: #f6e6e6;
    color: black;
    margin-left: 1em;
    width: 90%;
    display: block;
    font-size: 120%;
}

wombat {
    margin-right: 2em;
}

span.download {
    font-weight: normal;
    color: blue;
    background: #EEEEEE;
}

.path {
    font-family: Verdana, Arial, Helvetica, sans-serif;
}

.navi {
    text-align: right;
}

.headerURL {
    text-align: right;
    font-size: 8pt;
}

/* Added for rusemod -- JW */

.editlabel {
  font-weight: bold;
}

.editvalue {
  font-style: italic;
}

.wikilogin {
  float: right;
  text-align: right;
}
.wikiadmin {
  clear: both;
  float: right;
  left-margin: 100px;
}
.wikimemberbar {
  border: 2px solid #808080;
  padding: 0.2em 0.5em;  
  margin:  0.2em 0.2em;  
  background: #f8f8f8;
  font-size: 90%;
  clear: both;
  float: right;
  left-margin: 100px;
}
.wikiadminbar {
  clear: both;
  float: right;
  left-margin: 100px;
}
.post_approved {
  background: lightgreen;
}
.post_pending {
  background: yellow;
}
.post_spam {
  background: red;
}
.wikialert {
  color: white;
  background: #800000;
  padding: 3px 1em;
}
.wikireview {
  background: #ddd;
  padding: 0.5em 1em;
  margin: 0.5em 3em;
  border: black 1px solid;
}
.wikireview td {
  vertical-align: top;            
}
.wikianonymous {
  background: #ddd;
  padding: 0.5em 1em;
  margin: 0.5em 3em;
  border: black 1px solid;
}
.approval {
  background: yellow;
}
.spam {
  background: #ffc0c0;
}
.wikilineheader {
  clear: both;
}
.wikitoolbar {
  vertical-align: bottom;
}
.wikinotice {
  border: green 1px solid;
  color: green;
  font-size: 120%;
  padding: 0.5em 2em;
  margin: 1em 5em;
}
.wikiwarning {
  border: red 1px solid;
  color: red;
  font-size: 120%;
  padding: 0.5em 2em;
  margin: 1em 5em;
}
.wikiname {
  font-size: 60%;
  vertical-align: top;
}
a.wikiauthor_anon {
  color: black;
}
a.wikiauthor_guest {
  color: black;
}
a.wikiauthor_member {
  color: green;
}
a.wikiauthor_admin {
  color: blue;
}
a.wikiauthor_spammer {
  color: red;
}
a.wikipage_pending {
  color: yellow;
}
a.wikipost_approved {
  color: green;
}
a.wikipost_pending {
  color: black;
}
a.wikipost_approved_spam {
  color: red;
}
a.wikipost_pending_spam {
  color: red;
}
.hidden
{
  display: none;
}
.wikidiff_same {
  background: white;
}
.wikidiff_added {
  background: LightGreen;
}
.wikidiff_deleted {
  background: yellow;
}
.wikidiff_action {
  background: #ddd;
}
.wikidiff td {
  font-family: courier;
}
.wikidiff {
  margin: 0px 1em;
  padding: 0.5em 1em;
  border: 1px solid black;
}
.wikiunder {
  text-decoration: underline;
}
.twelvepoint { 
  font-size: 12pt;
}
.rubysidebar {
  background-color: pink;
  font-size: 9pt;
  border: 2pt black solid;
}
.red { color: red; }
Uutf-8_ghttp://web.archive.org/web/20070711135306cs_/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773O
 bplist00ÔX$versionX$objectsY$archiverT$top  ¯/#)*0123]^_`abcdefghijklmnopqrstuvwxyz{|}~U$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 .$Ó$%'(WNS.base[NS.relative _ghttp://web.archive.org/web/20071020032300cs_/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ý ÈÓ456I\WNS.keysZNS.objects¯789:;<=>?@ABCDEFGH	
¯JKLMNOPQRTUVWXYZ[ !"#$%&'()*+,-\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeZSet-Cookie_X-Archive-Orig-content-lengthVServer_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Orig-content-type\X-Page-Cache_X-Archive-Wayback-Perf_X-Archive-Guessed-CharsetTDate_X-Archive-Playback_X-Archive-Orig-connectionZConnection^Content-Length_text/css;charset=UTF-8_Sun, 21 May 2006 01:26:13 GMT_Sat, 20 Oct 2007 03:23:00 GMT_=JSESSIONID=2302C6371B618EA6C27D02F7E72745B3; Path=/; HttpOnlyT5027]Tengine/2.1.0_Sat, 20 Oct 2007 03:25:23 GMT_=<http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773>; rel="timegate", <http://web.archive.org/web/20071020032300/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:23:00 GMT", <http://web.archive.org/web/20060615185037/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:50:37 GMT", <http://web.archive.org/web/20061012220114/http://wiki.rubygarden.org/stylesheets/Ruby.css?1148174773>; rel="prev memento"; datetime="Thu, 12 Oct 2006 22:01:14 GMT"_"446fc1b5-13a3-4804a2"Xtext/cssTMISS_D{"IndexLoad":51,"IndexQueryTotal":51,"Total":358,"WArcResource":298}UUTF-8_Tue, 04 Apr 2017 12:04:36 GMTQ1UcloseZkeep-aliveT5365Ò+,_NSMutableDictionary£/\NSDictionaryÒ+,_NSHTTPURLResponse£/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 i o        ¡ ¨ « ® ± ´ · ¹ » ½ ¿ Á Â Ä Æ È Ê Ì Î Ð × ß ë í ï ñ[`ktz}¢­ÂÄÆÈÊÌÎÐÒÔÖØÚÜÞàâäæûýÿ	!.M`k¨­Ãáî#(=Yds¬Ì?¢§îô',1GKX]qu©¬Â                           ÄÔ !"#OGIF89aj _ç  ¢ú²ÆþºÞþÂêþÎòþÚ¦ú²ÎþÂòþâ¶þ²ÖþÂúþââþÊ¾þ¶úþÞòþæúþæâþÚÖþÎîþÖöþêÎþÊ®þ²¾þÆöþÚúþêæþÊ¶þ¾îþâöþæÞþÎ®þºÚþÖÆþÂÒþÒêþÖÚþÎúþîÊþÂºþ¾ÞþÚöþâ®þÂæþÚêþÞÒþÊúÊâþÖÂþ¶ÂþÆÊþÆ¦þ¶úÂæþÒöþÞîþÞòþÞÞþÒ²þÂÚþÒÂþºÆþÆÚþÂºþÆÒþÎæþÖ¾þÂêþÚÂþ¾ÒþÂ¢ú¾ÂþÊ¦úºæþÞºþº¶þÆâþÎÞþÖÂþÂÚþÆÆþÊÊþÊ²þº¦þÂâþÒÖþÚúþò¢úÂ¦úÂÎþÎºþÂÖþÒ¾þÊ²þÆÞþÆÖþÆ¾þºÒþÆ®þÆúÊ²þ²¾þ¾îþÚ¢úÎÚþÊþþâÂþÒ²þ¾¶þºöþîÖþÊ¢úºâþÞ¶þÂÒþÖÆþ¾ÎþÆÚþÚ¶þÊ¢úÆ¶þ¶îþæúÎ¦úÆ®þ¾²þ¶êþÒêþâúÆºþÊÂþÎÆþÎ¾þÎ²þÊÞþÊ®þÊæþÎ®þ¶ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ!ù
 ÿ ,    j _ þ ÿ	H° Á*\È°¡Ã#JH±¢Å3jÜÈ±£Ç CI²¤É(Sª\É²¥Ë0cÊI³¦Í8sêÜÉ³§Ï@
J´¨Ñ£H*]S!BT âbÊX±êØÊë¦ Á©©Tq\ÕÊ5-]u`Z@»BF)ñ%Ép²d	<XÃ\rp1¢ã«R»vt "äÆËnl°Áó CCñ!÷17Nsà8L=a¶mj;x¢§tÒ»5PL`Ã¦¶ñãÆeãû =8æ"½@àð	0ØÞ}umÚÈCþ ò}záÇ9\ª÷ð]¸ áäRç@Bûì2Ð0T@¨ AU.0Áqý tåÕ0AÅqPÆS8EjeÅ#põ R4ÐZw_á
#ÄÐÄ&XÀqÜ  eSàÑ
L@Bm7!B© 	PbpOÑäCHXGt W:tÅ¡°ÃPÙu
°A¡Saj*dWDB`D%PCAFZ¨AX SªP	 QS­ÕVp½õp96]]7pÀÆ(¼ØA8rÆ,´Ú*þÄJ´þ_QÔÕPÃ×q ¬² +PÄ Å÷ñðPQcêGÀØaçØ®­(`Ö-f`JÜJÔ~$¸f\vþùr«É¶[oÑ5fºÅ!7Ûà17A¶Í=]RÔQ{¤»µ¹o¼ñ: ÛÐ&eÔpWPµ¡qi<@aîPÔ]|±SQMU¥n5ÂpuU¯½§Ý%ÆÒ@¶Ì)Ì6V§@ AF G6tB4<µ$;[ÕY¼
+?Ì¼{f	A#´V&P3§j]Ü5Es ,C\q	#0Eþ(j+`]L8q nt[ÆXÁ¡6¬°Õ90¦£uÙkØÉ¦Ý
3
ÉÁ0\Áà¢VÃáè%l¡ÓpÅV©i5´ïv£r B¨þÃ)\«l%q](ª]âeÜü@q´cõÏ¸£wÃaè@ÁàY¿*aÙ=mµØþ`lñéöGr@0©äA¼÷&è ¨Ð	Z`6@LgZ»A&änKóH@tq zÂ,0'6 T
¡´ÆW¡£_ý´°ãÜ@þ0 Ëó$âìÉNùGÑBP`6ÐV 'èÀå©^0	!H@8Àª`¼S=<(Äé<)]
(¾ø0¢GfüÇ¡hèa:`~äÈ¡OQb¨È(?0[Ù@ PFIfsôá¤Ððè=lÅ×qÀöÈ§88Î*î9,Àp Ýp zÁù.§#= ²ÊòTF­`Å6ÐÍ
 aÅ´NBÄápÖrÄÊU´ÐKæ@à
!ÐL'
M "@pÀ2Ê-,þX¿l`Òèà	¦Îgs !¸ w°A(P8ïTW°Õå"Ó( 5GúNrºxaK> ÀVÀ¶á:´ÂÃ!déÔ2WïD©Z´AÀ `md¿Á¯8zÿäf  Ì&´+Ñ@PáÕ b÷ ø~ Õ	{¦µf XÚ?äà¥³ì¬g¢ÀÔj/GÂ@#¦4à¯5¸`KV>ôVYÂ©VU­mp±h5+Z	²'Íì_©#ØÝ¥,a­T.u6´m
ÝfCb°-þlWuÈ`öR 	ÀB¢ (JdóÉ_ùÕYêxöbí¡L6$&ðÌgÒÂÆó;åè`Øi¾n£-ÎÆaS Ó]ÌhTð-xõ5ßïxG^ÿ: zÓ^ü5]ÚÑNºªe$vaÉù×y±P®þªö»Õâlf¯*[èÖ·6pD '@ã`,m®²¤>
xI
$©?8Àzc`«ç$³+nÀ`-j¤Ùì ÂªÂ1^æ(ÂÆ£þD³YrîÊ`°He},"+,û}ø Z°þÈ Éòe(ÀÒ-0¡z³à ½µáÉ( À­Ø ú½Ý
Ý8ªÚ,¡ "èClå:ÌyÀBh=t 	\up-91èßÚâÑ)@ZXø´Ð<Ù,<
´XtIV\Ð¼Ú¬ OØt.Q   ch®ÜØ6RL?Õâ8 (ÁÐRÖ!´ÊgL(§ÃT`Xsm:ÂÀ£ U$$¡Kf~;mýà
ÂD_¿s1 s8Ã"Àª4¡°`Àw¯í¤Å4ÝNU09ÈJ¤Ímþ JrÊ4:zez°al­|§HðÁ¹i±¦?ëZéÂp<!fçZ#;ðÀË:ð©¦t±¡:¬¨ö=À
´ðHt¢KynY©
¡ªîq§´ ©W§¹;% [¬)ÏËÎª¬,§¹ADÐ3  f,%¢³_°H¶·J0/Èá
H3ÁÒTÃ£	<zpt=È9d  É¼A¨3t9  ¦è²åøUè8Ëê	.Óuc³g}´t¤ÈIª=åtÌÁO¹ÿE©Ì)ùÁè;Ã-ªHcqáIþV3`ÔW8ÃÆ°¸%h@JÚËp>à,¸ÃJ09à Æ°íã×aÑ £¡Û§~Ðm²£0±Þ¹¼~@Az75^úr
¦ä£NèóJg`ØA-5^¤ax?aQ±±+7Ða6P9¸íñ1õq,H0e w§aÐ5V Õ5Z[ñHcÕ5ú)0ÓÉ54r0({udpY@#d¨eØOÉ·l@à4)c}ú}\ÑKñY ¥1iAxm±)\H&ó6Ðx~øþÁv¨kGX4ðuØ¡+ÐS5c70TFw"ç Ï1¿>×!; HÌ-§¸>qoS±^¥q¸!¨Xé#*å 7PFB|,>(*ÿÂ?P,½(-ÀØkP4 *®!eò±déV:àW éÔç2-Ã3%Ð4;e`¹¤Z°FIA0R­Sd nÂÑ{G 8`#[Þçli¶fsî¤Ae±Dt p0swg?ÃÁHpóhqúQBÆôh³^F8Ða+8À(@ 7Lå@4IP@ðþý%`4W?#p@0A?°hY'ÿòh(Cdä ` ::¤<ZMµqNÚ6Dú@pz=KÂ[Â8`XÁõCjÆAIÉI¸RB[¢ÖAB *Ú±1à=Ñ O@¹¦Z(àT ÖØ#dÀ8bùâGsð©Å}D7}*22Ye@#À)8@l¶QDDaR!HQAù. G 0Ð8`_8 Êæ¥Cr¦1Þçs@ð@L-6 ´m¸=¥y8VyþâPÀWPXIéÃL(pmÐ4ãF8þ¶ðr *àSô(1Ö¡ vÑÙYG;ÃÓ0H°VÄAa2c=_"òA:ár8ò¢À,KÇeSÀv1x_gPücwÀ#"z,Ó~(aÒyã ¢PpI±bCfKPqÈdÒ2Z*}V5XÎu*I&""nÁ(*X
P	 DP°Ðle°IW|ÕbWàW òWöW@C:O;(ð¥ÕYæG0p¢A!d®÷5 }ð£A*8æ9e¹qûNV'êÂP,:P±þýàvPÊ%/ä lCSQOïüg¦>%|úpv¢B0!üRPaÑ9ÎapPzú^ì² Dp-ª¥pAGp KÄæm.`ø!¡4ñWh0` }P¡¹ZBPp"pàO±? hp!7/
¤÷Ã;eÁ¤Ål<Â@[vâZ` yôpP£f0é_ßÕ` @ÑAõô MôxÖ-à1ùcßU&Ð »[2J3<g9NIuþ"$Ð­k¯"	´¯Ê£=T~Äyi°	³WQ¤ÿ#ÐCÿBEF jÊÅl[ô² Xn¸8WInÁpkw	>{$lÐ­Õ[z;ó,p±¨³)ä´îÕl(  p`b$Ù¸mP6ðZ ¶/  °1®Õg)hDë&Z QÊy £õ:[1Å6'`ÂÄ&Ö R9à­e «×ëuÞuQÂ­Ð§·QmvM¸a>`«|úPp¼»7V~$RÄJ%þQÅ¡ D ¬vá±K[¡\ pÁgÚ h }  %À >z@`%ôL8àß1E[P¦ÑùÅ§¸© gÀ HDí1#°j!v.Ð0QðÉ²pQ=% m° }ðha@KùäK°p: z°±IeÐCp&Às [kÙ/6`AS(ª+Ù%ù8£@°SïÒZ ÐyBvÖè@"7Ü¹$§t)Bº%Ås	ÈáÐ"¥ÕË¨Õá}«áíbÆàá0ØÌò0ãYç\
P¥þ-%¸O?£ÂåQ2»ö:Ã9øE`C¡-ÃÇMòóWÁý©&Ï%[§1+C³e§qNãFûAy§ñ¥gð^ðIo¨­LWû1B  R)«Gõ Pp0ø80º\ø/óiI £K§#PÒý¡hQ`mà!|%»ëYP1°W¯Ë ,ðÊMÂY(ð S/¯ÃW M0£YÕMRÀ¡ _:ÅQw:`1"§3u2ea5ÃÃ-³^J 3v+{c±u7hÂ1Äß6 1@þ0pu]#î_§º ?À¤> 2TðÈG¡3KâB°q8"/ìj?÷t@Â	ãVÀ9ÑämxIu ûÔt8Ò¿Àv?ïâBuð,F' ÖJVq ºÌ8Ç±S6@ì:XðÔIáÁÓÅµÿ^êÑhº-upt`7ÓAN#7@p_ã ð¶âaø/;i=x1yÃ:· 5L°;Â#'-q1@0£0vZ`,3 à.oÐ¥=·M°ÃµÁµþq .À<¦ÐÜ[Á~ðzPÛ \ 3×1<çe¸DHËå¬Óö@ ÞºkhÆfì0êÝ*)¦|ÄÓamß=Q0Ä/ÀrB Y÷«sµ*DL ÖAAÌ)õSÐys}gpGßQSPj¡2Ø¬Ëx$ ²"UÃ¼k SÐPåÁ'zU3 LÈÿp.f®r#uR2|{]1ÚÒu]<·Õ[%Ð ÀÐ99jòYnã,p.Àò¡<@M åpq%HH æYÓ0êq ñJp Nþÿû#E`!¨e M*2}îéóáUÆ/ù¥pp"èY5¬ö%ÈöÌÞY)`+:yW=
3 jqâÆq çäOyªe0¥êâ ¹ÝVa)>Xª±¡è'Xer[M£d"êLÄM³Îg{.x²pdRq& âG ª£;ûsIÓáïÄ ðªBA¸1Anä(Ù1%QÎþ@%TÏ>Pî*G Eð_Ph´6;Ð´=ÛO²%$à#¢ï"«kdKLb[|N {añß¡gdþº¶M Ã±E w°$ë®Âµ*ð!@ïHHy6)^£»TrüÓÑ6¡Yê\-¾%(0C0]0ê!pqPêê  Åë^_Å¥9dâ BpmeíLöÃ§¦¥% j£=@@` v FApÀWp   V$3±\*E¥üòÇÔ`Áf¡BPHÐ¤1ê7Ñ²ý`±³.Æ,`v<Ý±¥¦¯.­/ö 0m-û(R/Ôs\¨¼(ø2Ñ²l  À¦
ðW]Ò60üÒo·òALþpMå^hbD%©qÛÑKòÕ%èPþ®Q\Õq·ÉíýØÇ[X¢(_àxiÐ3euðmÿÂW1¢×÷ä ¡Cà@(ÿDPáB>dxÀDe$HQ.p|ü(P´©£ D-]¾4XñF'%@sÇILd4¢p5¢L¦MJTÀa
ª(\Åjc®\7¬ 	JEëPâl&¼Åáí¤Îåw½ð<Ñc6í`ÂÊ``Óñ\ÆõòåËá C	_v*ñAbÆqåNþÀðî]Ðoÿ(»ójë¢¸QãÆ®elY!D·
Þ*6Äå°"(<,³FþP"Ùe*®[
 Ttdc·`\¡âxrò':/#¢Ìn @h¸2äG(ÞPq¥¬åýcÆAØ`²+ Ð!ÿL+8à-ÐÄÐ©$A2
û C_úAPp&Zø-Fñ¡!Bñ-ô
bäq¡,tÐâ'XAtx±G%*QØJ:aIY`!@ Êàôà
+/;ºèØã(>t Éº¼TABþ3-øè ÏFè "ø(%Ä!0-ê´¹h(äÎhã3°d
X!´pÁKº&ØÀ&t R§&"m´¼¼tà*«Àõ.¼<	8ÄÓÁÕ³&ÂÞr«4Ñ>UW\W O e
V6«1¼ÛuWx%j_%àb-]Óò
(bÈqÉEÌNôTÅØGçmêÎè4:øp/¤´á¤i	f
=è$XO·öÒï£Fð,~À*)Î°É´ÀPÆðPÉT¹¼,"fU~þPBs&/>Àabg¢²(Ï}ã#â!´ô·K(ôÀAÁ§º ìåÌ¼HcbA úL¡¿NHì°	è£Ò6Úè`
 ¦!¡èÃA©òòã	û j`îD¸m½J` 6â  `bu7Ð»0½ºèzÝ2æ(À½qa¥ë,@ñÒOo@·-6Ù·P:²£ó:À'øa$¯¯Á\ãÿÌ.D8ù¸î.\Á´µ`!qP-±í'`£X¸àzãk¯	htð÷ý#l°ýþ8æ@*nÒÖ Á4bÂÀ¡ÿ@»}!6±á±è>d«@8hÂ¨"öÁ÷Õ Upj@><ÇLy9VîÖu 
@"ÝQûaÏ9Äã$ îTÁ.l@ 1 áA`Ã*  ÀA
0ÅpàZ¦qÀ
4!b¡9@ L¤1@FtÈþÂîxËX8Ä$¢ @HAtÁFð(rïa(¤B°8Ð#|¤oT\±ÅQâI!Â&P]ýà4 ,þÒ¨KÀÒXr1(8C+Û'Ì÷mx£TæA`ÀÇr/iÀ¡Óçt1Õ¡ZÉ"É%ý¦Í5	H'AÉÛJ·Îô! }Aú '=-a
e P8¯0N± 
!£ $Z¢ë­"<Öp%t´|Á¥Ú0þq|WÀÅ<P0Âôù´ì«~æZW·Øµ:¹8*X±
V6=­¢9»è#å	·k{YtÌàØµÀ\èk5­ýºã¡+V£ñß¬&`}òËV÷æB¹¼ÑÚÒV,TÖ§%TQ 
xðU6³À±Ýôæ:. Nð.«Ö5x¨£l.À¸{áK:
v²3ü XCÝdåf:@|VOx³t¥fle;[ÚÖÖ¶·Åmnu»[ÞöÖ·¿np;\â×¸ÇEnr»\æ6×¹ÏQ@  ;Yimage/gif_Vhttp://web.archive.org/web/20071020032300/http://wiki.rubygarden.org/images/rgside.gifOôbplist00ÔX$versionX$objectsY$archiverT$top  ¯)#)*0123YZ[\]^_`abcdefghijklmnopqrstuvw{U$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 (Ó$%'(WNS.base[NS.relative _Vhttp://web.archive.org/web/20071020064924/http://wiki.rubygarden.org/images/rgside.gifÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ýç ÈÓ456GXWNS.keysZNS.objects¯789:;<=>?@ABCDEF	
¯IJKLMNOQRSLUVW !"#$%&'\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Orig-content-type\X-Page-Cache_X-Archive-Wayback-PerfTDate^Content-Length_X-Archive-Playback_X-Archive-Orig-connectionZConnectionYimage/gif_Tue, 09 May 2006 23:14:57 GMT_Sat, 20 Oct 2007 06:49:24 GMT]Tengine/2.1.0T7808_Sat, 20 Oct 2007 06:51:49 GMT_¾<http://wiki.rubygarden.org/images/rgside.gif>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/images/rgside.gif>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/images/rgside.gif>; rel="timegate", <http://web.archive.org/web/20071020064924/http://wiki.rubygarden.org/images/rgside.gif>; rel="first last memento"; datetime="Sat, 20 Oct 2007 06:49:24 GMT"_"44612271-1e80-480450"SHIT_y{"IndexLoad":68,"IndexQueryTotal":68,"RobotsCache":9,"RobotsFetchTotal":9,"RobotsTotal":9,"Total":224,"WArcResource":154}_Tue, 04 Apr 2017 12:04:38 GMTQ1UcloseZkeep-aliveÒ+,xy_NSMutableDictionary£xz/\NSDictionaryÒ+,|}_NSHTTPURLResponse£~/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 c i         ¢ ¥ ¨ « ® ± ³ µ · ¹ » ¼ ¾ À Â Ä Æ È Ê Ñ Ù å ç é ëDIT]cfoxz|©«­¯±³µ·¹»½¿ÁÃÅÇÉÜÞàâäæèêìîðòôöøúüþ*=Ddz³ÀÙÞí)3Ss¦h!#)49OS`ey}±´Ê                           ÌÕ%&'OÃ




/*
     FILE ARCHIVED ON 3:23:48 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:36 Apr 4, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
.ruby {
  background: white;
  border: 1px DarkRed solid;
 }
.ruby .normal {}
.ruby .comment { color: #005; font-style: italic; }
.ruby .keyword { color: #00C; font-weight: bold; }
.ruby .constant { color: #C20; }
.ruby .class { color: #C20; }
.ruby .module { color: #C20; }
.ruby .method { color: #700; font-weight: bold; }
.ruby .punct { color: #447; font-weight: bold; }
.ruby .symbol { color: #099; }
.ruby .string { color: #944; }
.ruby .char { color: #F07; }
.ruby .ident { color: #040; }
.ruby .attribute { color: #606; }
.ruby .regex { color: #B66; }
.ruby .number { color: #c20; }
.ruby .global { color: #7FB; }
.ruby .expr { color: #227; }
_khttp://web.archive.org/web/20070711135306cs_/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773O
bplist00ÔX$versionX$objectsY$archiverT$top  ¯/#)*0123]^_`abcdefghijklmnopqrstuvwxyz{|}~U$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 .$Ó$%'(WNS.base[NS.relative _khttp://web.archive.org/web/20071020032348cs_/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ý ÈÓ456I\WNS.keysZNS.objects¯789:;<=>?@ABCDEFGH	
¯JKLMNOPQRTUVWXYZ[ !"#$%&'()*+,-\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeZSet-Cookie_X-Archive-Orig-content-lengthVServer_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Orig-content-type\X-Page-Cache_X-Archive-Wayback-Perf_X-Archive-Guessed-CharsetTDate_X-Archive-Playback_X-Archive-Orig-connectionZConnection^Content-Length_text/css;charset=UTF-8_Sun, 21 May 2006 01:26:13 GMT_Sat, 20 Oct 2007 03:23:48 GMT_=JSESSIONID=9D14EB6A0D6DE3FF6800F526EC91BB24; Path=/; HttpOnlyS671]Tengine/2.1.0_Sat, 20 Oct 2007 03:26:11 GMT_U<http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773>; rel="timegate", <http://web.archive.org/web/20071020032348/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:23:48 GMT", <http://web.archive.org/web/20060615185322/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:53:22 GMT", <http://web.archive.org/web/20061212194534/http://wiki.rubygarden.org/stylesheets/langruby.css?1148174773>; rel="prev memento"; datetime="Tue, 12 Dec 2006 19:45:34 GMT"_"446fc1b5-29f-4804a3"Xtext/cssTMISS_D{"IndexLoad":99,"IndexQueryTotal":99,"Total":227,"WArcResource":122}UUTF-8_Tue, 04 Apr 2017 12:04:36 GMTQ1UcloseZkeep-aliveS963Ò+,_NSMutableDictionary£/\NSDictionaryÒ+,_NSHTTPURLResponse£/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 i o        ¡ ¨ « ® ± ´ · ¹ » ½ ¿ Á Â Ä Æ È Ê Ì Î Ð × ß ë í ï ñ_dox~¦±ÆÈÊÌÎÐÒÔÖØÚÜÞàâäæèêÿ	!#%2Qdo¬±Çåò',A]hw°Ð"B³¼Á.06AEJ`dqv¢°ÂÅÛ                           ÝÕ)*+,OØ¸/*  Prototype JavaScript framework, version 1.5.0_rc0
 *  (c) 2005 Sam Stephenson <sam@conio.net>
 *
 *  Prototype is freely distributable under the terms of an MIT-style license.
 *  For details, see the Prototype web site: http://web.archive.org/web/20071020032335/http://prototype.conio.net/
 *
/*--------------------------------------------------------------------------*/

var Prototype = {
  Version: '1.5.0_rc0',
  ScriptFragment: '(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)',

  emptyFunction: function() {},
  K: function(x) {return x}
}

var Class = {
  create: function() {
    return function() {
      this.initialize.apply(this, arguments);
    }
  }
}

var Abstract = new Object();

Object.extend = function(destination, source) {
  for (var property in source) {
    destination[property] = source[property];
  }
  return destination;
}

Object.inspect = function(object) {
  try {
    if (object == undefined) return 'undefined';
    if (object == null) return 'null';
    return object.inspect ? object.inspect() : object.toString();
  } catch (e) {
    if (e instanceof RangeError) return '...';
    throw e;
  }
}

Function.prototype.bind = function() {
  var __method = this, args = $A(arguments), object = args.shift();
  return function() {
    return __method.apply(object, args.concat($A(arguments)));
  }
}

Function.prototype.bindAsEventListener = function(object) {
  var __method = this;
  return function(event) {
    return __method.call(object, event || window.event);
  }
}

Object.extend(Number.prototype, {
  toColorPart: function() {
    var digits = this.toString(16);
    if (this < 16) return '0' + digits;
    return digits;
  },

  succ: function() {
    return this + 1;
  },

  times: function(iterator) {
    $R(0, this, true).each(iterator);
    return this;
  }
});

var Try = {
  these: function() {
    var returnValue;

    for (var i = 0; i < arguments.length; i++) {
      var lambda = arguments[i];
      try {
        returnValue = lambda();
        break;
      } catch (e) {}
    }

    return returnValue;
  }
}

/*--------------------------------------------------------------------------*/

var PeriodicalExecuter = Class.create();
PeriodicalExecuter.prototype = {
  initialize: function(callback, frequency) {
    this.callback = callback;
    this.frequency = frequency;
    this.currentlyExecuting = false;

    this.registerCallback();
  },

  registerCallback: function() {
    setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  onTimerEvent: function() {
    if (!this.currentlyExecuting) {
      try {
        this.currentlyExecuting = true;
        this.callback();
      } finally {
        this.currentlyExecuting = false;
      }
    }
  }
}
Object.extend(String.prototype, {
  gsub: function(pattern, replacement) {
    var result = '', source = this, match;
    replacement = arguments.callee.prepareReplacement(replacement);

    while (source.length > 0) {
      if (match = source.match(pattern)) {
        result += source.slice(0, match.index);
        result += (replacement(match) || '').toString();
        source  = source.slice(match.index + match[0].length);
      } else {
        result += source, source = '';
      }
    }
    return result;
  },

  sub: function(pattern, replacement, count) {
    replacement = this.gsub.prepareReplacement(replacement);
    count = count === undefined ? 1 : count;

    return this.gsub(pattern, function(match) {
      if (--count < 0) return match[0];
      return replacement(match);
    });
  },

  scan: function(pattern, iterator) {
    this.gsub(pattern, iterator);
    return this;
  },

  truncate: function(length, truncation) {
    length = length || 30;
    truncation = truncation === undefined ? '...' : truncation;
    return this.length > length ?
      this.slice(0, length - truncation.length) + truncation : this;
  },

  strip: function() {
    return this.replace(/^\s+/, '').replace(/\s+$/, '');
  },

  stripTags: function() {
    return this.replace(/<\/?[^>]+>/gi, '');
  },

  stripScripts: function() {
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
  },

  extractScripts: function() {
    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');
    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');
    return (this.match(matchAll) || []).map(function(scriptTag) {
      return (scriptTag.match(matchOne) || ['', ''])[1];
    });
  },

  evalScripts: function() {
    return this.extractScripts().map(function(script) { return eval(script) });
  },

  escapeHTML: function() {
    var div = document.createElement('div');
    var text = document.createTextNode(this);
    div.appendChild(text);
    return div.innerHTML;
  },

  unescapeHTML: function() {
    var div = document.createElement('div');
    div.innerHTML = this.stripTags();
    return div.childNodes[0] ? div.childNodes[0].nodeValue : '';
  },

  toQueryParams: function() {
    var pairs = this.match(/^\??(.*)$/)[1].split('&');
    return pairs.inject({}, function(params, pairString) {
      var pair = pairString.split('=');
      params[pair[0]] = pair[1];
      return params;
    });
  },

  toArray: function() {
    return this.split('');
  },

  camelize: function() {
    var oStringList = this.split('-');
    if (oStringList.length == 1) return oStringList[0];

    var camelizedString = this.indexOf('-') == 0
      ? oStringList[0].charAt(0).toUpperCase() + oStringList[0].substring(1)
      : oStringList[0];

    for (var i = 1, len = oStringList.length; i < len; i++) {
      var s = oStringList[i];
      camelizedString += s.charAt(0).toUpperCase() + s.substring(1);
    }

    return camelizedString;
  },

  inspect: function() {
    return "'" + this.replace(/\\/g, '\\\\').replace(/'/g, '\\\'') + "'";
  }
});

String.prototype.gsub.prepareReplacement = function(replacement) {
  if (typeof replacement == 'function') return replacement;
  var template = new Template(replacement);
  return function(match) { return template.evaluate(match) };
}

String.prototype.parseQuery = String.prototype.toQueryParams;

var Template = Class.create();
Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;
Template.prototype = {
  initialize: function(template, pattern) {
    this.template = template.toString();
    this.pattern  = pattern || Template.Pattern;
  },

  evaluate: function(object) {
    return this.template.gsub(this.pattern, function(match) {
      var before = match[1];
      if (before == '\\') return match[2];
      return before + (object[match[3]] || '').toString();
    });
  }
}

var $break    = new Object();
var $continue = new Object();

var Enumerable = {
  each: function(iterator) {
    var index = 0;
    try {
      this._each(function(value) {
        try {
          iterator(value, index++);
        } catch (e) {
          if (e != $continue) throw e;
        }
      });
    } catch (e) {
      if (e != $break) throw e;
    }
  },

  all: function(iterator) {
    var result = true;
    this.each(function(value, index) {
      result = result && !!(iterator || Prototype.K)(value, index);
      if (!result) throw $break;
    });
    return result;
  },

  any: function(iterator) {
    var result = true;
    this.each(function(value, index) {
      if (result = !!(iterator || Prototype.K)(value, index))
        throw $break;
    });
    return result;
  },

  collect: function(iterator) {
    var results = [];
    this.each(function(value, index) {
      results.push(iterator(value, index));
    });
    return results;
  },

  detect: function (iterator) {
    var result;
    this.each(function(value, index) {
      if (iterator(value, index)) {
        result = value;
        throw $break;
      }
    });
    return result;
  },

  findAll: function(iterator) {
    var results = [];
    this.each(function(value, index) {
      if (iterator(value, index))
        results.push(value);
    });
    return results;
  },

  grep: function(pattern, iterator) {
    var results = [];
    this.each(function(value, index) {
      var stringValue = value.toString();
      if (stringValue.match(pattern))
        results.push((iterator || Prototype.K)(value, index));
    })
    return results;
  },

  include: function(object) {
    var found = false;
    this.each(function(value) {
      if (value == object) {
        found = true;
        throw $break;
      }
    });
    return found;
  },

  inject: function(memo, iterator) {
    this.each(function(value, index) {
      memo = iterator(memo, value, index);
    });
    return memo;
  },

  invoke: function(method) {
    var args = $A(arguments).slice(1);
    return this.collect(function(value) {
      return value[method].apply(value, args);
    });
  },

  max: function(iterator) {
    var result;
    this.each(function(value, index) {
      value = (iterator || Prototype.K)(value, index);
      if (result == undefined || value >= result)
        result = value;
    });
    return result;
  },

  min: function(iterator) {
    var result;
    this.each(function(value, index) {
      value = (iterator || Prototype.K)(value, index);
      if (result == undefined || value < result)
        result = value;
    });
    return result;
  },

  partition: function(iterator) {
    var trues = [], falses = [];
    this.each(function(value, index) {
      ((iterator || Prototype.K)(value, index) ?
        trues : falses).push(value);
    });
    return [trues, falses];
  },

  pluck: function(property) {
    var results = [];
    this.each(function(value, index) {
      results.push(value[property]);
    });
    return results;
  },

  reject: function(iterator) {
    var results = [];
    this.each(function(value, index) {
      if (!iterator(value, index))
        results.push(value);
    });
    return results;
  },

  sortBy: function(iterator) {
    return this.collect(function(value, index) {
      return {value: value, criteria: iterator(value, index)};
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }).pluck('value');
  },

  toArray: function() {
    return this.collect(Prototype.K);
  },

  zip: function() {
    var iterator = Prototype.K, args = $A(arguments);
    if (typeof args.last() == 'function')
      iterator = args.pop();

    var collections = [this].concat(args).map($A);
    return this.map(function(value, index) {
      return iterator(collections.pluck(index));
    });
  },

  inspect: function() {
    return '#<Enumerable:' + this.toArray().inspect() + '>';
  }
}

Object.extend(Enumerable, {
  map:     Enumerable.collect,
  find:    Enumerable.detect,
  select:  Enumerable.findAll,
  member:  Enumerable.include,
  entries: Enumerable.toArray
});
var $A = Array.from = function(iterable) {
  if (!iterable) return [];
  if (iterable.toArray) {
    return iterable.toArray();
  } else {
    var results = [];
    for (var i = 0; i < iterable.length; i++)
      results.push(iterable[i]);
    return results;
  }
}

Object.extend(Array.prototype, Enumerable);

if (!Array.prototype._reverse)
  Array.prototype._reverse = Array.prototype.reverse;

Object.extend(Array.prototype, {
  _each: function(iterator) {
    for (var i = 0; i < this.length; i++)
      iterator(this[i]);
  },

  clear: function() {
    this.length = 0;
    return this;
  },

  first: function() {
    return this[0];
  },

  last: function() {
    return this[this.length - 1];
  },

  compact: function() {
    return this.select(function(value) {
      return value != undefined || value != null;
    });
  },

  flatten: function() {
    return this.inject([], function(array, value) {
      return array.concat(value && value.constructor == Array ?
        value.flatten() : [value]);
    });
  },

  without: function() {
    var values = $A(arguments);
    return this.select(function(value) {
      return !values.include(value);
    });
  },

  indexOf: function(object) {
    for (var i = 0; i < this.length; i++)
      if (this[i] == object) return i;
    return -1;
  },

  reverse: function(inline) {
    return (inline !== false ? this : this.toArray())._reverse();
  },

  inspect: function() {
    return '[' + this.map(Object.inspect).join(', ') + ']';
  }
});
var Hash = {
  _each: function(iterator) {
    for (var key in this) {
      var value = this[key];
      if (typeof value == 'function') continue;

      var pair = [key, value];
      pair.key = key;
      pair.value = value;
      iterator(pair);
    }
  },

  keys: function() {
    return this.pluck('key');
  },

  values: function() {
    return this.pluck('value');
  },

  merge: function(hash) {
    return $H(hash).inject($H(this), function(mergedHash, pair) {
      mergedHash[pair.key] = pair.value;
      return mergedHash;
    });
  },

  toQueryString: function() {
    return this.map(function(pair) {
      return pair.map(encodeURIComponent).join('=');
    }).join('&');
  },

  inspect: function() {
    return '#<Hash:{' + this.map(function(pair) {
      return pair.map(Object.inspect).join(': ');
    }).join(', ') + '}>';
  }
}

function $H(object) {
  var hash = Object.extend({}, object || {});
  Object.extend(hash, Enumerable);
  Object.extend(hash, Hash);
  return hash;
}
ObjectRange = Class.create();
Object.extend(ObjectRange.prototype, Enumerable);
Object.extend(ObjectRange.prototype, {
  initialize: function(start, end, exclusive) {
    this.start = start;
    this.end = end;
    this.exclusive = exclusive;
  },

  _each: function(iterator) {
    var value = this.start;
    do {
      iterator(value);
      value = value.succ();
    } while (this.include(value));
  },

  include: function(value) {
    if (value < this.start)
      return false;
    if (this.exclusive)
      return value < this.end;
    return value <= this.end;
  }
});

var $R = function(start, end, exclusive) {
  return new ObjectRange(start, end, exclusive);
}

var Ajax = {
  getTransport: function() {
    return Try.these(
      function() {return new XMLHttpRequest()},
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
    ) || false;
  },

  activeRequestCount: 0
}

Ajax.Responders = {
  responders: [],

  _each: function(iterator) {
    this.responders._each(iterator);
  },

  register: function(responderToAdd) {
    if (!this.include(responderToAdd))
      this.responders.push(responderToAdd);
  },

  unregister: function(responderToRemove) {
    this.responders = this.responders.without(responderToRemove);
  },

  dispatch: function(callback, request, transport, json) {
    this.each(function(responder) {
      if (responder[callback] && typeof responder[callback] == 'function') {
        try {
          responder[callback].apply(responder, [request, transport, json]);
        } catch (e) {}
      }
    });
  }
};

Object.extend(Ajax.Responders, Enumerable);

Ajax.Responders.register({
  onCreate: function() {
    Ajax.activeRequestCount++;
  },

  onComplete: function() {
    Ajax.activeRequestCount--;
  }
});

Ajax.Base = function() {};
Ajax.Base.prototype = {
  setOptions: function(options) {
    this.options = {
      method:       'post',
      asynchronous: true,
      contentType:  'application/x-www-form-urlencoded',
      parameters:   ''
    }
    Object.extend(this.options, options || {});
  },

  responseIsSuccess: function() {
    return this.transport.status == undefined
        || this.transport.status == 0
        || (this.transport.status >= 200 && this.transport.status < 300);
  },

  responseIsFailure: function() {
    return !this.responseIsSuccess();
  }
}

Ajax.Request = Class.create();
Ajax.Request.Events =
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];

Ajax.Request.prototype = Object.extend(new Ajax.Base(), {
  initialize: function(url, options) {
    this.transport = Ajax.getTransport();
    this.setOptions(options);
    this.request(url);
  },

  request: function(url) {
    var parameters = this.options.parameters || '';
    if (parameters.length > 0) parameters += '&_=';

    try {
      this.url = url;
      if (this.options.method == 'get' && parameters.length > 0)
        this.url += (this.url.match(/\?/) ? '&' : '?') + parameters;

      Ajax.Responders.dispatch('onCreate', this, this.transport);

      this.transport.open(this.options.method, this.url,
        this.options.asynchronous);

      if (this.options.asynchronous) {
        this.transport.onreadystatechange = this.onStateChange.bind(this);
        setTimeout((function() {this.respondToReadyState(1)}).bind(this), 10);
      }

      this.setRequestHeaders();

      var body = this.options.postBody ? this.options.postBody : parameters;
      this.transport.send(this.options.method == 'post' ? body : null);

    } catch (e) {
      this.dispatchException(e);
    }
  },

  setRequestHeaders: function() {
    var requestHeaders =
      ['X-Requested-With', 'XMLHttpRequest',
       'X-Prototype-Version', Prototype.Version,
       'Accept', 'text/javascript, text/html, application/xml, text/xml, */*'];

    if (this.options.method == 'post') {
      requestHeaders.push('Content-type', this.options.contentType);

      /* Force "Connection: close" for Mozilla browsers to work around
       * a bug where XMLHttpReqeuest sends an incorrect Content-length
       * header. See Mozilla Bugzilla #246651.
       */
      if (this.transport.overrideMimeType)
        requestHeaders.push('Connection', 'close');
    }

    if (this.options.requestHeaders)
      requestHeaders.push.apply(requestHeaders, this.options.requestHeaders);

    for (var i = 0; i < requestHeaders.length; i += 2)
      this.transport.setRequestHeader(requestHeaders[i], requestHeaders[i+1]);
  },

  onStateChange: function() {
    var readyState = this.transport.readyState;
    if (readyState != 1)
      this.respondToReadyState(this.transport.readyState);
  },

  header: function(name) {
    try {
      return this.transport.getResponseHeader(name);
    } catch (e) {}
  },

  evalJSON: function() {
    try {
      return eval('(' + this.header('X-JSON') + ')');
    } catch (e) {}
  },

  evalResponse: function() {
    try {
      return eval(this.transport.responseText);
    } catch (e) {
      this.dispatchException(e);
    }
  },

  respondToReadyState: function(readyState) {
    var event = Ajax.Request.Events[readyState];
    var transport = this.transport, json = this.evalJSON();

    if (event == 'Complete') {
      try {
        (this.options['on' + this.transport.status]
         || this.options['on' + (this.responseIsSuccess() ? 'Success' : 'Failure')]
         || Prototype.emptyFunction)(transport, json);
      } catch (e) {
        this.dispatchException(e);
      }

      if ((this.header('Content-type') || '').match(/^text\/javascript/i))
        this.evalResponse();
    }

    try {
      (this.options['on' + event] || Prototype.emptyFunction)(transport, json);
      Ajax.Responders.dispatch('on' + event, this, transport, json);
    } catch (e) {
      this.dispatchException(e);
    }

    /* Avoid memory leak in MSIE: clean up the oncomplete event handler */
    if (event == 'Complete')
      this.transport.onreadystatechange = Prototype.emptyFunction;
  },

  dispatchException: function(exception) {
    (this.options.onException || Prototype.emptyFunction)(this, exception);
    Ajax.Responders.dispatch('onException', this, exception);
  }
});

Ajax.Updater = Class.create();

Object.extend(Object.extend(Ajax.Updater.prototype, Ajax.Request.prototype), {
  initialize: function(container, url, options) {
    this.containers = {
      success: container.success ? $(container.success) : $(container),
      failure: container.failure ? $(container.failure) :
        (container.success ? null : $(container))
    }

    this.transport = Ajax.getTransport();
    this.setOptions(options);

    var onComplete = this.options.onComplete || Prototype.emptyFunction;
    this.options.onComplete = (function(transport, object) {
      this.updateContent();
      onComplete(transport, object);
    }).bind(this);

    this.request(url);
  },

  updateContent: function() {
    var receiver = this.responseIsSuccess() ?
      this.containers.success : this.containers.failure;
    var response = this.transport.responseText;

    if (!this.options.evalScripts)
      response = response.stripScripts();

    if (receiver) {
      if (this.options.insertion) {
        new this.options.insertion(receiver, response);
      } else {
        Element.update(receiver, response);
      }
    }

    if (this.responseIsSuccess()) {
      if (this.onComplete)
        setTimeout(this.onComplete.bind(this), 10);
    }
  }
});

Ajax.PeriodicalUpdater = Class.create();
Ajax.PeriodicalUpdater.prototype = Object.extend(new Ajax.Base(), {
  initialize: function(container, url, options) {
    this.setOptions(options);
    this.onComplete = this.options.onComplete;

    this.frequency = (this.options.frequency || 2);
    this.decay = (this.options.decay || 1);

    this.updater = {};
    this.container = container;
    this.url = url;

    this.start();
  },

  start: function() {
    this.options.onComplete = this.updateComplete.bind(this);
    this.onTimerEvent();
  },

  stop: function() {
    this.updater.onComplete = undefined;
    clearTimeout(this.timer);
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
  },

  updateComplete: function(request) {
    if (this.options.decay) {
      this.decay = (request.responseText == this.lastText ?
        this.decay * this.options.decay : 1);

      this.lastText = request.responseText;
    }
    this.timer = setTimeout(this.onTimerEvent.bind(this),
      this.decay * this.frequency * 1000);
  },

  onTimerEvent: function() {
    this.updater = new Ajax.Updater(this.container, this.url, this.options);
  }
});
function $() {
  var results = [], element;
  for (var i = 0; i < arguments.length; i++) {
    element = arguments[i];
    if (typeof element == 'string')
      element = document.getElementById(element);
    results.push(Element.extend(element));
  }
  return results.length < 2 ? results[0] : results;
}

document.getElementsByClassName = function(className, parentElement) {
  var children = ($(parentElement) || document.body).getElementsByTagName('*');
  return $A(children).inject([], function(elements, child) {
    if (child.className.match(new RegExp("(^|\\s)" + className + "(\\s|$)")))
      elements.push(Element.extend(child));
    return elements;
  });
}

/*--------------------------------------------------------------------------*/

if (!window.Element)
  var Element = new Object();

Element.extend = function(element) {
  if (!element) return;
  if (_nativeExtensions) return element;

  if (!element._extended && element.tagName && element != window) {
    var methods = Element.Methods, cache = Element.extend.cache;
    for (property in methods) {
      var value = methods[property];
      if (typeof value == 'function')
        element[property] = cache.findOrStore(value);
    }
  }

  element._extended = true;
  return element;
}

Element.extend.cache = {
  findOrStore: function(value) {
    return this[value] = this[value] || function() {
      return value.apply(null, [this].concat($A(arguments)));
    }
  }
}

Element.Methods = {
  visible: function(element) {
    return $(element).style.display != 'none';
  },

  toggle: function() {
    for (var i = 0; i < arguments.length; i++) {
      var element = $(arguments[i]);
      Element[Element.visible(element) ? 'hide' : 'show'](element);
    }
  },

  hide: function() {
    for (var i = 0; i < arguments.length; i++) {
      var element = $(arguments[i]);
      element.style.display = 'none';
    }
  },

  show: function() {
    for (var i = 0; i < arguments.length; i++) {
      var element = $(arguments[i]);
      element.style.display = '';
    }
  },

  remove: function(element) {
    element = $(element);
    element.parentNode.removeChild(element);
  },

  update: function(element, html) {
    $(element).innerHTML = html.stripScripts();
    setTimeout(function() {html.evalScripts()}, 10);
  },

  replace: function(element, html) {
    element = $(element);
    if (element.outerHTML) {
      element.outerHTML = html.stripScripts();
    } else {
      var range = element.ownerDocument.createRange();
      range.selectNodeContents(element);
      element.parentNode.replaceChild(
        range.createContextualFragment(html.stripScripts()), element);
    }
    setTimeout(function() {html.evalScripts()}, 10);
  },

  getHeight: function(element) {
    element = $(element);
    return element.offsetHeight;
  },

  classNames: function(element) {
    return new Element.ClassNames(element);
  },

  hasClassName: function(element, className) {
    if (!(element = $(element))) return;
    return Element.classNames(element).include(className);
  },

  addClassName: function(element, className) {
    if (!(element = $(element))) return;
    return Element.classNames(element).add(className);
  },

  removeClassName: function(element, className) {
    if (!(element = $(element))) return;
    return Element.classNames(element).remove(className);
  },

  // removes whitespace-only text node children
  cleanWhitespace: function(element) {
    element = $(element);
    for (var i = 0; i < element.childNodes.length; i++) {
      var node = element.childNodes[i];
      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
        Element.remove(node);
    }
  },

  empty: function(element) {
    return $(element).innerHTML.match(/^\s*$/);
  },

  childOf: function(element, ancestor) {
    element = $(element), ancestor = $(ancestor);
    while (element = element.parentNode)
      if (element == ancestor) return true;
    return false;
  },

  scrollTo: function(element) {
    element = $(element);
    var x = element.x ? element.x : element.offsetLeft,
        y = element.y ? element.y : element.offsetTop;
    window.scrollTo(x, y);
  },

  getStyle: function(element, style) {
    element = $(element);
    var value = element.style[style.camelize()];
    if (!value) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        var css = document.defaultView.getComputedStyle(element, null);
        value = css ? css.getPropertyValue(style) : null;
      } else if (element.currentStyle) {
        value = element.currentStyle[style.camelize()];
      }
    }

    if (window.opera && ['left', 'top', 'right', 'bottom'].include(style))
      if (Element.getStyle(element, 'position') == 'static') value = 'auto';

    return value == 'auto' ? null : value;
  },

  setStyle: function(element, style) {
    element = $(element);
    for (var name in style)
      element.style[name.camelize()] = style[name];
  },

  getDimensions: function(element) {
    element = $(element);
    if (Element.getStyle(element, 'display') != 'none')
      return {width: element.offsetWidth, height: element.offsetHeight};

    // All *Width and *Height properties give 0 on elements with display none,
    // so enable the element temporarily
    var els = element.style;
    var originalVisibility = els.visibility;
    var originalPosition = els.position;
    els.visibility = 'hidden';
    els.position = 'absolute';
    els.display = '';
    var originalWidth = element.clientWidth;
    var originalHeight = element.clientHeight;
    els.display = 'none';
    els.position = originalPosition;
    els.visibility = originalVisibility;
    return {width: originalWidth, height: originalHeight};
  },

  makePositioned: function(element) {
    element = $(element);
    var pos = Element.getStyle(element, 'position');
    if (pos == 'static' || !pos) {
      element._madePositioned = true;
      element.style.position = 'relative';
      // Opera returns the offset relative to the positioning context, when an
      // element is position relative but top and left have not been defined
      if (window.opera) {
        element.style.top = 0;
        element.style.left = 0;
      }
    }
  },

  undoPositioned: function(element) {
    element = $(element);
    if (element._madePositioned) {
      element._madePositioned = undefined;
      element.style.position =
        element.style.top =
        element.style.left =
        element.style.bottom =
        element.style.right = '';
    }
  },

  makeClipping: function(element) {
    element = $(element);
    if (element._overflow) return;
    element._overflow = element.style.overflow;
    if ((Element.getStyle(element, 'overflow') || 'visible') != 'hidden')
      element.style.overflow = 'hidden';
  },

  undoClipping: function(element) {
    element = $(element);
    if (element._overflow) return;
    element.style.overflow = element._overflow;
    element._overflow = undefined;
  }
}

Object.extend(Element, Element.Methods);

var _nativeExtensions = false;

if(!HTMLElement && /Konqueror|Safari|KHTML/.test(navigator.userAgent)) {
  var HTMLElement = {}
  HTMLElement.prototype = document.createElement('div').__proto__;
}

Element.addMethods = function(methods) {
  Object.extend(Element.Methods, methods || {});

  if(typeof HTMLElement != 'undefined') {
    var methods = Element.Methods, cache = Element.extend.cache;
    for (property in methods) {
      var value = methods[property];
      if (typeof value == 'function')
        HTMLElement.prototype[property] = cache.findOrStore(value);
    }
    _nativeExtensions = true;
  }
}

Element.addMethods();

var Toggle = new Object();
Toggle.display = Element.toggle;

/*--------------------------------------------------------------------------*/

Abstract.Insertion = function(adjacency) {
  this.adjacency = adjacency;
}

Abstract.Insertion.prototype = {
  initialize: function(element, content) {
    this.element = $(element);
    this.content = content.stripScripts();

    if (this.adjacency && this.element.insertAdjacentHTML) {
      try {
        this.element.insertAdjacentHTML(this.adjacency, this.content);
      } catch (e) {
        var tagName = this.element.tagName.toLowerCase();
        if (tagName == 'tbody' || tagName == 'tr') {
          this.insertContent(this.contentFromAnonymousTable());
        } else {
          throw e;
        }
      }
    } else {
      this.range = this.element.ownerDocument.createRange();
      if (this.initializeRange) this.initializeRange();
      this.insertContent([this.range.createContextualFragment(this.content)]);
    }

    setTimeout(function() {content.evalScripts()}, 10);
  },

  contentFromAnonymousTable: function() {
    var div = document.createElement('div');
    div.innerHTML = '<table><tbody>' + this.content + '</tbody></table>';
    return $A(div.childNodes[0].childNodes[0].childNodes);
  }
}

var Insertion = new Object();

Insertion.Before = Class.create();
Insertion.Before.prototype = Object.extend(new Abstract.Insertion('beforeBegin'), {
  initializeRange: function() {
    this.range.setStartBefore(this.element);
  },

  insertContent: function(fragments) {
    fragments.each((function(fragment) {
      this.element.parentNode.insertBefore(fragment, this.element);
    }).bind(this));
  }
});

Insertion.Top = Class.create();
Insertion.Top.prototype = Object.extend(new Abstract.Insertion('afterBegin'), {
  initializeRange: function() {
    this.range.selectNodeContents(this.element);
    this.range.collapse(true);
  },

  insertContent: function(fragments) {
    fragments.reverse(false).each((function(fragment) {
      this.element.insertBefore(fragment, this.element.firstChild);
    }).bind(this));
  }
});

Insertion.Bottom = Class.create();
Insertion.Bottom.prototype = Object.extend(new Abstract.Insertion('beforeEnd'), {
  initializeRange: function() {
    this.range.selectNodeContents(this.element);
    this.range.collapse(this.element);
  },

  insertContent: function(fragments) {
    fragments.each((function(fragment) {
      this.element.appendChild(fragment);
    }).bind(this));
  }
});

Insertion.After = Class.create();
Insertion.After.prototype = Object.extend(new Abstract.Insertion('afterEnd'), {
  initializeRange: function() {
    this.range.setStartAfter(this.element);
  },

  insertContent: function(fragments) {
    fragments.each((function(fragment) {
      this.element.parentNode.insertBefore(fragment,
        this.element.nextSibling);
    }).bind(this));
  }
});

/*--------------------------------------------------------------------------*/

Element.ClassNames = Class.create();
Element.ClassNames.prototype = {
  initialize: function(element) {
    this.element = $(element);
  },

  _each: function(iterator) {
    this.element.className.split(/\s+/).select(function(name) {
      return name.length > 0;
    })._each(iterator);
  },

  set: function(className) {
    this.element.className = className;
  },

  add: function(classNameToAdd) {
    if (this.include(classNameToAdd)) return;
    this.set(this.toArray().concat(classNameToAdd).join(' '));
  },

  remove: function(classNameToRemove) {
    if (!this.include(classNameToRemove)) return;
    this.set(this.select(function(className) {
      return className != classNameToRemove;
    }).join(' '));
  },

  toString: function() {
    return this.toArray().join(' ');
  }
}

Object.extend(Element.ClassNames.prototype, Enumerable);
var Selector = Class.create();
Selector.prototype = {
  initialize: function(expression) {
    this.params = {classNames: []};
    this.expression = expression.toString().strip();
    this.parseExpression();
    this.compileMatcher();
  },

  parseExpression: function() {
    function abort(message) { throw 'Parse error in selector: ' + message; }

    if (this.expression == '')  abort('empty expression');

    var params = this.params, expr = this.expression, match, modifier, clause, rest;
    while (match = expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)) {
      params.attributes = params.attributes || [];
      params.attributes.push({name: match[2], operator: match[3], value: match[4] || match[5] || ''});
      expr = match[1];
    }

    if (expr == '*') return this.params.wildcard = true;

    while (match = expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+)(.*)/i)) {
      modifier = match[1], clause = match[2], rest = match[3];
      switch (modifier) {
        case '#':       params.id = clause; break;
        case '.':       params.classNames.push(clause); break;
        case '':
        case undefined: params.tagName = clause.toUpperCase(); break;
        default:        abort(expr.inspect());
      }
      expr = rest;
    }

    if (expr.length > 0) abort(expr.inspect());
  },

  buildMatchExpression: function() {
    var params = this.params, conditions = [], clause;

    if (params.wildcard)
      conditions.push('true');
    if (clause = params.id)
      conditions.push('element.id == ' + clause.inspect());
    if (clause = params.tagName)
      conditions.push('element.tagName.toUpperCase() == ' + clause.inspect());
    if ((clause = params.classNames).length > 0)
      for (var i = 0; i < clause.length; i++)
        conditions.push('Element.hasClassName(element, ' + clause[i].inspect() + ')');
    if (clause = params.attributes) {
      clause.each(function(attribute) {
        var value = 'element.getAttribute(' + attribute.name.inspect() + ')';
        var splitValueBy = function(delimiter) {
          return value + ' && ' + value + '.split(' + delimiter.inspect() + ')';
        }

        switch (attribute.operator) {
          case '=':       conditions.push(value + ' == ' + attribute.value.inspect()); break;
          case '~=':      conditions.push(splitValueBy(' ') + '.include(' + attribute.value.inspect() + ')'); break;
          case '|=':      conditions.push(
                            splitValueBy('-') + '.first().toUpperCase() == ' + attribute.value.toUpperCase().inspect()
                          ); break;
          case '!=':      conditions.push(value + ' != ' + attribute.value.inspect()); break;
          case '':
          case undefined: conditions.push(value + ' != null'); break;
          default:        throw 'Unknown operator ' + attribute.operator + ' in selector';
        }
      });
    }

    return conditions.join(' && ');
  },

  compileMatcher: function() {
    this.match = new Function('element', 'if (!element.tagName) return false; \
      return ' + this.buildMatchExpression());
  },

  findElements: function(scope) {
    var element;

    if (element = $(this.params.id))
      if (this.match(element))
        if (!scope || Element.childOf(element, scope))
          return [element];

    scope = (scope || document).getElementsByTagName(this.params.tagName || '*');

    var results = [];
    for (var i = 0; i < scope.length; i++)
      if (this.match(element = scope[i]))
        results.push(Element.extend(element));

    return results;
  },

  toString: function() {
    return this.expression;
  }
}

function $$() {
  return $A(arguments).map(function(expression) {
    return expression.strip().split(/\s+/).inject([null], function(results, expr) {
      var selector = new Selector(expr);
      return results.map(selector.findElements.bind(selector)).flatten();
    });
  }).flatten();
}
var Field = {
  clear: function() {
    for (var i = 0; i < arguments.length; i++)
      $(arguments[i]).value = '';
  },

  focus: function(element) {
    $(element).focus();
  },

  present: function() {
    for (var i = 0; i < arguments.length; i++)
      if ($(arguments[i]).value == '') return false;
    return true;
  },

  select: function(element) {
    $(element).select();
  },

  activate: function(element) {
    element = $(element);
    element.focus();
    if (element.select)
      element.select();
  }
}

/*--------------------------------------------------------------------------*/

var Form = {
  serialize: function(form) {
    var elements = Form.getElements($(form));
    var queryComponents = new Array();

    for (var i = 0; i < elements.length; i++) {
      var queryComponent = Form.Element.serialize(elements[i]);
      if (queryComponent)
        queryComponents.push(queryComponent);
    }

    return queryComponents.join('&');
  },

  getElements: function(form) {
    form = $(form);
    var elements = new Array();

    for (var tagName in Form.Element.Serializers) {
      var tagElements = form.getElementsByTagName(tagName);
      for (var j = 0; j < tagElements.length; j++)
        elements.push(tagElements[j]);
    }
    return elements;
  },

  getInputs: function(form, typeName, name) {
    form = $(form);
    var inputs = form.getElementsByTagName('input');

    if (!typeName && !name)
      return inputs;

    var matchingInputs = new Array();
    for (var i = 0; i < inputs.length; i++) {
      var input = inputs[i];
      if ((typeName && input.type != typeName) ||
          (name && input.name != name))
        continue;
      matchingInputs.push(input);
    }

    return matchingInputs;
  },

  disable: function(form) {
    var elements = Form.getElements(form);
    for (var i = 0; i < elements.length; i++) {
      var element = elements[i];
      element.blur();
      element.disabled = 'true';
    }
  },

  enable: function(form) {
    var elements = Form.getElements(form);
    for (var i = 0; i < elements.length; i++) {
      var element = elements[i];
      element.disabled = '';
    }
  },

  findFirstElement: function(form) {
    return Form.getElements(form).find(function(element) {
      return element.type != 'hidden' && !element.disabled &&
        ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());
    });
  },

  focusFirstElement: function(form) {
    Field.activate(Form.findFirstElement(form));
  },

  reset: function(form) {
    $(form).reset();
  }
}

Form.Element = {
  serialize: function(element) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    var parameter = Form.Element.Serializers[method](element);

    if (parameter) {
      var key = encodeURIComponent(parameter[0]);
      if (key.length == 0) return;

      if (parameter[1].constructor != Array)
        parameter[1] = [parameter[1]];

      return parameter[1].map(function(value) {
        return key + '=' + encodeURIComponent(value);
      }).join('&');
    }
  },

  getValue: function(element) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    var parameter = Form.Element.Serializers[method](element);

    if (parameter)
      return parameter[1];
  }
}

Form.Element.Serializers = {
  input: function(element) {
    switch (element.type.toLowerCase()) {
      case 'submit':
      case 'hidden':
      case 'password':
      case 'text':
        return Form.Element.Serializers.textarea(element);
      case 'checkbox':
      case 'radio':
        return Form.Element.Serializers.inputSelector(element);
    }
    return false;
  },

  inputSelector: function(element) {
    if (element.checked)
      return [element.name, element.value];
  },

  textarea: function(element) {
    return [element.name, element.value];
  },

  select: function(element) {
    return Form.Element.Serializers[element.type == 'select-one' ?
      'selectOne' : 'selectMany'](element);
  },

  selectOne: function(element) {
    var value = '', opt, index = element.selectedIndex;
    if (index >= 0) {
      opt = element.options[index];
      value = opt.value || opt.text;
    }
    return [element.name, value];
  },

  selectMany: function(element) {
    var value = [];
    for (var i = 0; i < element.length; i++) {
      var opt = element.options[i];
      if (opt.selected)
        value.push(opt.value || opt.text);
    }
    return [element.name, value];
  }
}

/*--------------------------------------------------------------------------*/

var $F = Form.Element.getValue;

/*--------------------------------------------------------------------------*/

Abstract.TimedObserver = function() {}
Abstract.TimedObserver.prototype = {
  initialize: function(element, frequency, callback) {
    this.frequency = frequency;
    this.element   = $(element);
    this.callback  = callback;

    this.lastValue = this.getValue();
    this.registerCallback();
  },

  registerCallback: function() {
    setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  onTimerEvent: function() {
    var value = this.getValue();
    if (this.lastValue != value) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  }
}

Form.Element.Observer = Class.create();
Form.Element.Observer.prototype = Object.extend(new Abstract.TimedObserver(), {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.Observer = Class.create();
Form.Observer.prototype = Object.extend(new Abstract.TimedObserver(), {
  getValue: function() {
    return Form.serialize(this.element);
  }
});

/*--------------------------------------------------------------------------*/

Abstract.EventObserver = function() {}
Abstract.EventObserver.prototype = {
  initialize: function(element, callback) {
    this.element  = $(element);
    this.callback = callback;

    this.lastValue = this.getValue();
    if (this.element.tagName.toLowerCase() == 'form')
      this.registerFormCallbacks();
    else
      this.registerCallback(this.element);
  },

  onElementEvent: function() {
    var value = this.getValue();
    if (this.lastValue != value) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  },

  registerFormCallbacks: function() {
    var elements = Form.getElements(this.element);
    for (var i = 0; i < elements.length; i++)
      this.registerCallback(elements[i]);
  },

  registerCallback: function(element) {
    if (element.type) {
      switch (element.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(element, 'click', this.onElementEvent.bind(this));
          break;
        case 'password':
        case 'text':
        case 'textarea':
        case 'select-one':
        case 'select-multiple':
          Event.observe(element, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  }
}

Form.Element.EventObserver = Class.create();
Form.Element.EventObserver.prototype = Object.extend(new Abstract.EventObserver(), {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.EventObserver = Class.create();
Form.EventObserver.prototype = Object.extend(new Abstract.EventObserver(), {
  getValue: function() {
    return Form.serialize(this.element);
  }
});
if (!window.Event) {
  var Event = new Object();
}

Object.extend(Event, {
  KEY_BACKSPACE: 8,
  KEY_TAB:       9,
  KEY_RETURN:   13,
  KEY_ESC:      27,
  KEY_LEFT:     37,
  KEY_UP:       38,
  KEY_RIGHT:    39,
  KEY_DOWN:     40,
  KEY_DELETE:   46,

  element: function(event) {
    return event.target || event.srcElement;
  },

  isLeftClick: function(event) {
    return (((event.which) && (event.which == 1)) ||
            ((event.button) && (event.button == 1)));
  },

  pointerX: function(event) {
    return event.pageX || (event.clientX +
      (document.documentElement.scrollLeft || document.body.scrollLeft));
  },

  pointerY: function(event) {
    return event.pageY || (event.clientY +
      (document.documentElement.scrollTop || document.body.scrollTop));
  },

  stop: function(event) {
    if (event.preventDefault) {
      event.preventDefault();
      event.stopPropagation();
    } else {
      event.returnValue = false;
      event.cancelBubble = true;
    }
  },

  // find the first node with the given tagName, starting from the
  // node the event was triggered on; traverses the DOM upwards
  findElement: function(event, tagName) {
    var element = Event.element(event);
    while (element.parentNode && (!element.tagName ||
        (element.tagName.toUpperCase() != tagName.toUpperCase())))
      element = element.parentNode;
    return element;
  },

  observers: false,

  _observeAndCache: function(element, name, observer, useCapture) {
    if (!this.observers) this.observers = [];
    if (element.addEventListener) {
      this.observers.push([element, name, observer, useCapture]);
      element.addEventListener(name, observer, useCapture);
    } else if (element.attachEvent) {
      this.observers.push([element, name, observer, useCapture]);
      element.attachEvent('on' + name, observer);
    }
  },

  unloadCache: function() {
    if (!Event.observers) return;
    for (var i = 0; i < Event.observers.length; i++) {
      Event.stopObserving.apply(this, Event.observers[i]);
      Event.observers[i][0] = null;
    }
    Event.observers = false;
  },

  observe: function(element, name, observer, useCapture) {
    var element = $(element);
    useCapture = useCapture || false;

    if (name == 'keypress' &&
        (navigator.appVersion.match(/Konqueror|Safari|KHTML/)
        || element.attachEvent))
      name = 'keydown';

    this._observeAndCache(element, name, observer, useCapture);
  },

  stopObserving: function(element, name, observer, useCapture) {
    var element = $(element);
    useCapture = useCapture || false;

    if (name == 'keypress' &&
        (navigator.appVersion.match(/Konqueror|Safari|KHTML/)
        || element.detachEvent))
      name = 'keydown';

    if (element.removeEventListener) {
      element.removeEventListener(name, observer, useCapture);
    } else if (element.detachEvent) {
      element.detachEvent('on' + name, observer);
    }
  }
});

/* prevent memory leaks in IE */
if (navigator.appVersion.match(/\bMSIE\b/))
  Event.observe(window, 'unload', Event.unloadCache, false);
var Position = {
  // set to true if needed, warning: firefox performance problems
  // NOT neeeded for page scrolling, only if draggable contained in
  // scrollable elements
  includeScrollOffsets: false,

  // must be called before calling withinIncludingScrolloffset, every time the
  // page is scrolled
  prepare: function() {
    this.deltaX =  window.pageXOffset
                || document.documentElement.scrollLeft
                || document.body.scrollLeft
                || 0;
    this.deltaY =  window.pageYOffset
                || document.documentElement.scrollTop
                || document.body.scrollTop
                || 0;
  },

  realOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.scrollTop  || 0;
      valueL += element.scrollLeft || 0;
      element = element.parentNode;
    } while (element);
    return [valueL, valueT];
  },

  cumulativeOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
    } while (element);
    return [valueL, valueT];
  },

  positionedOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
      if (element) {
        p = Element.getStyle(element, 'position');
        if (p == 'relative' || p == 'absolute') break;
      }
    } while (element);
    return [valueL, valueT];
  },

  offsetParent: function(element) {
    if (element.offsetParent) return element.offsetParent;
    if (element == document.body) return element;

    while ((element = element.parentNode) && element != document.body)
      if (Element.getStyle(element, 'position') != 'static')
        return element;

    return document.body;
  },

  // caches x/y coordinate pair to use with overlap
  within: function(element, x, y) {
    if (this.includeScrollOffsets)
      return this.withinIncludingScrolloffsets(element, x, y);
    this.xcomp = x;
    this.ycomp = y;
    this.offset = this.cumulativeOffset(element);

    return (y >= this.offset[1] &&
            y <  this.offset[1] + element.offsetHeight &&
            x >= this.offset[0] &&
            x <  this.offset[0] + element.offsetWidth);
  },

  withinIncludingScrolloffsets: function(element, x, y) {
    var offsetcache = this.realOffset(element);

    this.xcomp = x + offsetcache[0] - this.deltaX;
    this.ycomp = y + offsetcache[1] - this.deltaY;
    this.offset = this.cumulativeOffset(element);

    return (this.ycomp >= this.offset[1] &&
            this.ycomp <  this.offset[1] + element.offsetHeight &&
            this.xcomp >= this.offset[0] &&
            this.xcomp <  this.offset[0] + element.offsetWidth);
  },

  // within must be called directly before
  overlap: function(mode, element) {
    if (!mode) return 0;
    if (mode == 'vertical')
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
        element.offsetHeight;
    if (mode == 'horizontal')
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
        element.offsetWidth;
  },

  clone: function(source, target) {
    source = $(source);
    target = $(target);
    target.style.position = 'absolute';
    var offsets = this.cumulativeOffset(source);
    target.style.top    = offsets[1] + 'px';
    target.style.left   = offsets[0] + 'px';
    target.style.width  = source.offsetWidth + 'px';
    target.style.height = source.offsetHeight + 'px';
  },

  page: function(forElement) {
    var valueT = 0, valueL = 0;

    var element = forElement;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;

      // Safari fix
      if (element.offsetParent==document.body)
        if (Element.getStyle(element,'position')=='absolute') break;

    } while (element = element.offsetParent);

    element = forElement;
    do {
      valueT -= element.scrollTop  || 0;
      valueL -= element.scrollLeft || 0;
    } while (element = element.parentNode);

    return [valueL, valueT];
  },

  clone: function(source, target) {
    var options = Object.extend({
      setLeft:    true,
      setTop:     true,
      setWidth:   true,
      setHeight:  true,
      offsetTop:  0,
      offsetLeft: 0
    }, arguments[2] || {})

    // find page position of source
    source = $(source);
    var p = Position.page(source);

    // find coordinate system to use
    target = $(target);
    var delta = [0, 0];
    var parent = null;
    // delta [0,0] will do fine with position: fixed elements,
    // position:absolute needs offsetParent deltas
    if (Element.getStyle(target,'position') == 'absolute') {
      parent = Position.offsetParent(target);
      delta = Position.page(parent);
    }

    // correct by body offsets (fixes Safari)
    if (parent == document.body) {
      delta[0] -= document.body.offsetLeft;
      delta[1] -= document.body.offsetTop;
    }

    // set position
    if(options.setLeft)   target.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
    if(options.setTop)    target.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
    if(options.setWidth)  target.style.width = source.offsetWidth + 'px';
    if(options.setHeight) target.style.height = source.offsetHeight + 'px';
  },

  absolutize: function(element) {
    element = $(element);
    if (element.style.position == 'absolute') return;
    Position.prepare();

    var offsets = Position.positionedOffset(element);
    var top     = offsets[1];
    var left    = offsets[0];
    var width   = element.clientWidth;
    var height  = element.clientHeight;

    element._originalLeft   = left - parseFloat(element.style.left  || 0);
    element._originalTop    = top  - parseFloat(element.style.top || 0);
    element._originalWidth  = element.style.width;
    element._originalHeight = element.style.height;

    element.style.position = 'absolute';
    element.style.top    = top + 'px';;
    element.style.left   = left + 'px';;
    element.style.width  = width + 'px';;
    element.style.height = height + 'px';;
  },

  relativize: function(element) {
    element = $(element);
    if (element.style.position == 'relative') return;
    Position.prepare();

    element.style.position = 'relative';
    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);
    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);

    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.height = element._originalHeight;
    element.style.width  = element._originalWidth;
  }
}

// Safari returns margins on body which is incorrect if the child is absolutely
// positioned.  For performance reasons, redefine Position.cumulativeOffset for
// KHTML/WebKit only.
if (/Konqueror|Safari|KHTML/.test(navigator.userAgent)) {
  Position.cumulativeOffset = function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      if (element.offsetParent == document.body)
        if (Element.getStyle(element, 'position') == 'absolute') break;

      element = element.offsetParent;
    } while (element);

    return [valueL, valueT];
  }
}
/*
     FILE ARCHIVED ON 03:23:35 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:36 Apr 04, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/_text/javascript_khttp://web.archive.org/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498O
bplist00ÔX$versionX$objectsY$archiverT$top  ¯*#)*0123WXYZ[\]^_`abcdefghijklmnopqrstuyzU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 )(Ó$%'(WNS.base[NS.relative _khttp://web.archive.org/web/20071020032335js_/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ýª ÈÓ456FVWNS.keysZNS.objects¯789:;<=>?@ABCDE	
¯GHIJKLMNOPQRSTU !"#$%&'\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Guessed-Charset\X-Page-CacheTDate^Content-Length_X-Archive-Playback_X-Archive-Orig-connectionZConnection_text/javascript; charset=utf-8_Tue, 09 May 2006 23:14:58 GMT_Sat, 20 Oct 2007 03:23:35 GMT]Tengine/2.1.0U55149_Sat, 20 Oct 2007 03:25:58 GMT_ª<http://wiki.rubygarden.org/javascripts/prototype.js?1147216498>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498>; rel="timegate", <http://web.archive.org/web/20060615185307/http://wiki.rubygarden.org:80/javascripts/prototype.js?1147216498>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:53:07 GMT", <http://web.archive.org/web/20061212194559/http://wiki.rubygarden.org:80/javascripts/prototype.js?1147216498>; rel="prev memento"; datetime="Tue, 12 Dec 2006 19:45:59 GMT", <http://web.archive.org/web/20071020032335/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498>; rel="memento"; datetime="Sat, 20 Oct 2007 03:23:35 GMT", <http://web.archive.org/web/20130710135852/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498>; rel="next memento"; datetime="Wed, 10 Jul 2013 13:58:52 GMT", <http://web.archive.org/web/20130710135852/http://wiki.rubygarden.org/javascripts/prototype.js?1147216498>; rel="last memento"; datetime="Wed, 10 Jul 2013 13:58:52 GMT"_"44612272-d76d-480480"Uutf-8TMISS_Tue, 04 Apr 2017 12:04:36 GMTU55480Q0UcloseZkeep-aliveÒ+,vw_NSMutableDictionary£vx/\NSDictionary_text/javascriptÒ+,{|_NSHTTPURLResponse£}~/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 d j         £ ¦ © ¬ ¯ ² ´ ¶ ¸ º ¼ ½ ¿ Á Ã Å Ç É Ë Ò Ú æ è ê ìZ_jsy|¡¬¾ÀÂÄÆÈÊÌÎÐÒÔÖØÚÜîðòôöøúüþ 
:MTt¥ÁÎÓâ÷?_³az¥«­³¾ÃÙÝêü				-	;	M	P	f                           	hÕ.*/0O0// Copyright (c) 2005 Thomas Fuchs (http://web.archive.org/web/20071020032135/http://script.aculo.us, http://web.archive.org/web/20071020032135/http://mir.aculo.us)
// Contributors:
//  Justin Palmer (http://web.archive.org/web/20071020032135/http://encytemedia.com/)
//  Mark Pilgrim (http://web.archive.org/web/20071020032135/http://diveintomark.org/)
//  Martin Bialasinki
// 
// See scriptaculous.js for full license.  

// converts rgb() and #xxx to #xxxxxx format,  
// returns self (or first argument) if not convertable  
String.prototype.parseColor = function() {  
  var color = '#';  
  if(this.slice(0,4) == 'rgb(') {  
    var cols = this.slice(4,this.length-1).split(',');  
    var i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);  
  } else {  
    if(this.slice(0,1) == '#') {  
      if(this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();  
      if(this.length==7) color = this.toLowerCase();  
    }  
  }  
  return(color.length==7 ? color : (arguments[0] || this));  
}

/*--------------------------------------------------------------------------*/

Element.collectTextNodes = function(element) {  
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue : 
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
}

Element.collectTextNodesIgnoreClass = function(element, className) {  
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue : 
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ? 
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
}

Element.setContentZoom = function(element, percent) {
  element = $(element);  
  Element.setStyle(element, {fontSize: (percent/100) + 'em'});   
  if(navigator.appVersion.indexOf('AppleWebKit')>0) window.scrollBy(0,0);
}

Element.getOpacity = function(element){  
  var opacity;
  if (opacity = Element.getStyle(element, 'opacity'))  
    return parseFloat(opacity);  
  if (opacity = (Element.getStyle(element, 'filter') || '').match(/alpha\(opacity=(.*)\)/))  
    if(opacity[1]) return parseFloat(opacity[1]) / 100;  
  return 1.0;  
}

Element.setOpacity = function(element, value){  
  element= $(element);  
  if (value == 1){
    Element.setStyle(element, { opacity: 
      (/Gecko/.test(navigator.userAgent) && !/Konqueror|Safari|KHTML/.test(navigator.userAgent)) ? 
      0.999999 : null });
    if(/MSIE/.test(navigator.userAgent))  
      Element.setStyle(element, {filter: Element.getStyle(element,'filter').replace(/alpha\([^\)]*\)/gi,'')});  
  } else {  
    if(value < 0.00001) value = 0;  
    Element.setStyle(element, {opacity: value});
    if(/MSIE/.test(navigator.userAgent))  
     Element.setStyle(element, 
       { filter: Element.getStyle(element,'filter').replace(/alpha\([^\)]*\)/gi,'') +
                 'alpha(opacity='+value*100+')' });  
  }
}  
 
Element.getInlineOpacity = function(element){  
  return $(element).style.opacity || '';
}  

Element.childrenWithClassName = function(element, className, findFirst) {
  var classNameRegExp = new RegExp("(^|\\s)" + className + "(\\s|$)");
  var results = $A($(element).getElementsByTagName('*'))[findFirst ? 'detect' : 'select']( function(c) { 
    return (c.className && c.className.match(classNameRegExp));
  });
  if(!results) results = [];
  return results;
}

Element.forceRerendering = function(element) {
  try {
    element = $(element);
    var n = document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*--------------------------------------------------------------------------*/

Array.prototype.call = function() {
  var args = arguments;
  this.each(function(f){ f.apply(this, args) });
}

/*--------------------------------------------------------------------------*/

var Effect = {
  tagifyText: function(element) {
    var tagifyStyle = 'position:relative';
    if(/MSIE/.test(navigator.userAgent)) tagifyStyle += ';zoom:1';
    element = $(element);
    $A(element.childNodes).each( function(child) {
      if(child.nodeType==3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            Builder.node('span',{style: tagifyStyle},
              character == ' ' ? String.fromCharCode(160) : character), 
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if(((typeof element == 'object') || 
        (typeof element == 'function')) && 
       (element.length))
      elements = element;
    else
      elements = $(element).childNodes;
      
    var options = Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || {});
    var masterDelay = options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element = $(element);
    effect = (effect || 'appear').toLowerCase();
    var options = Object.extend({
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
    }, arguments[2] || {});
    Effect[element.visible() ? 
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

var Effect2 = Effect; // deprecated

/* ------------- transitions ------------- */

Effect.Transitions = {}

Effect.Transitions.linear = function(pos) {
  return pos;
}
Effect.Transitions.sinoidal = function(pos) {
  return (-Math.cos(pos*Math.PI)/2) + 0.5;
}
Effect.Transitions.reverse  = function(pos) {
  return 1-pos;
}
Effect.Transitions.flicker = function(pos) {
  return ((-Math.cos(pos*Math.PI)/4) + 0.75) + Math.random()/4;
}
Effect.Transitions.wobble = function(pos) {
  return (-Math.cos(pos*Math.PI*(9*pos))/2) + 0.5;
}
Effect.Transitions.pulse = function(pos) {
  return (Math.floor(pos*10) % 2 == 0 ? 
    (pos*10-Math.floor(pos*10)) : 1-(pos*10-Math.floor(pos*10)));
}
Effect.Transitions.none = function(pos) {
  return 0;
}
Effect.Transitions.full = function(pos) {
  return 1;
}

/* ------------- core effects ------------- */

Effect.ScopedQueue = Class.create();
Object.extend(Object.extend(Effect.ScopedQueue.prototype, Enumerable), {
  initialize: function() {
    this.effects  = [];
    this.interval = null;
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp = new Date().getTime();
    
    var position = (typeof effect.options.queue == 'string') ? 
      effect.options.queue : effect.options.queue.position;
    
    switch(position) {
      case 'front':
        // move unstarted effects after this effect  
        this.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {
            e.startOn  += effect.finishOn;
            e.finishOn += effect.finishOn;
          });
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp = this.effects.pluck('finishOn').max() || timestamp;
        break;
    }
    
    effect.startOn  += timestamp;
    effect.finishOn += timestamp;

    if(!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))
      this.effects.push(effect);
    
    if(!this.interval) 
      this.interval = setInterval(this.loop.bind(this), 40);
  },
  remove: function(effect) {
    this.effects = this.effects.reject(function(e) { return e==effect });
    if(this.effects.length == 0) {
      clearInterval(this.interval);
      this.interval = null;
    }
  },
  loop: function() {
    var timePos = new Date().getTime();
    this.effects.invoke('loop', timePos);
  }
});

Effect.Queues = {
  instances: $H(),
  get: function(queueName) {
    if(typeof queueName != 'string') return queueName;
    
    if(!this.instances[queueName])
      this.instances[queueName] = new Effect.ScopedQueue();
      
    return this.instances[queueName];
  }
}
Effect.Queue = Effect.Queues.get('global');

Effect.DefaultOptions = {
  transition: Effect.Transitions.sinoidal,
  duration:   1.0,   // seconds
  fps:        25.0,  // max. 25fps due to Effect.Queue implementation
  sync:       false, // true for combining
  from:       0.0,
  to:         1.0,
  delay:      0.0,
  queue:      'parallel'
}

Effect.Base = function() {};
Effect.Base.prototype = {
  position: null,
  start: function(options) {
    this.options      = Object.extend(Object.extend({},Effect.DefaultOptions), options || {});
    this.currentFrame = 0;
    this.state        = 'idle';
    this.startOn      = this.options.delay*1000;
    this.finishOn     = this.startOn + (this.options.duration*1000);
    this.event('beforeStart');
    if(!this.options.sync)
      Effect.Queues.get(typeof this.options.queue == 'string' ? 
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if(timePos >= this.startOn) {
      if(timePos >= this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if(this.finish) this.finish(); 
        this.event('afterFinish');
        return;  
      }
      var pos   = (timePos - this.startOn) / (this.finishOn - this.startOn);
      var frame = Math.round(pos * this.options.fps * this.options.duration);
      if(frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame = frame;
      }
    }
  },
  render: function(pos) {
    if(this.state == 'idle') {
      this.state = 'running';
      this.event('beforeSetup');
      if(this.setup) this.setup();
      this.event('afterSetup');
    }
    if(this.state == 'running') {
      if(this.options.transition) pos = this.options.transition(pos);
      pos *= (this.options.to-this.options.from);
      pos += this.options.from;
      this.position = pos;
      this.event('beforeUpdate');
      if(this.update) this.update(pos);
      this.event('afterUpdate');
    }
  },
  cancel: function() {
    if(!this.options.sync)
      Effect.Queues.get(typeof this.options.queue == 'string' ? 
        'global' : this.options.queue.scope).remove(this);
    this.state = 'finished';
  },
  event: function(eventName) {
    if(this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);
    if(this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    return '#<Effect:' + $H(this).inspect() + ',options:' + $H(this.options).inspect() + '>';
  }
}

Effect.Parallel = Class.create();
Object.extend(Object.extend(Effect.Parallel.prototype, Effect.Base.prototype), {
  initialize: function(effects) {
    this.effects = effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if(effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Opacity = Class.create();
Object.extend(Object.extend(Effect.Opacity.prototype, Effect.Base.prototype), {
  initialize: function(element) {
    this.element = $(element);
    // make this work on IE on elements without 'layout'
    if(/MSIE/.test(navigator.userAgent) && (!this.element.hasLayout))
      this.element.setStyle({zoom: 1});
    var options = Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || {});
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move = Class.create();
Object.extend(Object.extend(Effect.Move.prototype, Effect.Base.prototype), {
  initialize: function(element) {
    this.element = $(element);
    var options = Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || {});
    this.start(options);
  },
  setup: function() {
    // Bug in Opera: Opera returns the "real" position of a static element or
    // relative element that does not have top/left explicitly set.
    // ==> Always set top and left for position relative elements in your stylesheets 
    // (to 0 if you do not need them) 
    this.element.makePositioned();
    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
    if(this.options.mode == 'absolute') {
      // absolute movement, so we need to calc deltaX and deltaY
      this.options.x = this.options.x - this.originalLeft;
      this.options.y = this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: this.options.x  * position + this.originalLeft + 'px',
      top:  this.options.y  * position + this.originalTop  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy = function(element, toTop, toLeft) {
  return new Effect.Move(element, 
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || {}));
};

Effect.Scale = Class.create();
Object.extend(Object.extend(Effect.Scale.prototype, Effect.Base.prototype), {
  initialize: function(element, percent) {
    this.element = $(element)
    var options = Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or {} with provided values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || {});
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish = this.options.restoreAfterFinish || false;
    this.elementPositioning = this.element.getStyle('position');
    
    this.originalStyle = {};
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] = this.element.style[k];
    }.bind(this));
      
    this.originalTop  = this.element.offsetTop;
    this.originalLeft = this.element.offsetLeft;
    
    var fontSize = this.element.getStyle('font-size') || '100%';
    ['em','px','%'].each( function(fontSizeType) {
      if(fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     = parseFloat(fontSize);
        this.fontSizeType = fontSizeType;
      }
    }.bind(this));
    
    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;
    
    this.dims = null;
    if(this.options.scaleMode=='box')
      this.dims = [this.element.offsetHeight, this.element.offsetWidth];
    if(/^content/.test(this.options.scaleMode))
      this.dims = [this.element.scrollHeight, this.element.scrollWidth];
    if(!this.dims)
      this.dims = [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
    if(this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d = {};
    if(this.options.scaleX) d.width = width + 'px';
    if(this.options.scaleY) d.height = height + 'px';
    if(this.options.scaleFromCenter) {
      var topd  = (height - this.dims[0])/2;
      var leftd = (width  - this.dims[1])/2;
      if(this.elementPositioning == 'absolute') {
        if(this.options.scaleY) d.top = this.originalTop-topd + 'px';
        if(this.options.scaleX) d.left = this.originalLeft-leftd + 'px';
      } else {
        if(this.options.scaleY) d.top = -topd + 'px';
        if(this.options.scaleX) d.left = -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight = Class.create();
Object.extend(Object.extend(Effect.Highlight.prototype, Effect.Base.prototype), {
  initialize: function(element) {
    this.element = $(element);
    var options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || {});
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if(this.element.getStyle('display')=='none') { this.cancel(); return; }
    // Disable background image during the effect
    this.oldStyle = {
      backgroundImage: this.element.getStyle('background-image') };
    this.element.setStyle({backgroundImage: 'none'});
    if(!this.options.endcolor)
      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
    if(!this.options.restorecolor)
      this.options.restorecolor = this.element.getStyle('background-color');
    // init color calculations
    this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));
    this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
      return m+(Math.round(this._base[i]+(this._delta[i]*position)).toColorPart()); }.bind(this)) });
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo = Class.create();
Object.extend(Object.extend(Effect.ScrollTo.prototype, Effect.Base.prototype), {
  initialize: function(element) {
    this.element = $(element);
    this.start(arguments[1] || {});
  },
  setup: function() {
    Position.prepare();
    var offsets = Position.cumulativeOffset(this.element);
    if(this.options.offset) offsets[1] += this.options.offset;
    var max = window.innerHeight ? 
      window.height - window.innerHeight :
      document.body.scrollHeight - 
        (document.documentElement.clientHeight ? 
          document.documentElement.clientHeight : document.body.clientHeight);
    this.scrollStart = Position.deltaY;
    this.delta = (offsets[1] > max ? max : offsets[1]) - this.scrollStart;
  },
  update: function(position) {
    Position.prepare();
    window.scrollTo(Position.deltaX, 
      this.scrollStart + (position*this.delta));
  }
});

/* ------------- combination effects ------------- */

Effect.Fade = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  var options = Object.extend({
  from: element.getOpacity() || 1.0,
  to:   0.0,
  afterFinishInternal: function(effect) { 
    if(effect.options.to!=0) return;
    effect.element.hide();
    effect.element.setStyle({opacity: oldOpacity}); 
  }}, arguments[1] || {});
  return new Effect.Opacity(element,options);
}

Effect.Appear = function(element) {
  element = $(element);
  var options = Object.extend({
  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from);
    effect.element.show(); 
  }}, arguments[1] || {});
  return new Effect.Opacity(element,options);
}

Effect.Puff = function(element) {
  element = $(element);
  var oldStyle = { opacity: element.getInlineOpacity(), position: element.getStyle('position') };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200, 
      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }), 
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ], 
     Object.extend({ duration: 1.0, 
      beforeSetupInternal: function(effect) {
        effect.effects[0].element.setStyle({position: 'absolute'}); },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide();
         effect.effects[0].element.setStyle(oldStyle); }
     }, arguments[1] || {})
   );
}

Effect.BlindUp = function(element) {
  element = $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0, 
    Object.extend({ scaleContent: false, 
      scaleX: false, 
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide();
        effect.element.undoClipping();
      } 
    }, arguments[1] || {})
  );
}

Effect.BlindDown = function(element) {
  element = $(element);
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, 
    Object.extend({ scaleContent: false, 
      scaleX: false,
      scaleFrom: 0,
      scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
      restoreAfterFinish: true,
      afterSetup: function(effect) {
        effect.element.makeClipping();
        effect.element.setStyle({height: '0px'});
        effect.element.show(); 
      },  
      afterFinishInternal: function(effect) {
        effect.element.undoClipping();
      }
    }, arguments[1] || {})
  );
}

Effect.SwitchOff = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  return new Effect.Appear(element, { 
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, { 
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) { 
          effect.element.makePositioned();
          effect.element.makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide();
          effect.element.undoClipping();
          effect.element.undoPositioned();
          effect.element.setStyle({opacity: oldOpacity});
        }
      })
    }
  });
}

Effect.DropOut = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity() };
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }), 
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
    Object.extend(
      { duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned(); 
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide();
          effect.effects[0].element.undoPositioned();
          effect.effects[0].element.setStyle(oldStyle);
        } 
      }, arguments[1] || {}));
}

Effect.Shake = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left') };
    return new Effect.Move(element, 
      { x:  20, y: 0, duration: 0.05, afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -20, y: 0, duration: 0.05, afterFinishInternal: function(effect) {
        effect.element.undoPositioned();
        effect.element.setStyle(oldStyle);
  }}) }}) }}) }}) }}) }});
}

Effect.SlideDown = function(element) {
  element = $(element);
  element.cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a container element with fixed height!
  var oldInnerBottom = $(element.firstChild).getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({ 
    scaleContent: false, 
    scaleX: false, 
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.firstChild.makePositioned();
      if(window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping();
      effect.element.setStyle({height: '0px'});
      effect.element.show(); },
    afterUpdateInternal: function(effect) {
      effect.element.firstChild.setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' }); 
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping(); 
      // IE will crash if child is undoPositioned first
      if(/MSIE/.test(navigator.userAgent)){
        effect.element.undoPositioned();
        effect.element.firstChild.undoPositioned();
      }else{
        effect.element.firstChild.undoPositioned();
        effect.element.undoPositioned();
      }
      effect.element.firstChild.setStyle({bottom: oldInnerBottom}); }
    }, arguments[1] || {})
  );
}
  
Effect.SlideUp = function(element) {
  element = $(element);
  element.cleanWhitespace();
  var oldInnerBottom = $(element.firstChild).getStyle('bottom');
  return new Effect.Scale(element, 0, 
   Object.extend({ scaleContent: false, 
    scaleX: false, 
    scaleMode: 'box',
    scaleFrom: 100,
    restoreAfterFinish: true,
    beforeStartInternal: function(effect) {
      effect.element.makePositioned();
      effect.element.firstChild.makePositioned();
      if(window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping();
      effect.element.show(); },  
    afterUpdateInternal: function(effect) {
      effect.element.firstChild.setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' }); },
    afterFinishInternal: function(effect) {
      effect.element.hide();
      effect.element.undoClipping();
      effect.element.firstChild.undoPositioned();
      effect.element.undoPositioned();
      effect.element.setStyle({bottom: oldInnerBottom}); }
   }, arguments[1] || {})
  );
}

// Bug in opera makes the TD containing this element expand for a instance after finish 
Effect.Squish = function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, 
    { restoreAfterFinish: true,
      beforeSetup: function(effect) {
        effect.element.makeClipping(effect.element); },  
      afterFinishInternal: function(effect) {
        effect.element.hide(effect.element); 
        effect.element.undoClipping(effect.element); }
  });
}

Effect.Grow = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || {});
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();    
  var initialMoveX, initialMoveY;
  var moveX, moveY;
  
  switch (options.direction) {
    case 'top-left':
      initialMoveX = initialMoveY = moveX = moveY = 0; 
      break;
    case 'top-right':
      initialMoveX = dims.width;
      initialMoveY = moveY = 0;
      moveX = -dims.width;
      break;
    case 'bottom-left':
      initialMoveX = moveX = 0;
      initialMoveY = dims.height;
      moveY = -dims.height;
      break;
    case 'bottom-right':
      initialMoveX = dims.width;
      initialMoveY = dims.height;
      moveX = -dims.width;
      moveY = -dims.height;
      break;
    case 'center':
      initialMoveX = dims.width / 2;
      initialMoveY = dims.height / 2;
      moveX = -dims.width / 2;
      moveY = -dims.height / 2;
      break;
  }
  
  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01, 
    beforeSetup: function(effect) {
      effect.element.hide();
      effect.element.makeClipping();
      effect.element.makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),
          new Effect.Scale(effect.element, 100, {
            scaleMode: { originalHeight: dims.height, originalWidth: dims.width }, 
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'});
               effect.effects[0].element.show(); 
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping();
               effect.effects[0].element.undoPositioned();
               effect.effects[0].element.setStyle(oldStyle); 
             }
           }, options)
      )
    }
  });
}

Effect.Shrink = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || {});
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var moveX, moveY;
  
  switch (options.direction) {
    case 'top-left':
      moveX = moveY = 0;
      break;
    case 'top-right':
      moveX = dims.width;
      moveY = 0;
      break;
    case 'bottom-left':
      moveX = 0;
      moveY = dims.height;
      break;
    case 'bottom-right':
      moveX = dims.width;
      moveY = dims.height;
      break;
    case 'center':  
      moveX = dims.width / 2;
      moveY = dims.height / 2;
      break;
  }
  
  return new Effect.Parallel(
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })
    ], Object.extend({            
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned();
           effect.effects[0].element.makeClipping(); },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide();
           effect.effects[0].element.undoClipping();
           effect.effects[0].element.undoPositioned();
           effect.effects[0].element.setStyle(oldStyle); }
       }, options)
  );
}

Effect.Pulsate = function(element) {
  element = $(element);
  var options    = arguments[1] || {};
  var oldOpacity = element.getInlineOpacity();
  var transition = options.transition || Effect.Transitions.sinoidal;
  var reverser   = function(pos){ return transition(1-Effect.Transitions.pulse(pos)) };
  reverser.bind(transition);
  return new Effect.Opacity(element, 
    Object.extend(Object.extend({  duration: 3.0, from: 0,
      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }
    }, options), {transition: reverser}));
}

Effect.Fold = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height };
  Element.makeClipping(element);
  return new Effect.Scale(element, 5, Object.extend({   
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, { 
      scaleContent: false, 
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide();
        effect.element.undoClipping(); 
        effect.element.setStyle(oldStyle);
      } });
  }}, arguments[1] || {}));
};

['setOpacity','getOpacity','getInlineOpacity','forceRerendering','setContentZoom',
 'collectTextNodes','collectTextNodesIgnoreClass','childrenWithClassName'].each( 
  function(f) { Element.Methods[f] = Element[f]; }
);

Element.Methods.visualEffect = function(element, effect, options) {
  s = effect.gsub(/_/, '-').camelize();
  effect_class = s.charAt(0).toUpperCase() + s.substring(1);
  new Effect[effect_class](element, options);
  return $(element);
};

Element.addMethods();
/*
     FILE ARCHIVED ON 03:21:35 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:36 Apr 04, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/_ihttp://web.archive.org/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/effects.js?1147216498O	Ôbplist00ÔX$versionX$objectsY$archiverT$top  ¯*#)*0123WXYZ[\]^_`abcdefghijklmnopqrstuyzU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 )(Ó$%'(WNS.base[NS.relative _ihttp://web.archive.org/web/20071020032135js_/http://wiki.rubygarden.org/javascripts/effects.js?1147216498Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ý¶ö ÈÓ456FVWNS.keysZNS.objects¯789:;<=>?@ABCDE	
¯GHIJKLMNOPQRSTU !"#$%&'\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Guessed-Charset\X-Page-CacheTDate^Content-Length_X-Archive-Playback_X-Archive-Orig-connectionZConnection_text/javascript; charset=utf-8_Tue, 09 May 2006 23:14:58 GMT_Sat, 20 Oct 2007 03:21:35 GMT]Tengine/2.1.0U32871_Sat, 20 Oct 2007 03:23:59 GMT_ò<http://wiki.rubygarden.org/javascripts/effects.js?1147216498>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/javascripts/effects.js?1147216498>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/javascripts/effects.js?1147216498>; rel="timegate", <http://web.archive.org/web/20060615185230/http://wiki.rubygarden.org:80/javascripts/effects.js?1147216498>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:52:30 GMT", <http://web.archive.org/web/20061208040827/http://wiki.rubygarden.org:80/javascripts/effects.js?1147216498>; rel="prev memento"; datetime="Fri, 08 Dec 2006 04:08:27 GMT", <http://web.archive.org/web/20071020032135/http://wiki.rubygarden.org/javascripts/effects.js?1147216498>; rel="memento"; datetime="Sat, 20 Oct 2007 03:21:35 GMT", <http://web.archive.org/web/20071020032135/http://wiki.rubygarden.org/javascripts/effects.js?1147216498>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:21:35 GMT"_"44612272-8067-480481"Uutf-8TMISS_Tue, 04 Apr 2017 12:04:36 GMTU33328Q0UcloseZkeep-aliveÒ+,vw_NSMutableDictionary£vx/\NSDictionary_text/javascriptÒ+,{|_NSHTTPURLResponse£}~/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 d j         £ ¦ © ¬ ¯ ² ´ ¶ ¸ º ¼ ½ ¿ Á Ã Å Ç É Ë Ò Ú æ è ê ìX]hqwzª¼¾ÀÂÄÆÈÊÌÎÐÒÔÖØÚìîðòôöøúüþ 
8KRr£¿ÌÑàõ=]}±§ÀÆËëñóù	#0BG[_s¬                           ®Õ2*34OtÖ// Copyright (c) 2005 Thomas Fuchs (http://web.archive.org/web/20071020032433/http://script.aculo.us, http://web.archive.org/web/20071020032433/http://mir.aculo.us)
//           (c) 2005 Sammi Williams (http://web.archive.org/web/20071020032433/http://www.oriontransfer.co.nz, sammi@oriontransfer.co.nz)
// 
// See scriptaculous.js for full license.

/*--------------------------------------------------------------------------*/

var Droppables = {
  drops: [],

  remove: function(element) {
    this.drops = this.drops.reject(function(d) { return d.element==$(element) });
  },

  add: function(element) {
    element = $(element);
    var options = Object.extend({
      greedy:     true,
      hoverclass: null,
      tree:       false
    }, arguments[1] || {});

    // cache containers
    if(options.containment) {
      options._containers = [];
      var containment = options.containment;
      if((typeof containment == 'object') && 
        (containment.constructor == Array)) {
        containment.each( function(c) { options._containers.push($(c)) });
      } else {
        options._containers.push($(containment));
      }
    }
    
    if(options.accept) options.accept = [options.accept].flatten();

    Element.makePositioned(element); // fix IE
    options.element = element;

    this.drops.push(options);
  },
  
  findDeepestChild: function(drops) {
    deepest = drops[0];
      
    for (i = 1; i < drops.length; ++i)
      if (Element.isParent(drops[i].element, deepest.element))
        deepest = drops[i];
    
    return deepest;
  },

  isContained: function(element, drop) {
    var containmentNode;
    if(drop.tree) {
      containmentNode = element.treeNode; 
    } else {
      containmentNode = element.parentNode;
    }
    return drop._containers.detect(function(c) { return containmentNode == c });
  },
  
  isAffected: function(point, element, drop) {
    return (
      (drop.element!=element) &&
      ((!drop._containers) ||
        this.isContained(element, drop)) &&
      ((!drop.accept) ||
        (Element.classNames(element).detect( 
          function(v) { return drop.accept.include(v) } ) )) &&
      Position.within(drop.element, point[0], point[1]) );
  },

  deactivate: function(drop) {
    if(drop.hoverclass)
      Element.removeClassName(drop.element, drop.hoverclass);
    this.last_active = null;
  },

  activate: function(drop) {
    if(drop.hoverclass)
      Element.addClassName(drop.element, drop.hoverclass);
    this.last_active = drop;
  },

  show: function(point, element) {
    if(!this.drops.length) return;
    var affected = [];
    
    if(this.last_active) this.deactivate(this.last_active);
    this.drops.each( function(drop) {
      if(Droppables.isAffected(point, element, drop))
        affected.push(drop);
    });
        
    if(affected.length>0) {
      drop = Droppables.findDeepestChild(affected);
      Position.within(drop.element, point[0], point[1]);
      if(drop.onHover)
        drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));
      
      Droppables.activate(drop);
    }
  },

  fire: function(event, element) {
    if(!this.last_active) return;
    Position.prepare();

    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], element, this.last_active))
      if (this.last_active.onDrop) 
        this.last_active.onDrop(element, this.last_active.element, event);
  },

  reset: function() {
    if(this.last_active)
      this.deactivate(this.last_active);
  }
}

var Draggables = {
  drags: [],
  observers: [],
  
  register: function(draggable) {
    if(this.drags.length == 0) {
      this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
      this.eventMouseMove = this.updateDrag.bindAsEventListener(this);
      this.eventKeypress  = this.keyPress.bindAsEventListener(this);
      
      Event.observe(document, "mouseup", this.eventMouseUp);
      Event.observe(document, "mousemove", this.eventMouseMove);
      Event.observe(document, "keypress", this.eventKeypress);
    }
    this.drags.push(draggable);
  },
  
  unregister: function(draggable) {
    this.drags = this.drags.reject(function(d) { return d==draggable });
    if(this.drags.length == 0) {
      Event.stopObserving(document, "mouseup", this.eventMouseUp);
      Event.stopObserving(document, "mousemove", this.eventMouseMove);
      Event.stopObserving(document, "keypress", this.eventKeypress);
    }
  },
  
  activate: function(draggable) {
    window.focus(); // allows keypress events if window isn't currently focused, fails for Safari
    this.activeDraggable = draggable;
  },
  
  deactivate: function() {
    this.activeDraggable = null;
  },
  
  updateDrag: function(event) {
    if(!this.activeDraggable) return;
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    // Mozilla-based browsers fire successive mousemove events with
    // the same coordinates, prevent needless redrawing (moz bug?)
    if(this._lastPointer && (this._lastPointer.inspect() == pointer.inspect())) return;
    this._lastPointer = pointer;
    this.activeDraggable.updateDrag(event, pointer);
  },
  
  endDrag: function(event) {
    if(!this.activeDraggable) return;
    this._lastPointer = null;
    this.activeDraggable.endDrag(event);
    this.activeDraggable = null;
  },
  
  keyPress: function(event) {
    if(this.activeDraggable)
      this.activeDraggable.keyPress(event);
  },
  
  addObserver: function(observer) {
    this.observers.push(observer);
    this._cacheObserverCallbacks();
  },
  
  removeObserver: function(element) {  // element instead of observer fixes mem leaks
    this.observers = this.observers.reject( function(o) { return o.element==element });
    this._cacheObserverCallbacks();
  },
  
  notify: function(eventName, draggable, event) {  // 'onStart', 'onEnd', 'onDrag'
    if(this[eventName+'Count'] > 0)
      this.observers.each( function(o) {
        if(o[eventName]) o[eventName](eventName, draggable, event);
      });
  },
  
  _cacheObserverCallbacks: function() {
    ['onStart','onEnd','onDrag'].each( function(eventName) {
      Draggables[eventName+'Count'] = Draggables.observers.select(
        function(o) { return o[eventName]; }
      ).length;
    });
  }
}

/*--------------------------------------------------------------------------*/

var Draggable = Class.create();
Draggable.prototype = {
  initialize: function(element) {
    var options = Object.extend({
      handle: false,
      starteffect: function(element) { 
        new Effect.Opacity(element, {duration:0.2, from:1.0, to:0.7}); 
      },
      reverteffect: function(element, top_offset, left_offset) {
        var dur = Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;
        element._revert = new Effect.Move(element, { x: -left_offset, y: -top_offset, duration: dur});
      },
      endeffect: function(element) { 
        new Effect.Opacity(element, {duration:0.2, from:0.7, to:1.0}); 
      },
      zindex: 1000,
      revert: false,
      scroll: false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      snap: false   // false, or xy or [x,y] or function(x,y){ return [x,y] }
    }, arguments[1] || {});

    this.element = $(element);
    
    if(options.handle && (typeof options.handle == 'string')) {
      var h = Element.childrenWithClassName(this.element, options.handle, true);
      if(h.length>0) this.handle = h[0];
    }
    if(!this.handle) this.handle = $(options.handle);
    if(!this.handle) this.handle = this.element;
    
    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerHTML)
      options.scroll = $(options.scroll);

    Element.makePositioned(this.element); // fix IE    

    this.delta    = this.currentDelta();
    this.options  = options;
    this.dragging = false;   

    this.eventMouseDown = this.initDrag.bindAsEventListener(this);
    Event.observe(this.handle, "mousedown", this.eventMouseDown);
    
    Draggables.register(this);
  },
  
  destroy: function() {
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);
    Draggables.unregister(this);
  },
  
  currentDelta: function() {
    return([
      parseInt(Element.getStyle(this.element,'left') || '0'),
      parseInt(Element.getStyle(this.element,'top') || '0')]);
  },
  
  initDrag: function(event) {
    if(Event.isLeftClick(event)) {    
      // abort on form elements, fixes a Firefox issue
      var src = Event.element(event);
      if(src.tagName && (
        src.tagName=='INPUT' ||
        src.tagName=='SELECT' ||
        src.tagName=='OPTION' ||
        src.tagName=='BUTTON' ||
        src.tagName=='TEXTAREA')) return;
        
      if(this.element._revert) {
        this.element._revert.cancel();
        this.element._revert = null;
      }
      
      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      var pos     = Position.cumulativeOffset(this.element);
      this.offset = [0,1].map( function(i) { return (pointer[i] - pos[i]) });
      
      Draggables.activate(this);
      Event.stop(event);
    }
  },
  
  startDrag: function(event) {
    this.dragging = true;
    
    if(this.options.zindex) {
      this.originalZ = parseInt(Element.getStyle(this.element,'z-index') || 0);
      this.element.style.zIndex = this.options.zindex;
    }
    
    if(this.options.ghosting) {
      this._clone = this.element.cloneNode(true);
      Position.absolutize(this.element);
      this.element.parentNode.insertBefore(this._clone, this.element);
    }
    
    if(this.options.scroll) {
      if (this.options.scroll == window) {
        var where = this._getWindowScroll(this.options.scroll);
        this.originalScrollLeft = where.left;
        this.originalScrollTop = where.top;
      } else {
        this.originalScrollLeft = this.options.scroll.scrollLeft;
        this.originalScrollTop = this.options.scroll.scrollTop;
      }
    }
    
    Draggables.notify('onStart', this, event);
    if(this.options.starteffect) this.options.starteffect(this.element);
  },
  
  updateDrag: function(event, pointer) {
    if(!this.dragging) this.startDrag(event);
    Position.prepare();
    Droppables.show(pointer, this.element);
    Draggables.notify('onDrag', this, event);
    this.draw(pointer);
    if(this.options.change) this.options.change(this);
    
    if(this.options.scroll) {
      this.stopScrolling();
      
      var p;
      if (this.options.scroll == window) {
        with(this._getWindowScroll(this.options.scroll)) { p = [ left, top, left+width, top+height ]; }
      } else {
        p = Position.page(this.options.scroll);
        p[0] += this.options.scroll.scrollLeft;
        p[1] += this.options.scroll.scrollTop;
        p.push(p[0]+this.options.scroll.offsetWidth);
        p.push(p[1]+this.options.scroll.offsetHeight);
      }
      var speed = [0,0];
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[0]+this.options.scrollSensitivity);
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[1]+this.options.scrollSensitivity);
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[2]-this.options.scrollSensitivity);
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[3]-this.options.scrollSensitivity);
      this.startScrolling(speed);
    }
    
    // fix AppleWebKit rendering
    if(navigator.appVersion.indexOf('AppleWebKit')>0) window.scrollBy(0,0);
    
    Event.stop(event);
  },
  
  finishDrag: function(event, success) {
    this.dragging = false;

    if(this.options.ghosting) {
      Position.relativize(this.element);
      Element.remove(this._clone);
      this._clone = null;
    }

    if(success) Droppables.fire(event, this.element);
    Draggables.notify('onEnd', this, event);

    var revert = this.options.revert;
    if(revert && typeof revert == 'function') revert = revert(this.element);
    
    var d = this.currentDelta();
    if(revert && this.options.reverteffect) {
      this.options.reverteffect(this.element, 
        d[1]-this.delta[1], d[0]-this.delta[0]);
    } else {
      this.delta = d;
    }

    if(this.options.zindex)
      this.element.style.zIndex = this.originalZ;

    if(this.options.endeffect) 
      this.options.endeffect(this.element);

    Draggables.deactivate(this);
    Droppables.reset();
  },
  
  keyPress: function(event) {
    if(event.keyCode!=Event.KEY_ESC) return;
    this.finishDrag(event, false);
    Event.stop(event);
  },
  
  endDrag: function(event) {
    if(!this.dragging) return;
    this.stopScrolling();
    this.finishDrag(event, true);
    Event.stop(event);
  },
  
  draw: function(point) {
    var pos = Position.cumulativeOffset(this.element);
    var d = this.currentDelta();
    pos[0] -= d[0]; pos[1] -= d[1];
    
    if(this.options.scroll && (this.options.scroll != window)) {
      pos[0] -= this.options.scroll.scrollLeft-this.originalScrollLeft;
      pos[1] -= this.options.scroll.scrollTop-this.originalScrollTop;
    }
    
    var p = [0,1].map(function(i){ 
      return (point[i]-pos[i]-this.offset[i]) 
    }.bind(this));
    
    if(this.options.snap) {
      if(typeof this.options.snap == 'function') {
        p = this.options.snap(p[0],p[1]);
      } else {
      if(this.options.snap instanceof Array) {
        p = p.map( function(v, i) {
          return Math.round(v/this.options.snap[i])*this.options.snap[i] }.bind(this))
      } else {
        p = p.map( function(v) {
          return Math.round(v/this.options.snap)*this.options.snap }.bind(this))
      }
    }}
    
    var style = this.element.style;
    if((!this.options.constraint) || (this.options.constraint=='horizontal'))
      style.left = p[0] + "px";
    if((!this.options.constraint) || (this.options.constraint=='vertical'))
      style.top  = p[1] + "px";
    if(style.visibility=="hidden") style.visibility = ""; // fix gecko rendering
  },
  
  stopScrolling: function() {
    if(this.scrollInterval) {
      clearInterval(this.scrollInterval);
      this.scrollInterval = null;
      Draggables._lastScrollPointer = null;
    }
  },
  
  startScrolling: function(speed) {
    this.scrollSpeed = [speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];
    this.lastScrolled = new Date();
    this.scrollInterval = setInterval(this.scroll.bind(this), 10);
  },
  
  scroll: function() {
    var current = new Date();
    var delta = current - this.lastScrolled;
    this.lastScrolled = current;
    if(this.options.scroll == window) {
      with (this._getWindowScroll(this.options.scroll)) {
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
          var d = delta / 1000;
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top + d*this.scrollSpeed[1] );
        }
      }
    } else {
      this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
      this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
    }
    
    Position.prepare();
    Droppables.show(Draggables._lastPointer, this.element);
    Draggables.notify('onDrag', this);
    Draggables._lastScrollPointer = Draggables._lastScrollPointer || $A(Draggables._lastPointer);
    Draggables._lastScrollPointer[0] += this.scrollSpeed[0] * delta / 1000;
    Draggables._lastScrollPointer[1] += this.scrollSpeed[1] * delta / 1000;
    if (Draggables._lastScrollPointer[0] < 0)
      Draggables._lastScrollPointer[0] = 0;
    if (Draggables._lastScrollPointer[1] < 0)
      Draggables._lastScrollPointer[1] = 0;
    this.draw(Draggables._lastScrollPointer);
    
    if(this.options.change) this.options.change(this);
  },
  
  _getWindowScroll: function(w) {
    var T, L, W, H;
    with (w.document) {
      if (w.document.documentElement && documentElement.scrollTop) {
        T = documentElement.scrollTop;
        L = documentElement.scrollLeft;
      } else if (w.document.body) {
        T = body.scrollTop;
        L = body.scrollLeft;
      }
      if (w.innerWidth) {
        W = w.innerWidth;
        H = w.innerHeight;
      } else if (w.document.documentElement && documentElement.clientWidth) {
        W = documentElement.clientWidth;
        H = documentElement.clientHeight;
      } else {
        W = body.offsetWidth;
        H = body.offsetHeight
      }
    }
    return { top: T, left: L, width: W, height: H };
  }
}

/*--------------------------------------------------------------------------*/

var SortableObserver = Class.create();
SortableObserver.prototype = {
  initialize: function(element, observer) {
    this.element   = $(element);
    this.observer  = observer;
    this.lastValue = Sortable.serialize(this.element);
  },
  
  onStart: function() {
    this.lastValue = Sortable.serialize(this.element);
  },
  
  onEnd: function() {
    Sortable.unmark();
    if(this.lastValue != Sortable.serialize(this.element))
      this.observer(this.element)
  }
}

var Sortable = {
  sortables: {},
  
  _findRootElement: function(element) {
    while (element.tagName != "BODY") {  
      if(element.id && Sortable.sortables[element.id]) return element;
      element = element.parentNode;
    }
  },

  options: function(element) {
    element = Sortable._findRootElement($(element));
    if(!element) return;
    return Sortable.sortables[element.id];
  },
  
  destroy: function(element){
    var s = Sortable.options(element);
    
    if(s) {
      Draggables.removeObserver(s.element);
      s.droppables.each(function(d){ Droppables.remove(d) });
      s.draggables.invoke('destroy');
      
      delete Sortable.sortables[s.element.id];
    }
  },

  create: function(element) {
    element = $(element);
    var options = Object.extend({ 
      element:     element,
      tag:         'li',       // assumes li children, override with tag: 'tagname'
      dropOnEmpty: false,
      tree:        false,
      treeTag:     'ul',
      overlap:     'vertical', // one of 'vertical', 'horizontal'
      constraint:  'vertical', // one of 'vertical', 'horizontal', false
      containment: element,    // also takes array of elements (or id's); or false
      handle:      false,      // or a CSS class
      only:        false,
      hoverclass:  null,
      ghosting:    false,
      scroll:      false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      format:      /^[^_]*_(.*)$/,
      onChange:    Prototype.emptyFunction,
      onUpdate:    Prototype.emptyFunction
    }, arguments[1] || {});

    // clear any old sortable with same element
    this.destroy(element);

    // build options for the draggables
    var options_for_draggable = {
      revert:      true,
      scroll:      options.scroll,
      scrollSpeed: options.scrollSpeed,
      scrollSensitivity: options.scrollSensitivity,
      ghosting:    options.ghosting,
      constraint:  options.constraint,
      handle:      options.handle };

    if(options.starteffect)
      options_for_draggable.starteffect = options.starteffect;

    if(options.reverteffect)
      options_for_draggable.reverteffect = options.reverteffect;
    else
      if(options.ghosting) options_for_draggable.reverteffect = function(element) {
        element.style.top  = 0;
        element.style.left = 0;
      };

    if(options.endeffect)
      options_for_draggable.endeffect = options.endeffect;

    if(options.zindex)
      options_for_draggable.zindex = options.zindex;

    // build options for the droppables  
    var options_for_droppable = {
      overlap:     options.overlap,
      containment: options.containment,
      tree:        options.tree,
      hoverclass:  options.hoverclass,
      onHover:     Sortable.onHover
      //web.archive.org/web/20071020032433/http://greedy:      !options.dropOnEmpty
    }
    
    var options_for_tree = {
      onHover:      Sortable.onEmptyHover,
      overlap:      options.overlap,
      containment:  options.containment,
      hoverclass:   options.hoverclass
    }

    // fix for gecko engine
    Element.cleanWhitespace(element); 

    options.draggables = [];
    options.droppables = [];

    // drop on empty handling
    if(options.dropOnEmpty || options.tree) {
      Droppables.add(element, options_for_tree);
      options.droppables.push(element);
    }

    (this.findElements(element, options) || []).each( function(e) {
      // handles are per-draggable
      var handle = options.handle ? 
        Element.childrenWithClassName(e, options.handle)[0] : e;    
      options.draggables.push(
        new Draggable(e, Object.extend(options_for_draggable, { handle: handle })));
      Droppables.add(e, options_for_droppable);
      if(options.tree) e.treeNode = element;
      options.droppables.push(e);      
    });
    
    if(options.tree) {
      (Sortable.findTreeElements(element, options) || []).each( function(e) {
        Droppables.add(e, options_for_tree);
        e.treeNode = element;
        options.droppables.push(e);
      });
    }

    // keep reference
    this.sortables[element.id] = options;

    // for onupdate
    Draggables.addObserver(new SortableObserver(element, options.onUpdate));

  },

  // return all suitable-for-sortable elements in a guaranteed order
  findElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.tag);
  },
  
  findTreeElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.treeTag);
  },

  onHover: function(element, dropon, overlap) {
    if(Element.isParent(dropon, element)) return;

    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
      return;
    } else if(overlap>0.5) {
      Sortable.mark(dropon, 'before');
      if(dropon.previousSibling != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, dropon);
        if(dropon.parentNode!=oldParentNode) 
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    } else {
      Sortable.mark(dropon, 'after');
      var nextElement = dropon.nextSibling || null;
      if(nextElement != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, nextElement);
        if(dropon.parentNode!=oldParentNode) 
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    }
  },
  
  onEmptyHover: function(element, dropon, overlap) {
    var oldParentNode = element.parentNode;
    var droponOptions = Sortable.options(dropon);
        
    if(!Element.isParent(dropon, element)) {
      var index;
      
      var children = Sortable.findElements(dropon, {tag: droponOptions.tag});
      var child = null;
            
      if(children) {
        var offset = Element.offsetSize(dropon, droponOptions.overlap) * (1.0 - overlap);
        
        for (index = 0; index < children.length; index += 1) {
          if (offset - Element.offsetSize (children[index], droponOptions.overlap) >= 0) {
            offset -= Element.offsetSize (children[index], droponOptions.overlap);
          } else if (offset - (Element.offsetSize (children[index], droponOptions.overlap) / 2) >= 0) {
            child = index + 1 < children.length ? children[index + 1] : null;
            break;
          } else {
            child = children[index];
            break;
          }
        }
      }
      
      dropon.insertBefore(element, child);
      
      Sortable.options(oldParentNode).onChange(element);
      droponOptions.onChange(element);
    }
  },

  unmark: function() {
    if(Sortable._marker) Element.hide(Sortable._marker);
  },

  mark: function(dropon, position) {
    // mark on ghosting only
    var sortable = Sortable.options(dropon.parentNode);
    if(sortable && !sortable.ghosting) return; 

    if(!Sortable._marker) {
      Sortable._marker = $('dropmarker') || document.createElement('DIV');
      Element.hide(Sortable._marker);
      Element.addClassName(Sortable._marker, 'dropmarker');
      Sortable._marker.style.position = 'absolute';
      document.getElementsByTagName("body").item(0).appendChild(Sortable._marker);
    }    
    var offsets = Position.cumulativeOffset(dropon);
    Sortable._marker.style.left = offsets[0] + 'px';
    Sortable._marker.style.top = offsets[1] + 'px';
    
    if(position=='after')
      if(sortable.overlap == 'horizontal') 
        Sortable._marker.style.left = (offsets[0]+dropon.clientWidth) + 'px';
      else
        Sortable._marker.style.top = (offsets[1]+dropon.clientHeight) + 'px';
    
    Element.show(Sortable._marker);
  },
  
  _tree: function(element, options, parent) {
    var children = Sortable.findElements(element, options) || [];
  
    for (var i = 0; i < children.length; ++i) {
      var match = children[i].id.match(options.format);

      if (!match) continue;
      
      var child = {
        id: encodeURIComponent(match ? match[1] : null),
        element: element,
        parent: parent,
        children: new Array,
        position: parent.children.length,
        container: Sortable._findChildrenElement(children[i], options.treeTag.toUpperCase())
      }
      
      /* Get the element containing the children and recurse over it */
      if (child.container)
        this._tree(child.container, options, child)
      
      parent.children.push (child);
    }

    return parent; 
  },

  /* Finds the first element of the given tag type within a parent element.
    Used for finding the first LI[ST] within a L[IST]I[TEM].*/
  _findChildrenElement: function (element, containerTag) {
    if (element && element.hasChildNodes)
      for (var i = 0; i < element.childNodes.length; ++i)
        if (element.childNodes[i].tagName == containerTag)
          return element.childNodes[i];
  
    return null;
  },

  tree: function(element) {
    element = $(element);
    var sortableOptions = this.options(element);
    var options = Object.extend({
      tag: sortableOptions.tag,
      treeTag: sortableOptions.treeTag,
      only: sortableOptions.only,
      name: element.id,
      format: sortableOptions.format
    }, arguments[1] || {});
    
    var root = {
      id: null,
      parent: null,
      children: new Array,
      container: element,
      position: 0
    }
    
    return Sortable._tree (element, options, root);
  },

  /* Construct a [i] index for a particular node */
  _constructIndex: function(node) {
    var index = '';
    do {
      if (node.id) index = '[' + node.position + ']' + index;
    } while ((node = node.parent) != null);
    return index;
  },

  sequence: function(element) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[1] || {});
    
    return $(this.findElements(element, options) || []).map( function(item) {
      return item.id.match(options.format) ? item.id.match(options.format)[1] : '';
    });
  },

  setSequence: function(element, new_sequence) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[2] || {});
    
    var nodeMap = {};
    this.findElements(element, options).each( function(n) {
        if (n.id.match(options.format))
            nodeMap[n.id.match(options.format)[1]] = [n, n.parentNode];
        n.parentNode.removeChild(n);
    });
   
    new_sequence.each(function(ident) {
      var n = nodeMap[ident];
      if (n) {
        n[1].appendChild(n[0]);
        delete nodeMap[ident];
      }
    });
  },
  
  serialize: function(element) {
    element = $(element);
    var options = Object.extend(Sortable.options(element), arguments[1] || {});
    var name = encodeURIComponent(
      (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);
    
    if (options.tree) {
      return Sortable.tree(element, arguments[1]).children.map( function (item) {
        return [name + Sortable._constructIndex(item) + "=" + 
                encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
      }).flatten().join('&');
    } else {
      return Sortable.sequence(element, arguments[1]).map( function(item) {
        return name + "[]=" + encodeURIComponent(item);
      }).join('&');
    }
  }
}

/* Returns true if child is contained within element */
Element.isParent = function(child, element) {
  if (!child.parentNode || child == element) return false;

  if (child.parentNode == element) return true;

  return Element.isParent(child.parentNode, element);
}

Element.findChildren = function(element, only, recursive, tagName) {    
  if(!element.hasChildNodes()) return null;
  tagName = tagName.toUpperCase();
  if(only) only = [only].flatten();
  var elements = [];
  $A(element.childNodes).each( function(e) {
    if(e.tagName && e.tagName.toUpperCase()==tagName &&
      (!only || (Element.classNames(e).detect(function(v) { return only.include(v) }))))
        elements.push(e);
    if(recursive) {
      var grandchildren = Element.findChildren(e, only, recursive, tagName);
      if(grandchildren) elements.push(grandchildren);
    }
  });

  return (elements.length>0 ? elements.flatten() : []);
}

Element.offsetSize = function (element, type) {
  if (type == 'vertical' || type == 'height')
    return element.offsetHeight;
  else
    return element.offsetWidth;
}
/*
     FILE ARCHIVED ON 03:24:33 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:37 Apr 04, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/_jhttp://web.archive.org/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498O	Übplist00ÔX$versionX$objectsY$archiverT$top  ¯*#)*0123WXYZ[\]^_`abcdefghijklmnopqrstuyzU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 )(Ó$%'(WNS.base[NS.relative _jhttp://web.archive.org/web/20071020032433js_/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?ÝÃY ÈÓ456FVWNS.keysZNS.objects¯789:;<=>?@ABCDE	
¯GHIJKLMNOPQRSTU !"#$%&'\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Guessed-Charset\X-Page-CacheTDate^Content-Length_X-Archive-Playback_X-Archive-Orig-connectionZConnection_text/javascript; charset=utf-8_Tue, 09 May 2006 23:14:58 GMT_Sat, 20 Oct 2007 03:24:33 GMT]Tengine/2.1.0U29453_Sat, 20 Oct 2007 03:26:56 GMT_ù<http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498>; rel="timegate", <http://web.archive.org/web/20060615185256/http://wiki.rubygarden.org:80/javascripts/dragdrop.js?1147216498>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:52:56 GMT", <http://web.archive.org/web/20061212194546/http://wiki.rubygarden.org:80/javascripts/dragdrop.js?1147216498>; rel="prev memento"; datetime="Tue, 12 Dec 2006 19:45:46 GMT", <http://web.archive.org/web/20071020032433/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498>; rel="memento"; datetime="Sat, 20 Oct 2007 03:24:33 GMT", <http://web.archive.org/web/20071020032433/http://wiki.rubygarden.org/javascripts/dragdrop.js?1147216498>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:24:33 GMT"_"44612272-730d-480483"Uutf-8TMISS_Tue, 04 Apr 2017 12:04:37 GMTU29910Q0UcloseZkeep-aliveÒ+,vw_NSMutableDictionary£vx/\NSDictionary_text/javascriptÒ+,{|_NSHTTPURLResponse£}~/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 d j         £ ¦ © ¬ ¯ ² ´ ¶ ¸ º ¼ ½ ¿ Á Ã Å Ç É Ë Ò Ú æ è ê ìY^irx{ «½¿ÁÃÅÇÉËÍÏÑÓÕ×ÙÛíïñóõ÷ùûýÿ	9LSs¤ÀÍÒáö>^~²¯ÈÎÓóùû'+8JOcg{´                           ¶Õ6*78Oow// Copyright (c) 2005 Thomas Fuchs (http://web.archive.org/web/20071020032407/http://script.aculo.us, http://web.archive.org/web/20071020032407/http://mir.aculo.us)
//           (c) 2005 Ivan Krstic (http://web.archive.org/web/20071020032407/http://blogs.law.harvard.edu/ivan)
//           (c) 2005 Jon Tirsen (http://web.archive.org/web/20071020032407/http://www.tirsen.com)
// Contributors:
//  Richard Livsey
//  Rahul Bhargava
//  Rob Wills
// 
// See scriptaculous.js for full license.

// Autocompleter.Base handles all the autocompletion functionality 
// that's independent of the data source for autocompletion. This
// includes drawing the autocompletion menu, observing keyboard
// and mouse events, and similar.
//
// Specific autocompleters need to provide, at the very least, 
// a getUpdatedChoices function that will be invoked every time
// the text inside the monitored textbox changes. This method 
// should get the text for which to provide autocompletion by
// invoking this.getToken(), NOT by directly accessing
// this.element.value. This is to allow incremental tokenized
// autocompletion. Specific auto-completion logic (AJAX, etc)
// belongs in getUpdatedChoices.
//
// Tokenized incremental autocompletion is enabled automatically
// when an autocompleter is instantiated with the 'tokens' option
// in the options parameter, e.g.:
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });
// will incrementally autocomplete with a comma as the token.
// Additionally, ',' in the above example can be replaced with
// a token array, e.g. { tokens: [',', '\n'] } which
// enables autocompletion on multiple tokens. This is most 
// useful when one of the tokens is \n (a newline), as it 
// allows smart autocompletion after linebreaks.

var Autocompleter = {}
Autocompleter.Base = function() {};
Autocompleter.Base.prototype = {
  baseInitialize: function(element, update, options) {
    this.element     = $(element); 
    this.update      = $(update);  
    this.hasFocus    = false; 
    this.changed     = false; 
    this.active      = false; 
    this.index       = 0;     
    this.entryCount  = 0;

    if (this.setOptions)
      this.setOptions(options);
    else
      this.options = options || {};

    this.options.paramName    = this.options.paramName || this.element.name;
    this.options.tokens       = this.options.tokens || [];
    this.options.frequency    = this.options.frequency || 0.4;
    this.options.minChars     = this.options.minChars || 1;
    this.options.onShow       = this.options.onShow || 
    function(element, update){ 
      if(!update.style.position || update.style.position=='absolute') {
        update.style.position = 'absolute';
        Position.clone(element, update, {setHeight: false, offsetTop: element.offsetHeight});
      }
      Effect.Appear(update,{duration:0.15});
    };
    this.options.onHide = this.options.onHide || 
    function(element, update){ new Effect.Fade(update,{duration:0.15}) };

    if (typeof(this.options.tokens) == 'string') 
      this.options.tokens = new Array(this.options.tokens);

    this.observer = null;
    
    this.element.setAttribute('autocomplete','off');

    Element.hide(this.update);

    Event.observe(this.element, "blur", this.onBlur.bindAsEventListener(this));
    Event.observe(this.element, "keypress", this.onKeyPress.bindAsEventListener(this));
  },

  show: function() {
    if(Element.getStyle(this.update, 'display')=='none') this.options.onShow(this.element, this.update);
    if(!this.iefix && 
      (navigator.appVersion.indexOf('MSIE')>0) &&
      (navigator.userAgent.indexOf('Opera')<0) &&
      (Element.getStyle(this.update, 'position')=='absolute')) {
      new Insertion.After(this.update, 
       '<iframe id="' + this.update.id + '_iefix" '+
       'style="display:none;position:absolute;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);" ' +
       'src="javascript:false;" frameborder="0" scrolling="no"></iframe>');
      this.iefix = $(this.update.id+'_iefix');
    }
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);
  },
  
  fixIEOverlapping: function() {
    Position.clone(this.update, this.iefix);
    this.iefix.style.zIndex = 1;
    this.update.style.zIndex = 2;
    Element.show(this.iefix);
  },

  hide: function() {
    this.stopIndicator();
    if(Element.getStyle(this.update, 'display')!='none') this.options.onHide(this.element, this.update);
    if(this.iefix) Element.hide(this.iefix);
  },

  startIndicator: function() {
    if(this.options.indicator) Element.show(this.options.indicator);
  },

  stopIndicator: function() {
    if(this.options.indicator) Element.hide(this.options.indicator);
  },

  onKeyPress: function(event) {
    if(this.active)
      switch(event.keyCode) {
       case Event.KEY_TAB:
       case Event.KEY_RETURN:
         this.selectEntry();
         Event.stop(event);
       case Event.KEY_ESC:
         this.hide();
         this.active = false;
         Event.stop(event);
         return;
       case Event.KEY_LEFT:
       case Event.KEY_RIGHT:
         return;
       case Event.KEY_UP:
         this.markPrevious();
         this.render();
         if(navigator.appVersion.indexOf('AppleWebKit')>0) Event.stop(event);
         return;
       case Event.KEY_DOWN:
         this.markNext();
         this.render();
         if(navigator.appVersion.indexOf('AppleWebKit')>0) Event.stop(event);
         return;
      }
     else 
       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN || 
         (navigator.appVersion.indexOf('AppleWebKit') > 0 && event.keyCode == 0)) return;

    this.changed = true;
    this.hasFocus = true;

    if(this.observer) clearTimeout(this.observer);
      this.observer = 
        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*1000);
  },

  activate: function() {
    this.changed = false;
    this.hasFocus = true;
    this.getUpdatedChoices();
  },

  onHover: function(event) {
    var element = Event.findElement(event, 'LI');
    if(this.index != element.autocompleteIndex) 
    {
        this.index = element.autocompleteIndex;
        this.render();
    }
    Event.stop(event);
  },
  
  onClick: function(event) {
    var element = Event.findElement(event, 'LI');
    this.index = element.autocompleteIndex;
    this.selectEntry();
    this.hide();
  },
  
  onBlur: function(event) {
    // needed to make click events working
    setTimeout(this.hide.bind(this), 250);
    this.hasFocus = false;
    this.active = false;     
  }, 
  
  render: function() {
    if(this.entryCount > 0) {
      for (var i = 0; i < this.entryCount; i++)
        this.index==i ? 
          Element.addClassName(this.getEntry(i),"selected") : 
          Element.removeClassName(this.getEntry(i),"selected");
        
      if(this.hasFocus) { 
        this.show();
        this.active = true;
      }
    } else {
      this.active = false;
      this.hide();
    }
  },
  
  markPrevious: function() {
    if(this.index > 0) this.index--
      else this.index = this.entryCount-1;
  },
  
  markNext: function() {
    if(this.index < this.entryCount-1) this.index++
      else this.index = 0;
  },
  
  getEntry: function(index) {
    return this.update.firstChild.childNodes[index];
  },
  
  getCurrentEntry: function() {
    return this.getEntry(this.index);
  },
  
  selectEntry: function() {
    this.active = false;
    this.updateElement(this.getCurrentEntry());
  },

  updateElement: function(selectedElement) {
    if (this.options.updateElement) {
      this.options.updateElement(selectedElement);
      return;
    }
    var value = '';
    if (this.options.select) {
      var nodes = document.getElementsByClassName(this.options.select, selectedElement) || [];
      if(nodes.length>0) value = Element.collectTextNodes(nodes[0], this.options.select);
    } else
      value = Element.collectTextNodesIgnoreClass(selectedElement, 'informal');
    
    var lastTokenPos = this.findLastToken();
    if (lastTokenPos != -1) {
      var newValue = this.element.value.substr(0, lastTokenPos + 1);
      var whitespace = this.element.value.substr(lastTokenPos + 1).match(/^\s+/);
      if (whitespace)
        newValue += whitespace[0];
      this.element.value = newValue + value;
    } else {
      this.element.value = value;
    }
    this.element.focus();
    
    if (this.options.afterUpdateElement)
      this.options.afterUpdateElement(this.element, selectedElement);
  },

  updateChoices: function(choices) {
    if(!this.changed && this.hasFocus) {
      this.update.innerHTML = choices;
      Element.cleanWhitespace(this.update);
      Element.cleanWhitespace(this.update.firstChild);

      if(this.update.firstChild && this.update.firstChild.childNodes) {
        this.entryCount = 
          this.update.firstChild.childNodes.length;
        for (var i = 0; i < this.entryCount; i++) {
          var entry = this.getEntry(i);
          entry.autocompleteIndex = i;
          this.addObservers(entry);
        }
      } else { 
        this.entryCount = 0;
      }

      this.stopIndicator();

      this.index = 0;
      this.render();
    }
  },

  addObservers: function(element) {
    Event.observe(element, "mouseover", this.onHover.bindAsEventListener(this));
    Event.observe(element, "click", this.onClick.bindAsEventListener(this));
  },

  onObserverEvent: function() {
    this.changed = false;   
    if(this.getToken().length>=this.options.minChars) {
      this.startIndicator();
      this.getUpdatedChoices();
    } else {
      this.active = false;
      this.hide();
    }
  },

  getToken: function() {
    var tokenPos = this.findLastToken();
    if (tokenPos != -1)
      var ret = this.element.value.substr(tokenPos + 1).replace(/^\s+/,'').replace(/\s+$/,'');
    else
      var ret = this.element.value;

    return /\n/.test(ret) ? '' : ret;
  },

  findLastToken: function() {
    var lastTokenPos = -1;

    for (var i=0; i<this.options.tokens.length; i++) {
      var thisTokenPos = this.element.value.lastIndexOf(this.options.tokens[i]);
      if (thisTokenPos > lastTokenPos)
        lastTokenPos = thisTokenPos;
    }
    return lastTokenPos;
  }
}

Ajax.Autocompleter = Class.create();
Object.extend(Object.extend(Ajax.Autocompleter.prototype, Autocompleter.Base.prototype), {
  initialize: function(element, update, url, options) {
    this.baseInitialize(element, update, options);
    this.options.asynchronous  = true;
    this.options.onComplete    = this.onComplete.bind(this);
    this.options.defaultParams = this.options.parameters || null;
    this.url                   = url;
  },

  getUpdatedChoices: function() {
    entry = encodeURIComponent(this.options.paramName) + '=' + 
      encodeURIComponent(this.getToken());

    this.options.parameters = this.options.callback ?
      this.options.callback(this.element, entry) : entry;

    if(this.options.defaultParams) 
      this.options.parameters += '&' + this.options.defaultParams;

    new Ajax.Request(this.url, this.options);
  },

  onComplete: function(request) {
    this.updateChoices(request.responseText);
  }

});

// The local array autocompleter. Used when you'd prefer to
// inject an array of autocompletion options into the page, rather
// than sending out Ajax queries, which can be quite slow sometimes.
//
// The constructor takes four parameters. The first two are, as usual,
// the id of the monitored textbox, and id of the autocompletion menu.
// The third is the array you want to autocomplete from, and the fourth
// is the options block.
//
// Extra local autocompletion options:
// - choices - How many autocompletion choices to offer
//
// - partialSearch - If false, the autocompleter will match entered
//                    text only at the beginning of strings in the 
//                    autocomplete array. Defaults to true, which will
//                    match text at the beginning of any *word* in the
//                    strings in the autocomplete array. If you want to
//                    search anywhere in the string, additionally set
//                    the option fullSearch to true (default: off).
//
// - fullSsearch - Search anywhere in autocomplete array strings.
//
// - partialChars - How many characters to enter before triggering
//                   a partial match (unlike minChars, which defines
//                   how many characters are required to do any match
//                   at all). Defaults to 2.
//
// - ignoreCase - Whether to ignore case when autocompleting.
//                 Defaults to true.
//
// It's possible to pass in a custom function as the 'selector' 
// option, if you prefer to write your own autocompletion logic.
// In that case, the other options above will not apply unless
// you support them.

Autocompleter.Local = Class.create();
Autocompleter.Local.prototype = Object.extend(new Autocompleter.Base(), {
  initialize: function(element, update, array, options) {
    this.baseInitialize(element, update, options);
    this.options.array = array;
  },

  getUpdatedChoices: function() {
    this.updateChoices(this.options.selector(this));
  },

  setOptions: function(options) {
    this.options = Object.extend({
      choices: 10,
      partialSearch: true,
      partialChars: 2,
      ignoreCase: true,
      fullSearch: false,
      selector: function(instance) {
        var ret       = []; // Beginning matches
        var partial   = []; // Inside matches
        var entry     = instance.getToken();
        var count     = 0;

        for (var i = 0; i < instance.options.array.length &&  
          ret.length < instance.options.choices ; i++) { 

          var elem = instance.options.array[i];
          var foundPos = instance.options.ignoreCase ? 
            elem.toLowerCase().indexOf(entry.toLowerCase()) : 
            elem.indexOf(entry);

          while (foundPos != -1) {
            if (foundPos == 0 && elem.length != entry.length) { 
              ret.push("<li><strong>" + elem.substr(0, entry.length) + "</strong>" + 
                elem.substr(entry.length) + "</li>");
              break;
            } else if (entry.length >= instance.options.partialChars && 
              instance.options.partialSearch && foundPos != -1) {
              if (instance.options.fullSearch || /\s/.test(elem.substr(foundPos-1,1))) {
                partial.push("<li>" + elem.substr(0, foundPos) + "<strong>" +
                  elem.substr(foundPos, entry.length) + "</strong>" + elem.substr(
                  foundPos + entry.length) + "</li>");
                break;
              }
            }

            foundPos = instance.options.ignoreCase ? 
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1) : 
              elem.indexOf(entry, foundPos + 1);

          }
        }
        if (partial.length)
          ret = ret.concat(partial.slice(0, instance.options.choices - ret.length))
        return "<ul>" + ret.join('') + "</ul>";
      }
    }, options || {});
  }
});

// AJAX in-place editor
//
// see documentation on http://web.archive.org/web/20071020032407/http://wiki.script.aculo.us/scriptaculous/show/Ajax.InPlaceEditor

// Use this if you notice weird scrolling problems on some browsers,
// the DOM might be a bit confused when this gets called so do this
// waits 1 ms (with setTimeout) until it does the activation
Field.scrollFreeActivate = function(field) {
  setTimeout(function() {
    Field.activate(field);
  }, 1);
}

Ajax.InPlaceEditor = Class.create();
Ajax.InPlaceEditor.defaultHighlightColor = "#FFFF99";
Ajax.InPlaceEditor.prototype = {
  initialize: function(element, url, options) {
    this.url = url;
    this.element = $(element);

    this.options = Object.extend({
      okButton: true,
      okText: "ok",
      cancelLink: true,
      cancelText: "cancel",
      savingText: "Saving...",
      clickToEditText: "Click to edit",
      okText: "ok",
      rows: 1,
      onComplete: function(transport, element) {
        new Effect.Highlight(element, {startcolor: this.options.highlightcolor});
      },
      onFailure: function(transport) {
        alert("Error communicating with the server: " + transport.responseText.stripTags());
      },
      callback: function(form) {
        return Form.serialize(form);
      },
      handleLineBreaks: true,
      loadingText: 'Loading...',
      savingClassName: 'inplaceeditor-saving',
      loadingClassName: 'inplaceeditor-loading',
      formClassName: 'inplaceeditor-form',
      highlightcolor: Ajax.InPlaceEditor.defaultHighlightColor,
      highlightendcolor: "#FFFFFF",
      externalControl: null,
      submitOnBlur: false,
      ajaxOptions: {},
      evalScripts: false
    }, options || {});

    if(!this.options.formId && this.element.id) {
      this.options.formId = this.element.id + "-inplaceeditor";
      if ($(this.options.formId)) {
        // there's already a form with that name, don't specify an id
        this.options.formId = null;
      }
    }
    
    if (this.options.externalControl) {
      this.options.externalControl = $(this.options.externalControl);
    }
    
    this.originalBackground = Element.getStyle(this.element, 'background-color');
    if (!this.originalBackground) {
      this.originalBackground = "transparent";
    }
    
    this.element.title = this.options.clickToEditText;
    
    this.onclickListener = this.enterEditMode.bindAsEventListener(this);
    this.mouseoverListener = this.enterHover.bindAsEventListener(this);
    this.mouseoutListener = this.leaveHover.bindAsEventListener(this);
    Event.observe(this.element, 'click', this.onclickListener);
    Event.observe(this.element, 'mouseover', this.mouseoverListener);
    Event.observe(this.element, 'mouseout', this.mouseoutListener);
    if (this.options.externalControl) {
      Event.observe(this.options.externalControl, 'click', this.onclickListener);
      Event.observe(this.options.externalControl, 'mouseover', this.mouseoverListener);
      Event.observe(this.options.externalControl, 'mouseout', this.mouseoutListener);
    }
  },
  enterEditMode: function(evt) {
    if (this.saving) return;
    if (this.editing) return;
    this.editing = true;
    this.onEnterEditMode();
    if (this.options.externalControl) {
      Element.hide(this.options.externalControl);
    }
    Element.hide(this.element);
    this.createForm();
    this.element.parentNode.insertBefore(this.form, this.element);
    Field.scrollFreeActivate(this.editField);
    // stop the event to avoid a page refresh in Safari
    if (evt) {
      Event.stop(evt);
    }
    return false;
  },
  createForm: function() {
    this.form = document.createElement("form");
    this.form.id = this.options.formId;
    Element.addClassName(this.form, this.options.formClassName)
    this.form.onsubmit = this.onSubmit.bind(this);

    this.createEditField();

    if (this.options.textarea) {
      var br = document.createElement("br");
      this.form.appendChild(br);
    }

    if (this.options.okButton) {
      okButton = document.createElement("input");
      okButton.type = "submit";
      okButton.value = this.options.okText;
      okButton.className = 'editor_ok_button';
      this.form.appendChild(okButton);
    }

    if (this.options.cancelLink) {
      cancelLink = document.createElement("a");
      cancelLink.href = "#";
      cancelLink.appendChild(document.createTextNode(this.options.cancelText));
      cancelLink.onclick = this.onclickCancel.bind(this);
      cancelLink.className = 'editor_cancel';      
      this.form.appendChild(cancelLink);
    }
  },
  hasHTMLLineBreaks: function(string) {
    if (!this.options.handleLineBreaks) return false;
    return string.match(/<br/i) || string.match(/<p>/i);
  },
  convertHTMLLineBreaks: function(string) {
    return string.replace(/<br>/gi, "\n").replace(/<br\/>/gi, "\n").replace(/<\/p>/gi, "\n").replace(/<p>/gi, "");
  },
  createEditField: function() {
    var text;
    if(this.options.loadTextURL) {
      text = this.options.loadingText;
    } else {
      text = this.getText();
    }

    var obj = this;
    
    if (this.options.rows == 1 && !this.hasHTMLLineBreaks(text)) {
      this.options.textarea = false;
      var textField = document.createElement("input");
      textField.obj = this;
      textField.type = "text";
      textField.name = "value";
      textField.value = text;
      textField.style.backgroundColor = this.options.highlightcolor;
      textField.className = 'editor_field';
      var size = this.options.size || this.options.cols || 0;
      if (size != 0) textField.size = size;
      if (this.options.submitOnBlur)
        textField.onblur = this.onSubmit.bind(this);
      this.editField = textField;
    } else {
      this.options.textarea = true;
      var textArea = document.createElement("textarea");
      textArea.obj = this;
      textArea.name = "value";
      textArea.value = this.convertHTMLLineBreaks(text);
      textArea.rows = this.options.rows;
      textArea.cols = this.options.cols || 40;
      textArea.className = 'editor_field';      
      if (this.options.submitOnBlur)
        textArea.onblur = this.onSubmit.bind(this);
      this.editField = textArea;
    }
    
    if(this.options.loadTextURL) {
      this.loadExternalText();
    }
    this.form.appendChild(this.editField);
  },
  getText: function() {
    return this.element.innerHTML;
  },
  loadExternalText: function() {
    Element.addClassName(this.form, this.options.loadingClassName);
    this.editField.disabled = true;
    new Ajax.Request(
      this.options.loadTextURL,
      Object.extend({
        asynchronous: true,
        onComplete: this.onLoadedExternalText.bind(this)
      }, this.options.ajaxOptions)
    );
  },
  onLoadedExternalText: function(transport) {
    Element.removeClassName(this.form, this.options.loadingClassName);
    this.editField.disabled = false;
    this.editField.value = transport.responseText.stripTags();
  },
  onclickCancel: function() {
    this.onComplete();
    this.leaveEditMode();
    return false;
  },
  onFailure: function(transport) {
    this.options.onFailure(transport);
    if (this.oldInnerHTML) {
      this.element.innerHTML = this.oldInnerHTML;
      this.oldInnerHTML = null;
    }
    return false;
  },
  onSubmit: function() {
    // onLoading resets these so we need to save them away for the Ajax call
    var form = this.form;
    var value = this.editField.value;
    
    // do this first, sometimes the ajax call returns before we get a chance to switch on Saving...
    // which means this will actually switch on Saving... *after* we've left edit mode causing Saving...
    // to be displayed indefinitely
    this.onLoading();
    
    if (this.options.evalScripts) {
      new Ajax.Request(
        this.url, Object.extend({
          parameters: this.options.callback(form, value),
          onComplete: this.onComplete.bind(this),
          onFailure: this.onFailure.bind(this),
          asynchronous:true, 
          evalScripts:true
        }, this.options.ajaxOptions));
    } else  {
      new Ajax.Updater(
        { success: this.element,
          // don't update on failure (this could be an option)
          failure: null }, 
        this.url, Object.extend({
          parameters: this.options.callback(form, value),
          onComplete: this.onComplete.bind(this),
          onFailure: this.onFailure.bind(this)
        }, this.options.ajaxOptions));
    }
    // stop the event to avoid a page refresh in Safari
    if (arguments.length > 1) {
      Event.stop(arguments[0]);
    }
    return false;
  },
  onLoading: function() {
    this.saving = true;
    this.removeForm();
    this.leaveHover();
    this.showSaving();
  },
  showSaving: function() {
    this.oldInnerHTML = this.element.innerHTML;
    this.element.innerHTML = this.options.savingText;
    Element.addClassName(this.element, this.options.savingClassName);
    this.element.style.backgroundColor = this.originalBackground;
    Element.show(this.element);
  },
  removeForm: function() {
    if(this.form) {
      if (this.form.parentNode) Element.remove(this.form);
      this.form = null;
    }
  },
  enterHover: function() {
    if (this.saving) return;
    this.element.style.backgroundColor = this.options.highlightcolor;
    if (this.effect) {
      this.effect.cancel();
    }
    Element.addClassName(this.element, this.options.hoverClassName)
  },
  leaveHover: function() {
    if (this.options.backgroundColor) {
      this.element.style.backgroundColor = this.oldBackground;
    }
    Element.removeClassName(this.element, this.options.hoverClassName)
    if (this.saving) return;
    this.effect = new Effect.Highlight(this.element, {
      startcolor: this.options.highlightcolor,
      endcolor: this.options.highlightendcolor,
      restorecolor: this.originalBackground
    });
  },
  leaveEditMode: function() {
    Element.removeClassName(this.element, this.options.savingClassName);
    this.removeForm();
    this.leaveHover();
    this.element.style.backgroundColor = this.originalBackground;
    Element.show(this.element);
    if (this.options.externalControl) {
      Element.show(this.options.externalControl);
    }
    this.editing = false;
    this.saving = false;
    this.oldInnerHTML = null;
    this.onLeaveEditMode();
  },
  onComplete: function(transport) {
    this.leaveEditMode();
    this.options.onComplete.bind(this)(transport, this.element);
  },
  onEnterEditMode: function() {},
  onLeaveEditMode: function() {},
  dispose: function() {
    if (this.oldInnerHTML) {
      this.element.innerHTML = this.oldInnerHTML;
    }
    this.leaveEditMode();
    Event.stopObserving(this.element, 'click', this.onclickListener);
    Event.stopObserving(this.element, 'mouseover', this.mouseoverListener);
    Event.stopObserving(this.element, 'mouseout', this.mouseoutListener);
    if (this.options.externalControl) {
      Event.stopObserving(this.options.externalControl, 'click', this.onclickListener);
      Event.stopObserving(this.options.externalControl, 'mouseover', this.mouseoverListener);
      Event.stopObserving(this.options.externalControl, 'mouseout', this.mouseoutListener);
    }
  }
};

Ajax.InPlaceCollectionEditor = Class.create();
Object.extend(Ajax.InPlaceCollectionEditor.prototype, Ajax.InPlaceEditor.prototype);
Object.extend(Ajax.InPlaceCollectionEditor.prototype, {
  createEditField: function() {
    if (!this.cached_selectTag) {
      var selectTag = document.createElement("select");
      var collection = this.options.collection || [];
      var optionTag;
      collection.each(function(e,i) {
        optionTag = document.createElement("option");
        optionTag.value = (e instanceof Array) ? e[0] : e;
        if(this.options.value==optionTag.value) optionTag.selected = true;
        optionTag.appendChild(document.createTextNode((e instanceof Array) ? e[1] : e));
        selectTag.appendChild(optionTag);
      }.bind(this));
      this.cached_selectTag = selectTag;
    }

    this.editField = this.cached_selectTag;
    if(this.options.loadTextURL) this.loadExternalText();
    this.form.appendChild(this.editField);
    this.options.callback = function(form, value) {
      return "value=" + encodeURIComponent(value);
    }
  }
});

// Delayed observer, like Form.Element.Observer, 
// but waits for delay after last key input
// Ideal for live-search fields

Form.Element.DelayedObserver = Class.create();
Form.Element.DelayedObserver.prototype = {
  initialize: function(element, delay, callback) {
    this.delay     = delay || 0.5;
    this.element   = $(element);
    this.callback  = callback;
    this.timer     = null;
    this.lastValue = $F(this.element); 
    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListener(this));
  },
  delayedListener: function(event) {
    if(this.lastValue == $F(this.element)) return;
    if(this.timer) clearTimeout(this.timer);
    this.timer = setTimeout(this.onTimerEvent.bind(this), this.delay * 1000);
    this.lastValue = $F(this.element);
  },
  onTimerEvent: function() {
    this.timer = null;
    this.callback(this.element, $F(this.element));
  }
};

/*
     FILE ARCHIVED ON 03:24:07 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:36 Apr 04, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/_jhttp://web.archive.org/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/controls.js?1147216498O	Übplist00ÔX$versionX$objectsY$archiverT$top  ¯*#)*0123WXYZ[\]^_`abcdefghijklmnopqrstuyzU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 )(Ó$%'(WNS.base[NS.relative _jhttp://web.archive.org/web/20071020032407js_/http://wiki.rubygarden.org/javascripts/controls.js?1147216498Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?ÝÏ ÈÓ456FVWNS.keysZNS.objects¯789:;<=>?@ABCDE	
¯GHIJKLMNOPQRSTU !"#$%&'\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Guessed-Charset\X-Page-CacheTDate^Content-Length_X-Archive-Playback_X-Archive-Orig-connectionZConnection_text/javascript; charset=utf-8_Tue, 09 May 2006 23:14:58 GMT_Sat, 20 Oct 2007 03:24:07 GMT]Tengine/2.1.0U28036_Sat, 20 Oct 2007 03:26:31 GMT_ù<http://wiki.rubygarden.org/javascripts/controls.js?1147216498>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/javascripts/controls.js?1147216498>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/javascripts/controls.js?1147216498>; rel="timegate", <http://web.archive.org/web/20060615185242/http://wiki.rubygarden.org:80/javascripts/controls.js?1147216498>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:52:42 GMT", <http://web.archive.org/web/20061208040853/http://wiki.rubygarden.org:80/javascripts/controls.js?1147216498>; rel="prev memento"; datetime="Fri, 08 Dec 2006 04:08:53 GMT", <http://web.archive.org/web/20071020032407/http://wiki.rubygarden.org/javascripts/controls.js?1147216498>; rel="memento"; datetime="Sat, 20 Oct 2007 03:24:07 GMT", <http://web.archive.org/web/20071020032407/http://wiki.rubygarden.org/javascripts/controls.js?1147216498>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:24:07 GMT"_"44612272-6d84-480484"Uutf-8TMISS_Tue, 04 Apr 2017 12:04:36 GMTU28535Q0UcloseZkeep-aliveÒ+,vw_NSMutableDictionary£vx/\NSDictionary_text/javascriptÒ+,{|_NSHTTPURLResponse£}~/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 d j         £ ¦ © ¬ ¯ ² ´ ¶ ¸ º ¼ ½ ¿ Á Ã Å Ç É Ë Ò Ú æ è ê ìY^irx{ «½¿ÁÃÅÇÉËÍÏÑÓÕ×ÙÛíïñóõ÷ùûýÿ	9LSs¤ÀÍÒáö>^~²¯ÈÎÓóùû'+8JOcg{´                           ¶Õ:*;<Oï// Place your application-specific JavaScript functions and classes here
// This file is automatically included by javascript_include_tag :defaults

function toggleLayer(whichLayer)
{
  if (document.getElementById)
  {
    // this is the way the standards work
    var style2 = document.getElementById(whichLayer).style;
    style2.display = style2.display? "":"inline";
  }
  else if (document.all)
  {
    // this is the way old msie versions work
    var style2 = document.all[whichLayer].style;
    style2.display = style2.display? "":"inline";
  }
  else if (document.layers)
  {
    // this is the way nn4 works
    var style2 = document.layers[whichLayer].style;
    style2.display = style2.display? "":"inline";
  }
}


// This script and many more are available free online at
// The JavaScript Source!! http://web.archive.org/web/20071020032216/http://javascript.internet.com
// John Munn  (jrmunn@home.com)

// The second number in the "onLoad" command in the body
// tag determines the form's focus. Counting starts with '0'
//
// Usage:   <body onLoad="putFocus(0,0);">
//
function putFocus(formInst, elementInst) {
  if (document.forms.length > 0) {
   document.forms[formInst].elements[elementInst].focus();
  }
 }

/*
     FILE ARCHIVED ON 03:22:16 Oct 20, 2007 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:04:36 Apr 04, 2017.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/_mhttp://web.archive.org/web/20070711135306js_/http://wiki.rubygarden.org/javascripts/application.js?1147216498O	ñbplist00ÔX$versionX$objectsY$archiverT$top  ¯*#)*0123WXYZ[\]^_`abcdefghijklmnopqrstuyzU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 )(Ó$%'(WNS.base[NS.relative _mhttp://web.archive.org/web/20071020032216js_/http://wiki.rubygarden.org/javascripts/application.js?1147216498Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?ÝÛý ÈÓ456FVWNS.keysZNS.objects¯789:;<=>?@ABCDE	
¯GHIJKLMNOPQRSTU !"#$%&'\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_X-Archive-Orig-etag_X-Archive-Guessed-Charset\X-Page-CacheTDate^Content-Length_X-Archive-Playback_X-Archive-Orig-connectionZConnection_text/javascript; charset=utf-8_Tue, 09 May 2006 23:14:58 GMT_Sat, 20 Oct 2007 03:22:16 GMT]Tengine/2.1.0T1188_Sat, 20 Oct 2007 03:24:40 GMT_<http://wiki.rubygarden.org/javascripts/application.js?1147216498>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/javascripts/application.js?1147216498>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/javascripts/application.js?1147216498>; rel="timegate", <http://web.archive.org/web/20060615185344/http://wiki.rubygarden.org:80/javascripts/application.js?1147216498>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:53:44 GMT", <http://web.archive.org/web/20061211232620/http://wiki.rubygarden.org:80/javascripts/application.js?1147216498>; rel="prev memento"; datetime="Mon, 11 Dec 2006 23:26:20 GMT", <http://web.archive.org/web/20071020032216/http://wiki.rubygarden.org/javascripts/application.js?1147216498>; rel="memento"; datetime="Sat, 20 Oct 2007 03:22:16 GMT", <http://web.archive.org/web/20071020032216/http://wiki.rubygarden.org/javascripts/application.js?1147216498>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:22:16 GMT"_"44612272-4a4-48047f"Uutf-8TMISS_Tue, 04 Apr 2017 12:04:36 GMTT1519Q0UcloseZkeep-aliveÒ+,vw_NSMutableDictionary£vx/\NSDictionary_text/javascriptÒ+,{|_NSHTTPURLResponse£}~/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 d j         £ ¦ © ¬ ¯ ² ´ ¶ ¸ º ¼ ½ ¿ Á Ã Å Ç É Ë Ò Ú æ è ê ì\alu{~£®ÀÂÄÆÈÊÌÎÐÒÔÖØÚÜÞðòôöøúüþ 
<OVv§ÃÐÕäù Aa´ÆÞäé	!&<@M_dx|°³É                           ËÔ>?@AOPNG

   IHDR   n   '   anê   	pHYs       
OiCCPPhotoshop ICC profile  xÚSgTSé=÷ÞôBKKoR RB&*!	J!¡ÙQÁEEÈ Q,
Øä!¢£Êûá{£kÖ¼÷æÍþµ×>ç¬ó³ÏÀH3Q5©BàÇÄÆáä.@
$p ³d!sý# ø~<<+"À¾ xÓ ÀMÀ0ÿêB\Àt8K @zB¦ @F&S   `Ëcbã P- `'æÓ ø{ [!   eD h; ¬ÏVE X0 fKÄ9 Ø- 0IWfH °· ÀÎ²  0Q) { `È##x  FòW<ñ+®ç*  x²<¹$9E[-qWW.(ÎI+6aa@.Ây24àóÌ   àóýxÎ®ÎÎ6¶_-ê¿ÿ"bbãþåÏ«p@  át~Ñþ,/³;mþ¢%îh^ u÷f²@µ  éÚWópø~<<E¡¹ÙÙåääØJÄB[aÊW}þgÂ_ÀWýlù~<ü÷õà¾â$2]GøàÂÌôL¥Ï	bÜæGü·ÿüÓ"ÄIb¹X*ãQqDó2¥"B)Å%Òÿdâß,û>ß5 °j>{-¨]cöK'XtÀâ÷  ò»oÁÔ(háÏwÿï?ýG % fIq  ^D$.TÊ³?Ç  D *°AôÁ,ÀÁÜÁü`6B$ÄÂBB
dr`)¬B(Í°*`/Ô@4ÀQhp.ÂU¸=púaÁ(¼	AÈa!ÚbX#ø!ÁH$ ÉQ"K5H1RT UHò=r9\Fº;È 2ü¼G1²Q=ÔµC¹¨7F¢Ðdt1 Ðr´=6¡çÐ«hÚ>CÇ0Àè3Äl0.ÆÃB±8,	cË±"¬«Æ°V¬»õcÏ±wEÀ	6wB aAHXLXNØH¨ $4Ú	7	QÂ'"¨K´&ºùÄb21XH,#Ö/{CÄ7$C2'¹I±¤TÒÒFÒnR#é,©4H#ÉÚdk²9, +ÈääÃä3ää!ò[
b@q¤øSâ(RÊjJåå4åe2AU£RÝ¨¡T5ZB­¡¶R¯Q¨4u9ÍIK¥­¢Óhh÷i¯ètºÝNÐWÒËéGèèôwÇg(gw¯L¦ÓÇT071ëçoUX*¶*|Ê
J&*/T©ª¦ªÞªUóUËT©^S}®FU3Sã©	Ô«UªPëSSg©;¨ªg¨oT?¤~YýYÃLÃOC¤Q ±_ã¼Æ c³x,!k«u5Ä&±ÍÙ|v*»ý»=ª©¡9C3J3W³Róf?ãqøtN	ç(§ó~Þï)â)¦4L¹1e\kªX«H«Q«Gë½6®í§¦½E»YûAÇJ'\'GgÎçSÙSÝ§
§M=:õ®.ªk¥¡»Dw¿n§î¾^Lo§Þy½çú}/ýTýmú§õGX³$ÛÎ<Å5qo</ÇÛñQC]Ã@C¥aaá¹Ñ<£ÕFFiÆ\ã$ãmÆmÆ£&&!&KMêMîRM¹¦)¦;L;LÇÍÌÍ¢ÍÖ5=1×2çç×ß·`ZxZ,¶¨¶¸eI²äZ¦Yî¶¼nZ9Y¥XUZ]³F­­%Ö»­»§§¹NN«ÖgÃ°ñ¶É¶©·°åØÛ®¶m¶}agbg·Å®Ãî½}º}ý=Ù«Z~s´r:V:ÞÎî?}Åôé/gXÏÏØ3ã¶Ë)ÄiSÓGgg¹sóKË.>.ÆÝÈ½äJtõq]ázÒõ³Âí¨Û¯î6îiîÜÌ4)Y3sÐÃÈCàQåÑ?0kß¬~OCOgµç#/c/W­×°·¥wª÷aï>ö>rã>ã<7Þ2ÞY_Ì7À·È·ËOÃo_ßC#ÿdÿzÿÑ §%gA[ûøz|!¿?:Ûeö²ÙíA ¹AA­åÁ­!hÈì­!÷çÎÎiP~èÖÐaæaÃ~'W?pXÑ15wÑÜCsßDúDDÞg1O9¯-J5*>ª.j<Ú7º4º?Æ.fYÌÕXXIlK9.*®6nl¾ßüíóââã{/È]py¡ÎÂô§©.,:@LN8ðA*¨%òw%
yÂÂg"/Ñ6ÑØC\*NòH*Mzì¼5y$Å3¥,å¹'©¼LLÝ:v m2=:½1qBª!M¶gêgæfvË¬e²þÅn·/Ék³¬Y-
¶B¦èTZ(×*²geWf¿ÍÊ9«+ÍíÌ³ÊÛ7ïÿíÂá¶¥KW-Xæ½¬j9²<qyÛ
ã+V¬<¸¶*mÕO«íW®~½&zMk^ÁÊÁµkëU
å}ëÜ×í]OX/Yßµaú>®ÛØ(ÜxåoÊ¿Ü´©«Ä¹dÏfÒféæÞ-[ªænÙÚ´ßV´íõöEÛ/Í(Û»¶C¹£¿<¸¼e§ÉÎÍ;?T¤TôTúT6îÒÝµa×ønÑî{¼ö4ìÕÛ[¼÷ý>É¾ÛUUMÕfÕeûIû³÷?®ªéøûm]­NmqíÇÒý#¶×¹ÔÕÒ=TRÖ+ëGÇ¾þïw-6UÆâ#pDyäé÷	ß÷:Úv{¬áÓvg/jBòFSû[b[ºOÌ>ÑÖêÞzüGÛ4<YyJóTÉiÚéÓgòÏ}~.ùÜ`Û¢¶{çcÎßjoïºtáÒEÿç;¼;Î\ò¸tò²ÛåW¸W¯:_mêtê<þÓOÇ»»®¹\k¹îz½µ{f÷é7ÎÝô½yñÿÖÕ9=Ý½ózo÷Å÷õßÝ~r'ýÎË»Ùw'î­¼O¼_ô@íAÙCÝÕ?[þÜØïÜjÀw óÑÜG÷ÏþõCËë8>99â?rýéü§CÏdÏ&þ¢þË®/~øÕë×ÎÑÑ¡ò¿m|¥ýêÀë¯ÛÆÂÆ¾Éx31^ôVûíÁwÜwï£ßOä| (ÿhù±õSÐ§ûÿóüc3-Û    cHRM  z%    ùÿ  é  u0  ê`  :  o_ÅF  ·IDATxÚìZ{tTÕ¹ÿö>y'	3dBäIòDXy¸Ä[±ëUzÑØº¸µ×Z/EmÑEK½½-,Ð«^ZBx$@H Á$fbÞÉ¼ÎÌ9gïûÇ1@J°í]ý×=çìÇoß÷íQJán»ßàN5þgYkã8®°¨çùvãâÅEE&é³KbbcµZíàààÉº:­VGTU£Õ@C}}ÿ(
Z.//!ÔÕÕu¾±QUIÙ?! õõõ·»¸¤$8ÚÚRRS »»û|c£ ¢æMÉ3L^¯÷d]Æ*BaQÆ#úñãÇ-KJJ
{$©ººÚår¥¦¦fgg^kkk;~üxLLÌ´iÓ @UÕ?Þn·744L2ã8 8yòdOOÏÌ3u:Ïç;räHAAÅbiii±ÙlF£Q¤#Gx<Jé< ÓéFÊ­·ìØ¾ý¦ ?ý÷,_¶ ¶lÞÜ×× ]½½½Þ~ûã?nþì3Ç ~õgËM&Ó§@Êk¯¼24äÚ¸aÃÖMÙíÇ÷¨ò Ïë}{ãFÖ©*Êk¯¼Ú××70ÐßÓÝ N§³¯·ïwkÖ:x°»«Ûçõ(¿ýíoËËËC¡Õ«W744üâ¿8qâëìíí-//Ü¹s§Óédï½÷Þ;úúú,YâóùXguuõ+Ø#Ö¬Y³eË X¿~}0dïlÜ¸±¦¦¦½½=4Ô_Rääôôtç ::ºìûµ}þyå&22Ê{,***33³ìûß7¡ÄÄD^×ÕÕªÑh Àn·GGGGFFFØø©©iOþ`Ñúßý®««Ûh4²Î(»=::ÚãñÁ(» âããytþ¸´	é÷;+oo>/..ã¸¶¶6Ö£ÑhRRRâãã1Æ$±ÎÚÚÚ°°°òòò×^{ÉÇqyyyýýýçÏ×jµ!yOLL,((Ðjµ  Óé.]ZYYÙØØ8nÜ8Å Z­6++Ëb±ÄÇÇ³Q¤RUUUUÙï@ öüÒ[·fÍ@?SÐk², [ªªª¢¸ÝC<Ï³% W¾þFÇOþ`ûÊãñMºú­ßð?|F¯ÛDQ>tå$·sçÎy<£ÑXYY9\V­Z1¾÷Þ{C[`ba4ëT¥···¹¹|øÆ ??RúÎ;ï:Eikk¼Þà\ûL)u¹\®ÁAæÙ)¥%÷¤¤¦þi÷nBoúýþØ3;Åü¼¢Ün÷X/þô%ËuøÐ¡+ËU<nÏâ§ÊÏ;×ÚÚT¤)ù3fÌhw8þÚ×¬³¦¦föìÙ,øà!¬ßívWTTôôô\¸põäää\¸p¡®®®¥¥Å{ÅPø|¾¬¬¬ÒÒÒ@ Ïãñttt2IIIû÷ïÏÊÊ
Íëõz'MTXXè÷û¯Y·|ùòáÏGÃh0äL1¦ªªÉó\ÁÔÂÔH))9)666´7¯×Ûïìw8Úr&M­xú		}}} À<U\||l\ÜØ±c³²³Ð¹úÎæf»ÝnµÙBÇs=·Û=sæÌôôtËÍfôz½ÅÅÅv»!  6íÀN§sâÄlýÁ`Ðf³±Ø~þùç$ö1iÒ¤Ð¼Á`°¥¥¥µµ577÷·îòÊ»¼òWþã4T=Ô«1B´Á9¢{®RLIÿíVp@ ð-ÀåÞ÷Ý<{(¡8ï?þDmè¯ööö_ÿú×UUURN'Ër0LOO_ºti~~þÍ.Ëò©S§!¹¹¹ºÝy©¤ªìª?ãòÆÄhÃmÎæOD}xDL³å´ªÊñ1±ãorè®îÙó£
t\TÌ·#§f}­SÆ²	KÑÈ×|EGdù^Ø±cGAA¢(G7n\ZZÚöíÛÏ9søðaÛ¯uær¹ÊÊÊ@MMMÈsÀÐÐN§cìv¡ø¥/<%Õ_{¶ùù~¶ÒG[vqÕÆ`w}ÒO*
ÅÝv©¯®60`Ð'¬S&ë-cêsg¼º°1ñÖ¬rgô~úiýªxãxP/iÚöûéüOë¯cÉ`yÓÓÒªÅá?uê lÛ¶­®®îñÇ;wîºuëòòòZ[[m6[UUÕþýûEQ|à&OÌØeSSBhÂ	ÇQJeY$i8jG-++{þùç+**º»»­Vkgg§,ËÌw>|¸¹¹9..núôéz½~4©PUjQ¨Jü ¤PÚ¡ê<T¦Aæ±Ôí9Xö§©IQÆ¶Èo}{ófÇOÏýô?46.åÙe­Ý(ñiÁWE³YÔëÈî¨y½«RGC÷Ö)9 Açþê`[2ÚÂ§eS&_Ñ:põ´ðèXøS¬Ó{NÔV=ýtÎ_û¢mÎ|FªyWÑfãØÞ´Zí¾}ûzè!¼®Zµj×®]'O~ôÑG=J)={öæÍEQÄëõúÞÞÞ'NX­Ö¢¢¢ØØØÅ¬^½ú7ÞHOO¿xñ"¥ô­·ÞZ¸páË/¿üæo¢(ËòÖ®]k¼:ÁT#¦c0Âa #DX£wìùËÐÙ!mºyr÷Ttÿ¡ª®ÝòáFUÇC'ÑPÕ¦¢ËJ zJ©ÈiÌçôÔì® Ë@üÇü°ù«$§±i&ýèõ'¾ãiê<ù³ý-Hdlráke¼=.t¼dÂ©8MÑ~Ü#¿ZBvîÜ6mÚ$IÒ3Ï<óþûï777ïß¿ÿÙgEñW¿úÕÖ­[/^Ìó|ooï>ØÞÞn0>øàâââììlÂp7oÞ¼-[¶ìÚµkÆÛ¶m³Z­Û·o_¶lÙ»ï¾»hÑ¢3fÜ"Xq:DCìS%ÈÂ#Ê)Á38TÀ !D¦pHÌIPB/jÚ.µTVrh1i¦Ñ>Iîn^ÿKõ²·~ÝÛíú·9qÿÿ\ûú[A¿âTFS4ê	a±VFFÆÄÏïééyóæÍ? :;;	!c·Û=kÖ¬ââb¯×[SSÓÐÐPZZº}ûv&nåååË-ÓétY,ÜÜ\f[].×íòJ¤ò  "%ª¤à¦X ïil£Þ\.¦.º/j¢b
Þ~Ïç/s~ìl­4óQþsgþNànß°D$I,£1f<Éçó±À=*¾råÊ'xbø 0ag#`B!±¢(¡Xvôü&°¼"lt}½Y®XÄH Tí×MH;¨8Æ~¥&Å´© ô2AãdYf1øJéÍÅ¿y´>U	Põ«N¶¢K. ú¦×B¯´»ãÿù!p7rÛPR¢2uÉ|3
0 w;Ú}eix~÷ïÎPîøÇ¸¯@Ðk=Án¢*__¤DUB)	G¤ú.+Õ=# èM¨sÜ²,_ïdA0ìÊáï%Uc¼ÕoP}u]D!_KZAñpä"ÕÊX1á¯FbU?!Q³À¨1Ì¡¢%ä0P"»9"Ê+ËËËóóó³²²N>=ü/¿ß?kÖ¬êêj»ÝoÍÛ0bt DO½´áõ÷þØëõa÷Ê¦p#Ø$ {Âþð_ ðÆäq={× pÃ;}2áÑ' 0ä&²@@.W0¨Bø¤ØÜiåFê©(Ê9sæÌ Ã¯ÊZ­6'' ®¿/¼»Áq(Ã/¸nJN£ïØw²aÝ.Ga¦£Q5hî;ØDz|ÆiÉ¥Os«uzôfô oh/;Î³ûd[ã5a~¿÷FZÆó$íÜ¹³£££±±ñ¯Æ[h¢(:EUUU±3»½Ô/å\MÇ±ªÓ%GÅe¶nh¤~zCBÉÖ¹»×jdG÷lµhØ±_ÏGÛ¨lq^ãDàáG?\  8¬ô#¢øy¾u÷öñdêï½ÁfÃÏ=÷ L¦áP2,Ö¯_?sæÌ¼¼¼[Pí@ ÐÜÜ<~üø´´4«ÕzYt õ#Aú³pckI':qc|h?ÝR_71£äÄÓÿ"÷ÇQz×Ç¡«CC¤îþ@oèÂÅG®ði`É¼¯ý÷xÇÓ­­­-[¶ÍæÒÒÒÐ¢(çÏ_±bßï/((øºÒöìÙu§x%@@)*×¹Sö(A¼¶'îSÑ'"?øY,8]DÌì©Bk@AWÿÎoöÞÿ`í??$_î@HÁ§OOÆ¨	 Xî2bKKK¸ÆØ1ëy}ªñæÇÞ½{G¯Î¸ä  bN£¹úk(ÀaTtµ[ÖÐ@ ( ~ Øp¦ª6Ä<|-)EU|Wçð^.Ì'ç!h@«Ôhf¹^Vñ0ø`|ke4/_>wîÜcÇÝô*k5ü¨ª!8Òæêüc%u0¨XQ":÷ÔR']¿rÑf·=Ðk°Àa!L¿²è%hxÙË
³ëÛ	ºZPJCvãF¶ª<  ¤`¤^Rùr?D²§z·H»:0.{ýê`Ð6Å®Ñ:üÎhù°kõ_m!P%ÚÛ~|Å¶R@ î«´¡9ê¥Ô©ÁÏ ¼ÜÂnp¢(2()¥¬t`ëÖ­,½Æ®!Ä2K¿_ÏTUEñ<ÏÐ¼ÞÔð×y@=î[­|ãX«¸ã»¶T#7PªÍ¶ÜI¿\:Xç´d$ªJÿP÷}¦Ì¬1¹KÖ¾ØóÙe£ UT¢ø¥¡K(.
RÔøD§W @¸{AéÀT%³^L§äx ëð À'Dé¢KÄ(Uò©AÊ<Bû	GÍÀÊ+YÚÐÐPiiéâÅwïÞM)++{äG®¯QÅjµÎ7/339.EQ!~¿ßçóEDDL0¡ººzáÂÇ3Lqqq£@~Âgõ­ø\D-'9RÀYEFõ­èY  uáBXxÕWÍzÏuèÖ8§%(yÈ+ráAª MJJúî¬sP*÷ù N>ÿæ!Ex/A,øácÇûg?s2_\Èuº(OD-cÞb²k±dÍÃÂ$RÊx!?þøÞ½{+++âââÌfsxxøÚÛÛ	!ñññ Ð××§(
C¦ª>/))é£>¦¦¦ììlÍ¦×ëóóóÍfóÚµk_~ùå/fddTTT0ª?[fÝÿþöã!n'b¦A¥ØlH¹ÿA."rä°·Öl×FÛÔ3x0aJX\â÷þ)áá§hQÐRÑh ìÈ´±ÎO*y A·¬ý²Ïwß»ÿ-wµ@PÇ¤£0N%rÉºuH¥T±Ö0ã/G5á:	¤ÿøÇV«µ  à¥^bµ¦K,éììd@µµµ@ >>¾»»;q¿¤Å3ÖÉLV«WTT,Z´H¯×swàÀÞdggøáG¯×H$îLI¯Õyà±g]úîEt1Åï®wÍöÄ_ö·õ´¾¿C;ÑjÖ¤KAÔDÎM¿eBLUÕUUÝn·Ãá°Ûí7s~#Gw§rÈnGgóî}Òe$~»@ÿÏÚÝJ¶;Öþw .V2ËIÊ    IEND®B`Yimage/png_Ehttp://web.archive.org/static/images/toolbar/wayback-toolbar-logo.pngO×bplist00ÔrsX$versionX$objectsY$archiverT$top  ¯##)*0123QRSTUVWXYZ[\]^_`abcdefghimU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 "Ó$%'(WNS.base[NS.relative _Ehttp://web.archive.org/static/images/toolbar/wayback-toolbar-logo.pngÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ýçd ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬EFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-ModifiedYimage/png]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:36 GMT[{"Total":8}T7564Q0Zkeep-alive_W/"7564-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionaryÒ+,no_NSHTTPURLResponse£pq/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑtu_WebResourceResponse    # - 2 7 ] c ~          ¢ ¥ ¨ « ­ ¯ ± ³ µ ¶ ¸ º ¼ ¾ À Â Ä Ë Ó ß á ã å-2=FLOXacelt ¢¤±³µ·¹»½¿ÁÃÅÇÉËØßäñö3>CQ_iw²¶Öâçéô38NR_dx|°³É             v              ËÔC?DEO$PNG

   IHDR         &N:   tEXtSoftware Adobe ImageReadyqÉe<   ÆIDATxÚÓ±
AaÀq.I&' tÙÌ,¼¤Øe`%¬`ñ¼Áè,6þ_o .ß9õ[nýoçÞïÞ°ï¿BÊ)¢ï)Ø£ubè`´\{þkÊzf%hÝñ;Lbâ¿V±aDÃD7eÂ&ÈkÎÄÚÃ4á9pÑfîËºK<\C;gtQÆVÚ9 Ðùú7(a«khç
XÙNówÐF»·   Æ#ÆÄ    IEND®B`_=http://web.archive.org/static/images/toolbar/wm_tb_prv_on.pngOÍbplist00ÔrsX$versionX$objectsY$archiverT$top  ¯##)*0123QRSTUVWXYZ[\]^_`abcdefghimU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 "Ó$%'(WNS.base[NS.relative _=http://web.archive.org/static/images/toolbar/wm_tb_prv_on.pngÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?ÝñZ ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬EFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-ModifiedYimage/png]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:36 GMT[{"Total":2}S292Q0Zkeep-alive_W/"292-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionaryÒ+,no_NSHTTPURLResponse£pq/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑtu_WebResourceResponse    # - 2 7 ] c ~          ¢ ¥ ¨ « ­ ¯ ± ³ µ ¶ ¸ º ¼ ¾ À Â Ä Ë Ó ß á ã å%*5>DGPY[]dlw©«­¯±³µ·¹»½¿ÁÃÐ×Üéî+6;IWaoª®ÎÚÞàë	).DHUZnr¦©¿             v              ÁÔG?HIO&PNG

   IHDR         &N:   tEXtSoftware Adobe ImageReadyqÉe<   ÈIDATxÚÒÏ
AÀñÁ&9¹(yWí;pä)rP®)?yWÊAùSÊ¸8psPÂwj§ö°1¿_}ÚÚú6³3qÝÏT)5ÂN	&¶ðoÿÙÀuÄmÂàd0ÄEIh&æÈIB3ÿÐúHIB=	4qB1ÛÐLPfz ¸¡6á3´q5/ÿK´°·½3ª(Ea+ÞÑóÿÇ¯­8Uõwtp±9)®0ÆZr'_ Î4"2Ýþõ    IEND®B`_=http://web.archive.org/static/images/toolbar/wm_tb_nxt_on.pngOÍbplist00ÔrsX$versionX$objectsY$archiverT$top  ¯##)*0123QRSTUVWXYZ[\]^_`abcdefghimU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 "Ó$%'(WNS.base[NS.relative _=http://web.archive.org/static/images/toolbar/wm_tb_nxt_on.pngÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Ýúý ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬EFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-ModifiedYimage/png]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:36 GMT[{"Total":1}S294Q0Zkeep-alive_W/"294-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionaryÒ+,no_NSHTTPURLResponse£pq/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑtu_WebResourceResponse    # - 2 7 ] c ~          ¢ ¥ ¨ « ­ ¯ ± ³ µ ¶ ¸ º ¼ ¾ À Â Ä Ë Ó ß á ã å%*5>DGPY[]dlw©«­¯±³µ·¹»½¿ÁÃÐ×Üéî+6;IWaoª®ÎÚÞàë	).DHUZnr¦©¿             v              ÁÔK?LMO§PNG

   IHDR  &      HµD  nIDATxÚíÖË	0 EÁÔéÚr\ZVJ±øQ#dó0rB1ÂÁ`0ÆmdzÁ`ÔcLùÃ¶/yìÁ`Ôm!LlÎ`!L	Á&CØÁ&C!L0±9!LÂ`aÂ`0	Á&6g0Aa"L0a0ÂÄæ01!L	Á&ã5aÊ>L¶ÿ	Á&CØÁ&a00a0ÂÁ`|<Lî¾oC¸,!L0a0ÂD0ÂÄe1aÂ`0	Á&ÂÁ&ÂÁ`3ÂÁ`Ô&ëy&CèÒ|ÎÞÏ·!L\Á&C0a"Laâ²0a0ÂÁ`aÂ`%LBáÁ`TeÉÁ;O&=#é¬÷%âï    IEND®B`_http://web.archive.org/web/jsp/graph.jsp?graphdata=550_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000841_2007:6:040000130010_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000_2014:-1:000000000000_2015:-1:000000000000_2016:-1:000000000000_2017:-1:000000000000Onbplist00ÔjkX$versionX$objectsY$archiverT$top  ¯#)*0123MNOPQRSTUVWXYZ[\]^_`aeU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 Ó$%'(WNS.base[NS.relative _http://web.archive.org/web/jsp/graph.jsp?graphdata=550_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000841_2007:6:040000130010_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000_2014:-1:000000000000_2015:-1:000000000000_2016:-1:000000000000_2017:-1:000000000000Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?ÞK ÈÓ456ALWNS.keysZNS.objectsª789:;<=>?@	
ªBCEFGHIJKVServer\X-Page-Cache\Content-TypeZSet-Cookie_Transfer-Encoding_X-Archive-PlaybackTDateTLink_X-Archive-Wayback-PerfZConnection]Tengine/2.1.0TMISSYimage/png_=JSESSIONID=6D9B889E4450210A6AFE5A724F6FDDB6; Path=/; HttpOnlyXIdentityQ0_Tue, 04 Apr 2017 12:04:36 GMT_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"[{"Total":2}Zkeep-aliveÒ+,bc_NSMutableDictionary£bd/\NSDictionaryÒ+,fg_NSHTTPURLResponse£hi/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑlm_WebResourceResponse    # - 2 7 Y _ z }          ¡ ¤ § © « ­ ¯ ± ² ´ ¶ ¸ º ¼ ¾ À Ç Ï Û Ý ß áëðû
!#*2=HJLNPRTVXZ\gikmoqsuwy{}©½Ò×Üõ ]fhÃÏÚßõù#7EWZp             n              rÔO?PQOPNG

   IHDR         Vu\ç   tEXtSoftware Adobe ImageReadyqÉe<   ¶IDATxÚl1
AE­ë
¶¨ÖFmô*¢"x mö
³?¬1dàIþgÈ¡DD`6 ÚÒk0ãð	ÜAæÄg`ÎÍ41µ@Ó#"²+8¹Þôê,0yq_wPÚàv¯ýÎWð{º
Ò¨Ó#ÉÞàlØv%ZÄy¿4ôJ°ÒÁìùÊàkôäq\W 2ÐHF\    IEND®B`_<http://web.archive.org/static/images/toolbar/wm_tb_close.pngOÌbplist00ÔrsX$versionX$objectsY$archiverT$top  ¯##)*0123QRSTUVWXYZ[\]^_`abcdefghimU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 "Ó$%'(WNS.base[NS.relative _<http://web.archive.org/static/images/toolbar/wm_tb_close.pngÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Þí ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬EFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-ModifiedYimage/png]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:37 GMT[{"Total":4}S276Q0Zkeep-alive_W/"276-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionaryÒ+,no_NSHTTPURLResponse£pq/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑtu_WebResourceResponse    # - 2 7 ] c ~          ¢ ¥ ¨ « ­ ¯ ± ³ µ ¶ ¸ º ¼ ¾ À Â Ä Ë Ó ß á ã å$)4=CFOXZ\ckv¨ª¬®°²´¶¸º¼¾ÀÂÏÖÛèí*5:HV`n©­ÍÙÝßê(-CGTYmq¥¨¾             v              ÀÔS?TUOjPNG

   IHDR         Vu\ç   tEXtSoftware Adobe ImageReadyqÉe<  "iTXtXML:com.adobe.xmp     <?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?> <x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        "> <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"> <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/" xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#" xmp:CreatorTool="Adobe Photoshop CS5 Macintosh" xmpMM:InstanceID="xmp.iid:C2E66A698EA611DFAAB39E9A7DBB4EEF" xmpMM:DocumentID="xmp.did:C2E66A6A8EA611DFAAB39E9A7DBB4EEF"> <xmpMM:DerivedFrom stRef:instanceID="xmp.iid:C2E66A678EA611DFAAB39E9A7DBB4EEF" stRef:documentID="xmp.did:C2E66A688EA611DFAAB39E9A7DBB4EEF"/> </rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end="r"?>Yð`   ÞIDATxÚbüÿÿ?CÈÆP	Ä@¬Ä¿øOâ5 É5þLP@ ÄËØÙx5 ± H!LC 7@Ù;XåøT¬ã5hñ_ ~
ÄÍ@ü_ñR¨¼0+,P. îâÿP·Ã~Ä5üb@ÜPÿxBÉâ­ÈÐÁ* ö:+Á$°(æ*(dÅølhâH¡DPÃ1¨í@ü) Þe[£ÛM(>¾13Z@ %v+àt     IEND®B`_;http://web.archive.org/static/images/toolbar/wm_tb_help.pngOÍbplist00ÔrsX$versionX$objectsY$archiverT$top  ¯##)*0123QRSTUVWXYZ[\]^_`abcdefghimU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 "Ó$%'(WNS.base[NS.relative _;http://web.archive.org/static/images/toolbar/wm_tb_help.pngÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Þz ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬EFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-ModifiedYimage/png]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:37 GMT[{"Total":1}T1130Q0Zkeep-alive_W/"1130-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionaryÒ+,no_NSHTTPURLResponse£pq/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑtu_WebResourceResponse    # - 2 7 ] c ~          ¢ ¥ ¨ « ­ ¯ ± ³ µ ¶ ¸ º ¼ ¾ À Â Ä Ë Ó ß á ã å#(3<BENWY[bju§©«­¯±³µ·¹»½¿ÁÎÕÚçì)49GU_m¨¬ÌØÝßê	).DHUZnr¦©¿             v              ÁÔWXYZOfunction getFrameArea(frame) {
  if(frame.innerWidth) return frame.innerWidth * frame.innerHeight;
  if(frame.document.documentElement && frame.document.documentElement.clientHeight) return frame.document.documentElement.clientWidth * frame.document.documentElement.clientHeight;
  if(frame.document.body) return frame.document.body.clientWidth * frame.document.body.clientHeight;
  return 0;
}

function isLargestFrame() {
	if(top == self) {
		return true;
	}
	if(top.document.body.tagName == "BODY") {
		return false;
	}
	largestArea = 0;
	largestFrame = null;
	for(i=0;i<top.frames.length;i++) {
		frame = top.frames[i];
		area = getFrameArea(frame);
		if(area > largestArea) {
			largestFrame = frame;
			largestArea = area;
		}
	}
	return (self == largestFrame);
}

function disclaimElement(element) {
	if(isLargestFrame()) {
		element.style.display="block";
		document.body.insertBefore(element,document.body.firstChild);
	}
}

function disclaimToggle(largest, nonLargest) {
	if(isLargestFrame()) {
		largest.style.display="block";
		nonLargest.style.display="none";
	} else {
		largest.style.display="none";
		nonLargest.style.display="block";
	}
}

_application/javascript_4http://web.archive.org/static/js/disclaim-element.jsOñbplist00ÔstX$versionX$objectsY$archiverT$top  ¯$#)*0123QRSTUVWXYZ[\]^_`abcdefghimnU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 #"Ó$%'(WNS.base[NS.relative _4http://web.archive.org/static/js/disclaim-element.jsÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Þ"O ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬DEFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-Modified_application/javascript]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:35 GMT[{"Total":1}T1157Q0Zkeep-alive_W/"1157-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionary_application/javascriptÒ+,op_NSHTTPURLResponse£qr/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑuv_WebResourceResponse    # - 2 7 ^ d            £ ¦ © ¬ ® ° ² ´ ¶ · ¹ » ½ ¿ Á Ã Å Ì Ô à â ä æ"-6<?HQSU\do|~¡£¥§©«­¯±³µ·¹»ÈÏÔáæÿ#.3AOhv±µÕáæèó27MQ^w|¨¶ÈËá             w              ãÔ\]^_OÖfunction getEventX(event) {
	var posx = 0;
	if (event.pageX || event.pageY) {
		posx =  event.pageX;
	}
	else if (event.clientX || event.clientY) 	{
		posx = event.clientX + document.body.scrollLeft
			+ document.documentElement.scrollLeft;
	}
	return posx;
}
function getOffset(elem) {
  var box = (typeof elem.getBoundingClientRect !== 'undefined') ?
    elem.getBoundingClientRect() : {top: 0, left: 0};
  var w = window, d = elem.ownerDocument.documentElement;
  return {
    top: box.top + (w.pageYOffset || d.scrollTop) - (d.clientTop || 0),
    left: box.left + (w.pageXOffset || d.scrollLeft) - (d.clientLeft || 0)
  };
}
function getElementX(obj) {
  return Math.round(getOffset(obj).left);
}
function zeroPad(str,len) {
	var i;
	var pad = "";
	var s = str.toString();
	for(i=s.length; i < len; i++) {
		pad = "0".toString() + pad.toString();
	}
	return pad.toString() + s.toString();
}

function dateToTimestamp(date) {
	return date.getFullYear() +
		zeroPad(date.getMonth()+1,2) +
		zeroPad(date.getDay()+1,2) +
		zeroPad(date.getHours(),2) +
		zeroPad(date.getMinutes(),2) +
		zeroPad(date.getSeconds(),2);
}

function calcTimestamp(event,element,firstMS,lastMS) {
	  var eventX = getEventX(event);
	  var elementX = getElementX(element);
	  var elementWidth = element.width;
	  var msWidth = lastMS - firstMS;
	  var x = eventX - elementX;
	  var pct = x / elementWidth;
	  var pctDate = pct * msWidth;
	  var date = pctDate + firstMS;
	  return dateToTimestamp(new Date(date));
}
_application/javascript_.http://web.archive.org/static/js/graph-calc.jsOëbplist00ÔstX$versionX$objectsY$archiverT$top  ¯$#)*0123QRSTUVWXYZ[\]^_`abcdefghimnU$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 #"Ó$%'(WNS.base[NS.relative _.http://web.archive.org/static/js/graph-calc.jsÒ+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Þ+¿ ÈÓ456CPWNS.keysZNS.objects¬789:;<=>?@AB	
¬DEFGHIJKLMNO !\Content-TypeVServerTLink\X-Page-CacheTDate_X-Archive-Wayback-Perf^Content-Length_X-Archive-PlaybackZConnectionTEtag]Accept-Ranges]Last-Modified_application/javascript]Tengine/2.1.0_8<http://mementoweb.org/terms/donotnegotiate>; rel="type"SHIT_Tue, 04 Apr 2017 12:04:35 GMT[{"Total":0}T1494Q0Zkeep-alive_W/"1494-1449087168000"Ubytes_Wed, 02 Dec 2015 20:12:48 GMTÒ+,jk_NSMutableDictionary£jl/\NSDictionary_application/javascriptÒ+,op_NSHTTPURLResponse£qr/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑuv_WebResourceResponse    # - 2 7 ^ d            £ ¦ © ¬ ® ° ² ´ ¶ · ¹ » ½ ¿ Á Ã Å Ì Ô à â ä æ'069BKMOV^ivxz|~¡£¥§©«­¯±³µÂÉÎÛàù(-;Ibp«¯ÏÛàâí,1GKXqv¢°ÂÅÛ             w              ÝÔa?bcOüPNG

   IHDR         óÿa   gAMA  ¯È7é   tEXtSoftware Adobe ImageReadyqÉe<  IDATxÚtMHTQßsî;£:CÊDi­¤\øQPDH"s´ljDQ`È-[å&[A.ªEdXZQÈäOBâUgæþÓwÎ½3Òï¹ð½ïy¾acçÊdíõËp0z1¾ñ,þ¦`¾ ìû÷âSñDÆ[[7ÎõÉMgáIFd]æÇ'2üyµEH2òÖø3ã¿Æÿ+ÖÄÒ¢Sa«¤Hm
.¢øÈ÷Ãü!0oeØ/\ÕgD8äÊò¯Àýøby,Z	ëàõÃlìÚ$ö(¤/Á²}iÝX/¹c?¬Ë`[5ÿê6¼ÏÏJbßÈSh%°vµ¢êÒK¾+Ýüûø<Äô60:®©öØw®ÐjÂ6¶§iÏ zv<ÙA7ûSu¸ÇµXërnù§àÞ´g);óø du
Ïo®÷%}&»%õQamòë¼'½º29ÒU ÷â®¦(këÖbe"E±pÎÖÑ;oè÷f@°ªzðÈMBæm°X%¶GO#,Z¬jWBVß¶û<{ÎûGúÖHs¾±ðm,èEc+Q	X¸ag%Ùüî¶Ôß¼º^c;3Á7¢q".ï? ·ÔzID¬bïc¥Q©´NÎ}yCfÎBÎ|f6yeï½}uéåÿYÒ¨Âé	[èÚ%b5qä¸=`ô6±·¹UÌ6u¨u¥ù¨hã%WAÍ¢iÁâ0ÊMøþ;ÿ` Q5S:éÄÇ9    IEND®B`_mhttp://web.archive.org/web/20070711135306im_/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497O	ôbplist00ÔX$versionX$objectsY$archiverT$top  ¯*#)*0123YZ[\]^_`abcdefghijklmnopqrstuvwx|U$nullÝ	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1	 )Ó$%'(WNS.base[NS.relative _mhttp://web.archive.org/web/20071020032420im_/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497Ò+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A¾Ä?Þ6 ÈÓ456GXWNS.keysZNS.objects¯789:;<=>?@ABCDEF	
¯IJKLMNOPQRSTUV !"#$%&'(\Content-Type_X-Archive-Orig-last-modified_Memento-DatetimeVServer_X-Archive-Orig-content-length_X-Archive-Orig-dateTLink_Transfer-Encoding_X-Archive-Orig-etag]Cache-Control\X-Page-CacheTDateZConnection_X-Archive-Playback_X-Archive-Orig-connection_X-Archive-Guessed-Content-TypeYimage/png_Tue, 09 May 2006 23:14:57 GMT_Sat, 20 Oct 2007 03:24:20 GMT]Tengine/2.1.0S764_Sat, 20 Oct 2007 03:26:44 GMT_<http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497>; rel="original", <http://web.archive.org/web/timemap/link/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497>; rel="timemap"; type="application/link-format", <http://web.archive.org/web/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497>; rel="timegate", <http://web.archive.org/web/20060615185332/http://wiki.rubygarden.org:80/images/feed-icon-16x16.png?1147216497>; rel="first memento"; datetime="Thu, 15 Jun 2006 18:53:32 GMT", <http://web.archive.org/web/20061208040918/http://wiki.rubygarden.org:80/images/feed-icon-16x16.png?1147216497>; rel="prev memento"; datetime="Fri, 08 Dec 2006 04:09:18 GMT", <http://web.archive.org/web/20071020032420/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497>; rel="memento"; datetime="Sat, 20 Oct 2007 03:24:20 GMT", <http://web.archive.org/web/20071020032420/http://wiki.rubygarden.org/images/feed-icon-16x16.png?1147216497>; rel="last memento"; datetime="Sat, 20 Oct 2007 03:24:20 GMT"XIdentity_"44612271-2fc-48044f"\max-age=1800TMISS_Tue, 04 Apr 2017 12:04:37 GMTZkeep-aliveQ0UcloseÒ+,yz_NSMutableDictionary£y{/\NSDictionaryÒ+,}~_NSHTTPURLResponse£/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiverÑ_WebResourceResponse    # - 2 7 d j         £ ¦ © ¬ ¯ ² ´ ¶ ¸ º ¼ ½ ¿ Á Ã Å Ç É Ë Ò Ú æ è ê ì\alu{~£®ÁÃÅÇÉËÍÏÑÓÕ×ÙÛÝßáôöøúüþ 
#BU\|«ÁÏÜáì>HhºÌÕíúÿ*,27MQ^cw{¯²È                           Ê            1   <   N   d         ¨  z  z¢  z¨  {
  {  {!  {*  {@  e  ~  ®    ¥  °÷  ±   ±6  ¶   ¶  Ë  Ë
  Ët  Õx  Õ  ô  ô  ôh  ü`  ük  2    
½ 
È ã ã ä î î¡ pÕ qA { {$ ïþ ðk úK úV iÑ j> t t) z z   ¢ ¢$ ¢l §G §P ¨x ¨¸ ­ ­ ®¼ ®ü ³Í ³Ö µ · ½ý ¾ ¿ ¿] Ä- Ä6 È¤ Èâ Í³ Í¼ ÒE Ò^ Ò × × Ým Ý Ý· â¦ â¯ å¯ æ             d             ð